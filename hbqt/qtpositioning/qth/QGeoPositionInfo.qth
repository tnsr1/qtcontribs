/*
 * $Id: QGeoPositionInfo.qth 286 2014-04-10 00:31:40Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2014 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     =
Inherit     =
Type        =
New         =
Version     = 0x050200
</CLASS>

<CODE>
#include <QtPositioning/QGeoPositionInfo>
#include <QtCore/QDateTime>

/*
 * QGeoPositionInfo()
 * QGeoPositionInfo(const QGeoCoordinate & coordinate, const QDateTime & timestamp)
 * QGeoPositionInfo(const QGeoPositionInfo & other)
 * ~QGeoPositionInfo()
 */
HB_FUNC( QT_QGEOPOSITIONINFO )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QGeoPositionInfo" ) )
   {
      __HB_RETPTRGC__( new QGeoPositionInfo( * hbqt_par_QGeoPositionInfo( 1 ) ) );
   }
   else if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QGeoCoordinate" ) && hbqt_par_isDerivedFrom( 2, "QDateTime" ) )
   {
      __HB_RETPTRGC__( new QGeoPositionInfo( * hbqt_par_QGeoCoordinate( 1 ), * hbqt_par_QDateTime( 2 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QGeoPositionInfo() );
   }
}
</CODE>

<ENUMS>
enum   Attribute { Direction, GroundSpeed, VerticalSpeed, MagneticVariation, HorizontalAccuracy, VerticalAccuracy }
</ENUMS>

<PROTOS>
qreal   attribute(QGeoPositionInfo::Attribute attribute) const
QGeoCoordinate   coordinate() const
bool   hasAttribute(QGeoPositionInfo::Attribute attribute) const
bool   isValid() const
void   removeAttribute(QGeoPositionInfo::Attribute attribute)
void   setAttribute(QGeoPositionInfo::Attribute attribute, qreal value)
void   setCoordinate(const QGeoCoordinate & coordinate)
void   setTimestamp(const QDateTime & timestamp)
QDateTime   timestamp() const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>

<VARIABLES>
</VARIABLES>

