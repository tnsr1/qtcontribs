/*
 * $Id: QDeclarativePropertyMap.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = Yes
Inherit     = QObject
Type        = 
New         = 
Version     = 0x040700
</CLASS>

<CODE>
#include <QtDeclarative/QDeclarativePropertyMap>


/*
 * QDeclarativePropertyMap ( QObject * parent = 0 )
 * virtual ~QDeclarativePropertyMap ()
 */
HB_FUNC( QT_QDECLARATIVEPROPERTYMAP )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QOBJECT" ) )
   {
      __HB_RETPTRGC__( new QDeclarativePropertyMap( hbqt_par_QObject( 1 ) ) );
   }
   else
   {      
      __HB_RETPTRGC__( new QDeclarativePropertyMap() );
   }   
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
void clear ( const QString & key )
bool contains ( const QString & key ) const
int count () const
void insert ( const QString & key, const QVariant & value )
bool isEmpty () const
QStringList keys () const
int size () const
QVariant value ( const QString & key ) const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
void valueChanged ( const QString & key, const QVariant & value )
</SIGNALS>

<VARIABLES>
</VARIABLES>



