/*
 * $Id: QDeclarativeContext.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = Yes
Inherit     = QObject
Type        = 
New         = 
Version     = 0x040700
</CLASS>

<CODE>
#include <QtDeclarative/QDeclarativeContext>


/*
 * QDeclarativeContext ( QDeclarativeEngine * engine, QObject * parent = 0 )
 * QDeclarativeContext ( QDeclarativeContext * parentContext, QObject * parent = 0 )
 * virtual ~QDeclarativeContext () 
 */
HB_FUNC( QT_QDECLARATIVECONTEXT )
{
   if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QDECLARATIVEENGINE" ) && hbqt_par_isDerivedFrom( 2, "QOBJECT" ) )
   {
      __HB_RETPTRGC__( new QDeclarativeContext( hbqt_par_QDeclarativeEngine( 1 ), hbqt_par_QObject( 2 ) ) );
   }
   else if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QDECLARATIVECONTEXT" ) && hbqt_par_isDerivedFrom( 2, "QOBJECT" ) )
   {
      __HB_RETPTRGC__( new QDeclarativeContext( hbqt_par_QDeclarativeContext( 1 ), hbqt_par_QObject( 2 ) ) );
   }   
   else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QDECLARATIVEENGINE" ) )
   {
      __HB_RETPTRGC__( new QDeclarativeContext( hbqt_par_QDeclarativeEngine( 1 ) ) );
   }   
   else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QDECLARATIVECONTEXT" ) )
   {   
      __HB_RETPTRGC__( new QDeclarativeContext( hbqt_par_QDeclarativeContext( 1 ) ) );
   }
   else
   {
      hb_errRT_BASE( EG_ARG, 9999, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
QUrl baseUrl () const
QObject * contextObject () const
QVariant contextProperty ( const QString & name ) const
QDeclarativeEngine * engine () const
bool isValid () const
QDeclarativeContext * parentContext () const
QUrl resolvedUrl ( const QUrl & src )
void setBaseUrl ( const QUrl & baseUrl )
void setContextObject ( QObject * object )
void setContextProperty ( const QString & name, QObject * value )
void setContextProperty ( const QString & name, const QVariant & value )
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>

<VARIABLES>
</VARIABLES>



