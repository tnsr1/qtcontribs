/*
 * $Id: QCameraInfo.qth 310 2014-06-02 01:38:30Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2014 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>

Inherit     =
QObject     = no
Version     = 0x050300

</CLASS>


<CODE>
#include <QtMultimedia/QCameraInfo>


/*
 * QCameraInfo(const QByteArray & name = QByteArray())
 * QCameraInfo(const QCamera & camera)
 * QCameraInfo(const QCameraInfo & other)
 * ~QCameraInfo()
 */
HB_FUNC( QT_QCAMERAINFO )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QByteArray" ) )
   {
      __HB_RETPTRGC__( new QCameraInfo( *hbqt_par_QByteArray( 1 ) ) );
   }
   else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QCamera" ) )
   {
      __HB_RETPTRGC__( new QCameraInfo( *hbqt_par_QCamera( 1 ) ) );
   }
   else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QCameraInfo" ) )
   {
      __HB_RETPTRGC__( new QCameraInfo( *hbqt_par_QCameraInfo( 1 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QCameraInfo() );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
QString   description() const
QString   deviceName() const
bool   isNull() const
int   orientation() const
QCamera::Position   position() const

QList<QCameraInfo>   availableCameras(QCamera::Position position = QCamera::UnspecifiedPosition)
QCameraInfo   defaultCamera()
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
