/*
 * $Id: QVideoSurfaceFormat.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>

Inherit     =
QObject     =
Version     = 0x040600

</CLASS>


<CODE>
#include <QtCore/QVariant>
#include <QtMultimedia/QVideoSurfaceFormat>


/*
 * QVideoSurfaceFormat ()
 * QVideoSurfaceFormat ( const QSize & size, QVideoFrame::PixelFormat format, QAbstractVideoBuffer::HandleType type = QAbstractVideoBuffer::NoHandle )
 * QVideoSurfaceFormat ( const QVideoSurfaceFormat & other )
 * ~QVideoSurfaceFormat ()
 */
HB_FUNC( QT_QVIDEOSURFACEFORMAT )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QVIDEOSURFACEFORMAT" ) )
   {
      __HB_RETPTRGC__( new QVideoSurfaceFormat( *hbqt_par_QVideoSurfaceFormat( 1 ) ) );
   }
   else if( hb_pcount() == 3 && hbqt_par_isDerivedFrom( 1, "QSIZE" ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) )
   {
      __HB_RETPTRGC__( new QVideoSurfaceFormat( *hbqt_par_QSize( 1 ), ( QVideoFrame::PixelFormat ) hb_parni( 2 ), ( QAbstractVideoBuffer::HandleType ) hb_parni( 3 ) ) );
   }
   else if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QSIZE" ) && HB_ISNUM( 2 ) )
   {
      __HB_RETPTRGC__( new QVideoSurfaceFormat( *hbqt_par_QSize( 1 ), ( QVideoFrame::PixelFormat ) hb_parni( 2 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QVideoSurfaceFormat() );
   }
}
</CODE>

<ENUMS>
enum Direction { TopToBottom, BottomToTop }
enum YCbCrColorSpace { YCbCr_Undefined, YCbCr_BT601, YCbCr_BT709, YCbCr_xvYCC601, YCbCr_xvYCC709, YCbCr_JPEG }
</ENUMS>

<PROTOS>
int frameHeight () const
qreal frameRate () const
QSize frameSize () const
int frameWidth () const
QAbstractVideoBuffer::HandleType handleType () const
bool isValid () const
QSize pixelAspectRatio () const
QVideoFrame::PixelFormat pixelFormat () const
QVariant property ( const char * name ) const
QList<QByteArray> propertyNames () const
Direction scanLineDirection () const
void setFrameRate ( qreal rate )
void setFrameSize ( const QSize & size )
void setFrameSize ( int width, int height )
void setPixelAspectRatio ( const QSize & ratio )
void setPixelAspectRatio ( int horizontal, int vertical )
void setProperty ( const char * name, const QVariant & value )
void setScanLineDirection ( Direction direction )
void setViewport ( const QRect & viewport )
void setYCbCrColorSpace ( YCbCrColorSpace space )
QSize sizeHint () const
QRect viewport () const
YCbCrColorSpace yCbCrColorSpace () const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
