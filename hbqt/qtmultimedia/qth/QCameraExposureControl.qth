/*
 * $Id: QCameraExposureControl.qth 310 2014-06-02 01:38:30Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2014 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QMediaControl
QObject     = Yes
Version     = 0x050300
Constructor = no
</CLASS>


<CODE>
#include <QtMultimedia/QCameraExposureControl>


/*
 * ~QCameraExposureControl()
 */
HB_FUNC( QT_QCAMERAEXPOSURECONTROL )
{
   HB_FUNC_EXEC( HB_QCAMERAEXPOSURECONTROL );
}
</CODE>

<ENUMS>
enum   ExposureParameter { ISO, Aperture, ShutterSpeed, ExposureCompensation, ..., ExtendedExposureParameter }
</ENUMS>

<PROTOS>
virtual QVariant   actualValue(QCameraExposureControl::ExposureParameter parameter) const = 0
virtual bool   isParameterSupported(QCameraExposureControl::ExposureParameter parameter) const = 0
virtual QVariant   requestedValue(QCameraExposureControl::ExposureParameter parameter) const = 0
virtual bool   setValue(QCameraExposureControl::ExposureParameter parameter, const QVariant & value) = 0
virtual QList<QVariant>  supportedParameterRange(QCameraExposureControl::ExposureParameter parameter, bool * continuous) const = 0
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
void   actualValueChanged(int parameter)
void   parameterRangeChanged(int parameter)
void   requestedValueChanged(int parameter)
</SIGNALS>
