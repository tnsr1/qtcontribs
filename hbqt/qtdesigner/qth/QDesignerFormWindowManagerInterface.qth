/*
 * $Id: QDesignerFormWindowManagerInterface.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject  =
Inherits = QObject
Type     =
New      =
folder   = hbqtdesigner
Constructor = no
</CLASS>

<SUBCLASS>
</SUBCLASS>

<DOC>
</DOC>

<CODE>
#include "hbqtgui.h"

#include <QtDesigner/QDesignerFormWindowManagerInterface>


/*
 * QDesignerFormWindowManagerInterface ( QObject * parent = 0 )
 * ~QDesignerFormWindowManagerInterface ()
 *
 */
HB_FUNC( QT_QDESIGNERFORMWINDOWMANAGERINTERFACE )
{
   //__HB_RETPTRGC__( new QDesignerFormWindowManagerInterface() );
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
virtual QAction * actionAdjustSize () const
virtual QAction * actionBreakLayout () const
virtual QAction * actionCopy () const
virtual QAction * actionCut () const
virtual QAction * actionDelete () const
QAction * actionFormLayout () const
virtual QAction * actionGridLayout () const
virtual QAction * actionHorizontalLayout () const
virtual QAction * actionLower () const
virtual QAction * actionPaste () const
virtual QAction * actionRaise () const
virtual QAction * actionRedo () const
virtual QAction * actionSelectAll () const
QAction * actionSimplifyLayout () const
virtual QAction * actionSplitHorizontal () const
virtual QAction * actionSplitVertical () const
virtual QAction * actionUndo () const
virtual QAction * actionVerticalLayout () const
virtual QDesignerFormWindowInterface * activeFormWindow () const
virtual QDesignerFormEditorInterface * core () const
virtual QDesignerFormWindowInterface * createFormWindow ( QWidget * parent = 0, Qt::WindowFlags flags = 0 )
virtual QDesignerFormWindowInterface * formWindow ( int index ) const
virtual int formWindowCount () const
</PROTOS>

<SLOTS>
virtual void addFormWindow ( QDesignerFormWindowInterface * formWindow )
virtual void removeFormWindow ( QDesignerFormWindowInterface * formWindow )
virtual void setActiveFormWindow ( QDesignerFormWindowInterface * formWindow )
</SLOTS>

<SIGNALS>
void activeFormWindowChanged ( QDesignerFormWindowInterface * formWindow )
void formWindowAdded ( QDesignerFormWindowInterface * formWindow )
void formWindowRemoved ( QDesignerFormWindowInterface * formWindow )
</SIGNALS>
