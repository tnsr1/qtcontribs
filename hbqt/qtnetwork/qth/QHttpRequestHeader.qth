/*
 * $Id: QHttpRequestHeader.qth 163 2013-02-05 02:38:40Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Inherit     = QHttpHeader
Type        = Core
New         =
Destructor  = 
VersionUpto = 0x040900
</CLASS>

<CODE>
#include <QtNetwork/QHttpRequestHeader>


/* QHttpRequestHeader ()
 * QHttpRequestHeader ( const QString & method, const QString & path, int majorVer = 1, int minorVer = 1 )
 * QHttpRequestHeader ( const QHttpRequestHeader & header )
 * QHttpRequestHeader ( const QString & str )
 */
HB_FUNC( QT_QHTTPREQUESTHEADER )
{
   if( hb_pcount() == 1 && HB_ISCHAR( 1 ) )
   {
      void * pText01 = NULL;
      __HB_RETPTRGC__( new QHttpRequestHeader( hb_parstr_utf8( 1, &pText01, NULL ) ) );
      hb_strfree( pText01 );
   }
   else if( hb_pcount() >= 2 && HB_ISCHAR( 1 ) && HB_ISCHAR( 2 ) )
   {
      void * pText01 = NULL;
      void * pText02 = NULL;
      __HB_RETPTRGC__( new QHttpRequestHeader( hb_parstr_utf8( 1, &pText01, NULL ), hb_parstr_utf8( 2, &pText02, NULL ), HB_ISNUM( 3 ) ? hb_parni( 3 ) : 1, HB_ISNUM( 4 ) ? hb_parni( 4 ) : 1 ) );
      hb_strfree( pText01 );
      hb_strfree( pText02 );
   }
   else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QHTTPREQUESTHEADER" ) )
   {
      __HB_RETPTRGC__( new QHttpRequestHeader( *hbqt_par_QHttpRequestHeader( 1 ) ) );
   }
   else
   {   
      __HB_RETPTRGC__( new QHttpRequestHeader() );
   }   
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
virtual int majorVersion () const
QString method () const
virtual int minorVersion () const
QString path () const
void setRequest ( const QString & method, const QString & path, int majorVer = 1, int minorVer = 1 )
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
