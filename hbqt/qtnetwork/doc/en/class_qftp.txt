
/* $DOC$
   $TEMPLATE$
      Class
   $NAME$
      QFtp()
   $CATEGORY$
      Harbour Bindings for Qt
   $SUBCATEGORY$
      GUI
   $EXTERNALLINK$
      http://doc.qt.io/qt-4.5/qftp.html
   $ONELINER$
      Creates a new QFtp object.
   $INHERITS$
      QObject
   $SYNTAX$
      QFtp( ... )

   $ARGUMENTS$

   $RETURNS$
      An instance of the object of type QFtp
   $METHODS$
      :bytesAvailable()                                   -> nQint64
      :cd( cDir )                                         -> nInt
      :clearPendingCommands()                             -> NIL
      :close()                                            -> nInt
      :connectToHost( cHost, nPort )                      -> nInt
      :currentCommand()                                   -> nCommand
      :currentDevice()                                    -> oQIODevice
      :currentId()                                        -> nInt
      :error()                                            -> nError
      :errorString()                                      -> cQString
      :get( cFile, oQIODevice, nType )                    -> nInt
      :hasPendingCommands()                               -> lBool
      :list( cDir )                                       -> nInt
      :login( cUser, cPassword )                          -> nInt
      :mkdir( cDir )                                      -> nInt
      :put( oQIODevice, cFile, nType )                    -> nInt
      :( oQByteArray, cFile, nType )                      -> nInt
      :rawCommand( cCommand )                             -> nInt
      :readAll()                                          -> oQByteArray
      :remove( cFile )                                    -> nInt
      :rename( cOldname, cNewname )                       -> nInt
      :rmdir( cDir )                                      -> nInt
      :setProxy( cHost, nPort )                           -> nInt
      :setTransferMode( nMode )                           -> nInt
      :state()                                            -> nState
      :abort()                                            -> NIL

   $DESCRIPTION$

   $EXAMPLES$

   $TESTS$

   $STATUS$
      R
   $COMPLIANCE$
      Not Clipper compatible
   $PLATFORMS$
      Windows, Linux, Mac OS X, OS/2
   $VERSION$
      4.5 or upper
   $FILES$
      Library: hbqtnetwork
   $END$
 */
