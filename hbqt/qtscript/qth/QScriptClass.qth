/*
 * $Id: QScriptClass.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>

Inherit     =
QObject     =
Version     =

</CLASS>


<CODE>
#include <QtScript/QScriptClass>


/*
 * QScriptClass ( QScriptEngine * engine )
 * virtual	~QScriptClass ()
 */
HB_FUNC( QT_QSCRIPTCLASS )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QSCRIPTENGINE" ) )
   {
      __HB_RETPTRGC__( new QScriptClass( hbqt_par_QScriptEngine( 1 ) ) );
   }
   else
   {
      hb_errRT_BASE( EG_ARG, 9999, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
   }
}
</CODE>

<ENUMS>
enum Extension { Callable, HasInstance }
enum QueryFlag { HandlesReadAccess, HandlesWriteAccess }
flags QueryFlags
</ENUMS>


<PROTOS>
QScriptEngine * engine () const
virtual QVariant extension ( Extension extension, const QVariant & argument = QVariant() )
virtual QString name () const
virtual QScriptClassPropertyIterator * newIterator ( const QScriptValue & object )
virtual QScriptValue property ( const QScriptValue & object, const QScriptString & name, uint id )
virtual QScriptValue::PropertyFlags propertyFlags ( const QScriptValue & object, const QScriptString & name, uint id )
virtual QScriptValue prototype () const
virtual QueryFlags queryProperty ( const QScriptValue & object, const QScriptString & name, QueryFlags flags, uint * id )
virtual void setProperty ( QScriptValue & object, const QScriptString & name, uint id, const QScriptValue & value )
virtual bool supportsExtension ( Extension extension ) const
</PROTOS>


<SLOTS>

</SLOTS>

<SIGNALS>
</SIGNALS>
