/*
 * $Id: QDomNode.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>

Inherit     =
QObject     = no
Version     =

</CLASS>


<CODE>
#include <QtXml/QDomNode>


/*
 * QDomNode ()
 * QDomNode ( const QDomNode & n )
 * ~QDomNode ()
 */
HB_FUNC( QT_QDOMNODE )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QDOMNODE" ) )
   {
      __HB_RETPTRGC__( new QDomNode( *hbqt_par_QDomNode( 1 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QDomNode() );
   }
}
</CODE>

<ENUMS>
enum EncodingPolicy { EncodingFromDocument, EncodingFromTextStream }
enum NodeType { ElementNode, AttributeNode, TextNode, CDATASectionNode, ..., CharacterDataNode }
</ENUMS>

<PROTOS>
QDomNode appendChild ( const QDomNode & newChild )
QDomNamedNodeMap attributes () const
QDomNodeList childNodes () const
void clear ()
QDomNode cloneNode ( bool deep = true ) const
int columnNumber () const
QDomNode firstChild () const
QDomElement firstChildElement ( const QString & tagName = QString() ) const
bool hasAttributes () const
bool hasChildNodes () const
QDomNode insertAfter ( const QDomNode & newChild, const QDomNode & refChild )
QDomNode insertBefore ( const QDomNode & newChild, const QDomNode & refChild )
bool isAttr () const
bool isCDATASection () const
bool isCharacterData () const
bool isComment () const
bool isDocument () const
bool isDocumentFragment () const
bool isDocumentType () const
bool isElement () const
bool isEntity () const
bool isEntityReference () const
bool isNotation () const
bool isNull () const
bool isProcessingInstruction () const
bool isSupported ( const QString & feature, const QString & version ) const
bool isText () const
QDomNode lastChild () const
QDomElement lastChildElement ( const QString & tagName = QString() ) const
int lineNumber () const
QString localName () const
QDomNode namedItem ( const QString & name ) const
QString namespaceURI () const
QDomNode nextSibling () const
QDomElement nextSiblingElement ( const QString & tagName = QString() ) const
QString nodeName () const
NodeType nodeType () const
QString nodeValue () const
void normalize ()
QDomDocument ownerDocument () const
QDomNode parentNode () const
QString prefix () const
QDomNode previousSibling () const
QDomElement previousSiblingElement ( const QString & tagName = QString() ) const
QDomNode removeChild ( const QDomNode & oldChild )
QDomNode replaceChild ( const QDomNode & newChild, const QDomNode & oldChild )
void save ( QTextStream & str, int indent ) const
void save ( QTextStream & str, int indent, EncodingPolicy encodingPolicy ) const
void setNodeValue ( const QString & v )
void setPrefix ( const QString & pre )
QDomAttr toAttr () const
QDomCDATASection toCDATASection () const
QDomCharacterData toCharacterData () const
QDomComment toComment () const
QDomDocument toDocument () const
QDomDocumentFragment toDocumentFragment () const
QDomDocumentType toDocumentType () const
QDomElement toElement () const
QDomEntity toEntity () const
QDomEntityReference toEntityReference () const
QDomNotation toNotation () const
QDomProcessingInstruction toProcessingInstruction () const
QDomText toText () const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
