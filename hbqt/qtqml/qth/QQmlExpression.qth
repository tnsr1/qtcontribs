/*
 * $Id: QQmlExpression.qth 312 2014-06-09 05:56:42Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2014 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QObject
QObject     = Yes
Version     = 0x050300
</CLASS>


<CODE>
#include <QtQml/QQmlExpression>


/*
 * QQmlExpression()
 * QQmlExpression(QQmlContext * ctxt, QObject * scope, const QString & expression, QObject * parent = 0)
 * QQmlExpression(const QQmlScriptString & script, QQmlContext * ctxt = 0, QObject * scope = 0, QObject * parent = 0)
 * virtual   ~QQmlExpression()
 */
HB_FUNC( QT_QQMLEXPRESSION )
{
   if( hb_pcount() == 3 && hbqt_par_isDerivedFrom( 1, "QQmlContext" ) && hbqt_par_isDerivedFrom( 2, "QObject" ) && HB_ISCHAR( 3 ) )
   {
      void * pText01 = NULL;
      __HB_RETPTRGC__( new QQmlExpression( hbqt_par_QQmlContext( 1 ), hbqt_par_QObject( 2 ), hb_parstr_utf8( 3, &pText01, NULL ) ) );
      hb_strfree( pText01 );
   }
   else if( hb_pcount() == 4 && hbqt_par_isDerivedFrom( 1, "QQmlContext" ) && hbqt_par_isDerivedFrom( 2, "QObject" ) && HB_ISCHAR( 3 ) && hbqt_par_isDerivedFrom( 4, "QObject" ) )
   {
      void * pText01 = NULL;
      __HB_RETPTRGC__( new QQmlExpression( hbqt_par_QQmlContext( 1 ), hbqt_par_QObject( 2 ), hb_parstr_utf8( 3, &pText01, NULL ), hbqt_par_QObject( 4 ) ) );
      hb_strfree( pText01 );
   }
   else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QQmlScriptString" ) )
   {
      __HB_RETPTRGC__( new QQmlExpression( *hbqt_par_QQmlScriptString( 1 ) ) );
   }
   else if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QQmlScriptString" ) && hbqt_par_isDerivedFrom( 2, "QQmlContext" ) )
   {
      __HB_RETPTRGC__( new QQmlExpression( *hbqt_par_QQmlScriptString( 1 ), hbqt_par_QQmlContext( 2 ) ) );
   }
   else if( hb_pcount() == 3 && hbqt_par_isDerivedFrom( 1, "QQmlScriptString" ) && hbqt_par_isDerivedFrom( 2, "QQmlContext" ) && hbqt_par_isDerivedFrom( 3, "QObject" ) )
   {
      __HB_RETPTRGC__( new QQmlExpression( *hbqt_par_QQmlScriptString( 1 ), hbqt_par_QQmlContext( 2 ), hbqt_par_QObject( 3 ) ) );
   }
   else if( hb_pcount() == 4 && hbqt_par_isDerivedFrom( 1, "QQmlScriptString" ) && hbqt_par_isDerivedFrom( 2, "QQmlContext" ) && hbqt_par_isDerivedFrom( 3, "QObject" ) && hbqt_par_isDerivedFrom( 4, "QObject" ) )
   {
      __HB_RETPTRGC__( new QQmlExpression( *hbqt_par_QQmlScriptString( 1 ), hbqt_par_QQmlContext( 2 ), hbqt_par_QObject( 3 ), hbqt_par_QObject( 4 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QQmlExpression() );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
void   clearError()
int   columnNumber() const
QQmlContext *   context() const
QQmlEngine *   engine() const
QQmlError   error() const
QVariant   evaluate(bool * valueIsUndefined = 0)
QString   expression() const
bool   hasError() const
int   lineNumber() const
bool   notifyOnValueChanged() const
QObject *   scopeObject() const
void   setExpression(const QString & expression)
void   setNotifyOnValueChanged(bool notifyOnChange)
void   setSourceLocation(const QString & url, int line, int column = 0)
QString   sourceFile() const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
void   valueChanged()
</SIGNALS>
