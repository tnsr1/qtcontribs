/*
 * $Id: QGLFramebufferObject.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>

Inherit     = QPaintDevice
QObject     = no

</CLASS>


<CODE>
#include <QtOpenGL/QGLFramebufferObject>


/*
 * QGLFramebufferObject ( const QSize & size, GLenum target = GL_TEXTURE_2D )
 * QGLFramebufferObject ( int width, int height, GLenum target = GL_TEXTURE_2D )
 * QGLFramebufferObject ( const QSize & size, const QGLFramebufferObjectFormat & format )
 * QGLFramebufferObject ( int width, int height, const QGLFramebufferObjectFormat & format )
 * QGLFramebufferObject ( int width, int height, Attachment attachment, GLenum target = GL_TEXTURE_2D, GLenum internal_format = GL_RGBA8 )
 * QGLFramebufferObject ( const QSize & size, Attachment attachment, GLenum target = GL_TEXTURE_2D, GLenum internal_format = GL_RGBA8 )
 * virtual ~QGLFramebufferObject ()
 */
HB_FUNC( QT_QGLFRAMEBUFFEROBJECT )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QSIZE" ) )
   {
      __HB_RETPTRGC__( new QGLFramebufferObject( *hbqt_par_QSize( 1 ) ) );
   }
   else
   {
      hb_errRT_BASE( EG_ARG, 9999, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
   }
}
</CODE>

<ENUMS>
enum	Attachment { NoAttachment, CombinedDepthStencil, Depth }
</ENUMS>

<PROTOS>
Attachment attachment () const
bool bind ()
void drawTexture ( const QRectF & target, GLuint textureId, GLenum textureTarget = GL_TEXTURE_2D )
void drawTexture ( const QPointF & point, GLuint textureId, GLenum textureTarget = GL_TEXTURE_2D )
QGLFramebufferObjectFormat format () const
GLuint handle () const
bool isBound () const
bool isValid () const
bool release ()
QSize size () const
GLuint texture () const
QImage toImage () const

virtual QPaintEngine * paintEngine () const

//void blitFramebuffer ( QGLFramebufferObject * target, const QRect & targetRect, QGLFramebufferObject * source, const QRect & sourceRect, GLbitfield buffers = GL_COLOR_BUFFER_BIT, GLenum filter = GL_NEAREST )
bool hasOpenGLFramebufferBlit ()
bool hasOpenGLFramebufferObjects ()

</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
