/*
 * $Id: QGLShaderProgram.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>

Inherit     = QObject
QObject     = yes
Version     = 0x040600

</CLASS>


<CODE>
#include <QtOpenGL/QGLShaderProgram>


/*
 * QGLShaderProgram ( QObject * parent = 0 )
 * QGLShaderProgram ( const QGLContext * context, QObject * parent = 0 )
 * virtual ~QGLShaderProgram ()
 */
HB_FUNC( QT_QGLSHADERPROGRAM )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QOBJECT" ) )
   {
      __HB_RETPTRGC__( new QGLShaderProgram( hbqt_par_QObject( 1 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QGLShaderProgram() );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
bool addShader ( QGLShader * shader )
//bool addShaderFromSourceCode ( QGLShader::ShaderType type, const char * source )
bool addShaderFromSourceCode ( QGLShader::ShaderType type, const QByteArray & source )
bool addShaderFromSourceCode ( QGLShader::ShaderType type, const QString & source )
bool addShaderFromSourceFile ( QGLShader::ShaderType type, const QString & fileName )
//int attributeLocation ( const char * name ) const
int attributeLocation ( const QByteArray & name ) const
int attributeLocation ( const QString & name ) const
bool bind ()
//void bindAttributeLocation ( const char * name, int location )
void bindAttributeLocation ( const QByteArray & name, int location )
void bindAttributeLocation ( const QString & name, int location )
void disableAttributeArray ( int location )
void disableAttributeArray ( const char * name )
void enableAttributeArray ( int location )
void enableAttributeArray ( const char * name )
GLenum geometryInputType () const
GLenum geometryOutputType () const
int geometryOutputVertexCount () const
bool isLinked () const
virtual bool link ()
QString log () const
int maxGeometryOutputVertices () const
GLuint programId () const
void release ()
void removeAllShaders ()
void removeShader ( QGLShader * shader )
void setAttributeArray ( int location, const GLfloat * values, int tupleSize, int stride = 0 )
void setAttributeArray ( int location, const QVector2D * values, int stride = 0 )
void setAttributeArray ( int location, const QVector3D * values, int stride = 0 )
void setAttributeArray ( int location, const QVector4D * values, int stride = 0 )
void setAttributeArray ( int location, GLenum type, const void * values, int tupleSize, int stride = 0 )
void setAttributeArray ( const char * name, const GLfloat * values, int tupleSize, int stride = 0 )
void setAttributeArray ( const char * name, const QVector2D * values, int stride = 0 )
void setAttributeArray ( const char * name, const QVector3D * values, int stride = 0 )
void setAttributeArray ( const char * name, const QVector4D * values, int stride = 0 )
void setAttributeArray ( const char * name, GLenum type, const void * values, int tupleSize, int stride = 0 )
void setAttributeBuffer ( int location, GLenum type, int offset, int tupleSize, int stride = 0 )
void setAttributeBuffer ( const char * name, GLenum type, int offset, int tupleSize, int stride = 0 )
void setAttributeValue ( int location, GLfloat value )
void setAttributeValue ( int location, GLfloat x, GLfloat y )
void setAttributeValue ( int location, GLfloat x, GLfloat y, GLfloat z )
void setAttributeValue ( int location, GLfloat x, GLfloat y, GLfloat z, GLfloat w )
void setAttributeValue ( int location, const QVector2D & value )
void setAttributeValue ( int location, const QVector3D & value )
void setAttributeValue ( int location, const QVector4D & value )
void setAttributeValue ( int location, const QColor & value )
void setAttributeValue ( int location, const GLfloat * values, int columns, int rows )
void setAttributeValue ( const char * name, GLfloat value )
void setAttributeValue ( const char * name, GLfloat x, GLfloat y )
void setAttributeValue ( const char * name, GLfloat x, GLfloat y, GLfloat z )
void setAttributeValue ( const char * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w )
void setAttributeValue ( const char * name, const QVector2D & value )
void setAttributeValue ( const char * name, const QVector3D & value )
void setAttributeValue ( const char * name, const QVector4D & value )
void setAttributeValue ( const char * name, const QColor & value )
void setAttributeValue ( const char * name, const GLfloat * values, int columns, int rows )
void setGeometryInputType ( GLenum inputType )
void setGeometryOutputType ( GLenum outputType )
void setGeometryOutputVertexCount ( int count )

//void setUniformValue ( int location, GLfloat value )
void setUniformValue ( const char * name, const QPointF & point )
void setUniformValue ( const char * name, const QSize & size )
void setUniformValue ( const char * name, const QSizeF & size )
void setUniformValue ( const char * name, const QMatrix2x2 & value )
void setUniformValue ( const char * name, const QMatrix2x3 & value )
void setUniformValue ( const char * name, const QMatrix2x4 & value )
void setUniformValue ( const char * name, const QMatrix3x2 & value )
void setUniformValue ( const char * name, const QMatrix3x3 & value )
void setUniformValue ( const char * name, const QMatrix3x4 & value )
void setUniformValue ( const char * name, const QMatrix4x2 & value )
void setUniformValue ( const char * name, const QMatrix4x3 & value )
void setUniformValue ( const char * name, const QMatrix4x4 & value )
//void setUniformValue ( int location, const GLfloat[2][2] value )
//void setUniformValue ( int location, const GLfloat[3][3] value )
//void setUniformValue ( int location, const GLfloat[4][4] value )
//void setUniformValue ( const char * name, const GLfloat[2][2] value )
//void setUniformValue ( const char * name, const GLfloat[3][3] value )
//void setUniformValue ( const char * name, const GLfloat[4][4] value )
void setUniformValue ( const char * name, const QTransform & value )
void setUniformValue ( int location, GLint value )
//void setUniformValue ( int location, GLuint value )
void setUniformValue ( int location, GLfloat x, GLfloat y )
void setUniformValue ( int location, GLfloat x, GLfloat y, GLfloat z )
void setUniformValue ( int location, GLfloat x, GLfloat y, GLfloat z, GLfloat w )
void setUniformValue ( int location, const QVector2D & value )
void setUniformValue ( int location, const QVector3D & value )
void setUniformValue ( int location, const QVector4D & value )
void setUniformValue ( int location, const QColor & color )
void setUniformValue ( int location, const QPoint & point )
void setUniformValue ( int location, const QPointF & point )
void setUniformValue ( int location, const QSize & size )
void setUniformValue ( int location, const QSizeF & size )
void setUniformValue ( int location, const QMatrix2x2 & value )
void setUniformValue ( int location, const QMatrix2x3 & value )
void setUniformValue ( int location, const QMatrix2x4 & value )
void setUniformValue ( int location, const QMatrix3x2 & value )
void setUniformValue ( int location, const QMatrix3x3 & value )
void setUniformValue ( int location, const QMatrix3x4 & value )
void setUniformValue ( int location, const QMatrix4x2 & value )
void setUniformValue ( int location, const QMatrix4x3 & value )
void setUniformValue ( int location, const QMatrix4x4 & value )
void setUniformValue ( int location, const QTransform & value )
//void setUniformValue ( const char * name, GLfloat value )
void setUniformValue ( const char * name, GLint value )
//void setUniformValue ( const char * name, GLuint value )
void setUniformValue ( const char * name, GLfloat x, GLfloat y )
void setUniformValue ( const char * name, GLfloat x, GLfloat y, GLfloat z )
void setUniformValue ( const char * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w )
void setUniformValue ( const char * name, const QVector2D & value )
void setUniformValue ( const char * name, const QVector3D & value )
void setUniformValue ( const char * name, const QVector4D & value )
void setUniformValue ( const char * name, const QColor & color )
void setUniformValue ( const char * name, const QPoint & point )
void setUniformValueArray ( int location, const GLfloat * values, int count, int tupleSize )
void setUniformValueArray ( int location, const GLint * values, int count )
//void setUniformValueArray ( int location, const GLuint * values, int count )
void setUniformValueArray ( int location, const QVector2D * values, int count )
void setUniformValueArray ( int location, const QVector3D * values, int count )
void setUniformValueArray ( int location, const QVector4D * values, int count )
void setUniformValueArray ( int location, const QMatrix2x2 * values, int count )
void setUniformValueArray ( int location, const QMatrix2x3 * values, int count )
void setUniformValueArray ( int location, const QMatrix2x4 * values, int count )
void setUniformValueArray ( int location, const QMatrix3x2 * values, int count )
void setUniformValueArray ( int location, const QMatrix3x3 * values, int count )
void setUniformValueArray ( int location, const QMatrix3x4 * values, int count )
void setUniformValueArray ( int location, const QMatrix4x2 * values, int count )
void setUniformValueArray ( int location, const QMatrix4x3 * values, int count )
void setUniformValueArray ( int location, const QMatrix4x4 * values, int count )
void setUniformValueArray ( const char * name, const GLint * values, int count )
//void setUniformValueArray ( const char * name, const GLuint * values, int count )
void setUniformValueArray ( const char * name, const GLfloat * values, int count, int tupleSize )
void setUniformValueArray ( const char * name, const QVector2D * values, int count )
void setUniformValueArray ( const char * name, const QVector3D * values, int count )
void setUniformValueArray ( const char * name, const QVector4D * values, int count )
void setUniformValueArray ( const char * name, const QMatrix2x2 * values, int count )
void setUniformValueArray ( const char * name, const QMatrix2x3 * values, int count )
void setUniformValueArray ( const char * name, const QMatrix2x4 * values, int count )
void setUniformValueArray ( const char * name, const QMatrix3x2 * values, int count )
void setUniformValueArray ( const char * name, const QMatrix3x3 * values, int count )
void setUniformValueArray ( const char * name, const QMatrix3x4 * values, int count )
void setUniformValueArray ( const char * name, const QMatrix4x2 * values, int count )
void setUniformValueArray ( const char * name, const QMatrix4x3 * values, int count )
void setUniformValueArray ( const char * name, const QMatrix4x4 * values, int count )
QList<QGLShader *> shaders () const
//int uniformLocation ( const char * name ) const
int uniformLocation ( const QByteArray & name ) const
int uniformLocation ( const QString & name ) const

bool hasOpenGLShaderPrograms ( const QGLContext * context = 0 )

</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
