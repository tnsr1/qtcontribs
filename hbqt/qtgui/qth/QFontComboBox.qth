/*
 * $Id: QFontComboBox.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QComboBox
New         = pParent
</CLASS>

<CODE>
#include <QtGui/QFontComboBox>


/*
 * QFontComboBox ( QWidget * parent = 0 )
 * ~QFontComboBox ()
 */
HB_FUNC( QT_QFONTCOMBOBOX )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QWIDGET" ) )
   {
      __HB_RETPTRGC__( new QFontComboBox( hbqt_par_QWidget( 1 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QFontComboBox() );
   }      
}
</CODE>

<ENUMS>
enum FontFilter { AllFonts, ScalableFonts, NonScalableFonts, MonospacedFonts, ProportionalFonts }
flags FontFilters
</ENUMS>

<PROTOS>
QFont currentFont () const
FontFilters fontFilters () const
void setFontFilters ( FontFilters filters )
void setWritingSystem ( QFontDatabase::WritingSystem script )
QFontDatabase::WritingSystem writingSystem () const
</PROTOS>

<SLOTS>
void setCurrentFont ( const QFont & font )
</SLOTS>

<SIGNALS>
void currentFontChanged ( const QFont & font )
</SIGNALS>
