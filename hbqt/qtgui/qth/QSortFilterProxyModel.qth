/*
 * $Id: QSortFilterProxyModel.qth 160 2013-02-04 23:59:32Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = 
Inherit     = QAbstractProxyModel
Type        = 
New         =
Destructor  =
Constructor = 
</CLASS>

<SUBCLASS>
</SUBCLASS>

<DOC>
</DOC>

<CODE>
#if QT_VERSION <= 0x040900
#include <QtGui/QSortFilterProxyModel>
#else
#include <QtCore/QSortFilterProxyModel>
#endif

/*
 * QSortFilterProxyModel ( QObject * parent = 0 )
 * ~QSortFilterProxyModel ()
 */
HB_FUNC( QT_QSORTFILTERPROXYMODEL )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QOBJECT" ) )
   {
      __HB_RETPTRGC__( new QSortFilterProxyModel( hbqt_par_QObject( 1 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QSortFilterProxyModel() );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
bool dynamicSortFilter () const
Qt::CaseSensitivity filterCaseSensitivity () const
int filterKeyColumn () const
QRegExp filterRegExp () const
int filterRole () const
bool isSortLocaleAware () const
virtual QModelIndex mapFromSource ( const QModelIndex & sourceIndex ) const
virtual QModelIndex mapToSource ( const QModelIndex & proxyIndex ) const
void setDynamicSortFilter ( bool enable )
void setFilterCaseSensitivity ( Qt::CaseSensitivity cs )
void setFilterKeyColumn ( int column )
void setFilterRegExp ( const QRegExp & regExp )
void setFilterRole ( int role )
void setSortCaseSensitivity ( Qt::CaseSensitivity cs )
void setSortLocaleAware ( bool on )
void setSortRole ( int role )
Qt::CaseSensitivity sortCaseSensitivity () const
int sortColumn () const
Qt::SortOrder sortOrder () const
int sortRole () const
</PROTOS>

<SLOTS>
void invalidate ()
void setFilterFixedString ( const QString & pattern )
void setFilterRegExp ( const QString & pattern )
void setFilterWildcard ( const QString & pattern )
</SLOTS>

<SIGNALS>
</SIGNALS>
