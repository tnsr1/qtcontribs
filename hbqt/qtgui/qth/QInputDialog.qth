/*
 * $Id: QInputDialog.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QDialog
New         = pParent, nFlags
</CLASS>

<CODE>
#include <QtGui/QInputDialog>


/*
 * QInputDialog ( QWidget * parent = 0, Qt::WindowFlags flags = 0 )
 * ~QInputDialog ()
 */
HB_FUNC( QT_QINPUTDIALOG )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QWIDGET" ) )
   {
      __HB_RETPTRGC__( new QInputDialog( hbqt_par_QWidget( 1 ) ) );
   }
   else if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QWIDGET" ) && HB_ISNUM( 2 ) )
   {
      __HB_RETPTRGC__( new QInputDialog( hbqt_par_QWidget( 1 ), ( Qt::WindowFlags ) hb_parni( 2 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QInputDialog() );
   }      
}
</CODE>

<ENUMS>
enum InputDialogOption { NoButtons, UseListViewForComboBoxItems }
enum InputMode { TextInput, IntInput, DoubleInput }
flags InputDialogOptions
</ENUMS>

<PROTOS>
QString cancelButtonText () const
QStringList comboBoxItems () const
virtual void done ( int result )
int doubleDecimals () const
double doubleMaximum () const
double doubleMinimum () const
double doubleValue () const
InputMode inputMode () const
int intMaximum () const
int intMinimum () const
int intStep () const
int intValue () const
bool isComboBoxEditable () const
QString labelText () const
QString okButtonText () const
void open ( QObject * receiver, const char * member )
InputDialogOptions options () const
void setCancelButtonText ( const QString & text )
void setComboBoxEditable ( bool editable )
void setComboBoxItems ( const QStringList & items )
void setDoubleDecimals ( int decimals )
void setDoubleMaximum ( double max )
void setDoubleMinimum ( double min )
void setDoubleRange ( double min, double max )
void setDoubleValue ( double value )
void setInputMode ( InputMode mode )
void setIntMaximum ( int max )
void setIntMinimum ( int min )
void setIntRange ( int min, int max )
void setIntStep ( int step )
void setIntValue ( int value )
void setLabelText ( const QString & text )
void setOkButtonText ( const QString & text )
void setOption ( InputDialogOption option, bool on = true )
void setOptions ( InputDialogOptions options )
void setTextEchoMode ( QLineEdit::EchoMode mode )
void setTextValue ( const QString & text )
bool testOption ( InputDialogOption option ) const
QLineEdit::EchoMode textEchoMode () const
QString textValue () const

double getDouble ( QWidget * parent, const QString & title, const QString & label, double value = 0, double min = -2147483647, double max = 2147483647, int decimals = 1, bool * ok = 0, Qt::WindowFlags flags = 0 )
int getInt ( QWidget * parent, const QString & title, const QString & label, int value = 0, int min = -2147483647, int max = 2147483647, int step = 1, bool * ok = 0, Qt::WindowFlags flags = 0 )
QString getItem ( QWidget * parent, const QString & title, const QString & label, const QStringList & items, int current = 0, bool editable = true, bool * ok = 0, Qt::WindowFlags flags = 0 )
QString getText ( QWidget * parent, const QString & title, const QString & label, QLineEdit::EchoMode mode = QLineEdit::Normal, const QString & text = QString(), bool * ok = 0, Qt::WindowFlags flags = 0 )
</PROTOS>

<SIGNALS>
void doubleValueChanged ( double value )
void doubleValueSelected ( double value )
void intValueChanged ( int value )
void intValueSelected ( int value )
void textValueChanged ( const QString & text )
void textValueSelected ( const QString & text )
</SIGNALS>
