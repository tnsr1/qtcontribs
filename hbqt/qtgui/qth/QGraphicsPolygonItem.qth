/*
 * $Id: QGraphicsPolygonItem.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Inherit     = QAbstractGraphicsShapeItem
Type        =
New         =
</CLASS>

<CODE>
#include <QtGui/QGraphicsPolygonItem>


/*
 * QGraphicsPolygonItem ( QGraphicsItem * parent = 0 )
 * QGraphicsPolygonItem ( const QPolygonF & polygon, QGraphicsItem * parent = 0 )
 * ~QGraphicsPolygonItem ()
 */
HB_FUNC( QT_QGRAPHICSPOLYGONITEM )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QGRAPHICSITEM" ) )
   {
      __HB_RETPTRGC__( new QGraphicsPolygonItem( hbqt_par_QGraphicsItem( 1 ) ) );
   }
   else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QPOLYGONF" ) )  
   {   
         __HB_RETPTRGC__( new QGraphicsPolygonItem( *hbqt_par_QPolygonF( 1 ), 0 ) );
   }
   else if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QPOLYGONF" ) && hbqt_par_isDerivedFrom( 2, "QGRAPHICSITEM" ) )  
   {   
         __HB_RETPTRGC__( new QGraphicsPolygonItem( *hbqt_par_QPolygonF( 1 ), hbqt_par_QGraphicsItem( 2 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QGraphicsPolygonItem() );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
Qt::FillRule fillRule () const
QPolygonF polygon () const
void setFillRule ( Qt::FillRule rule )
void setPolygon ( const QPolygonF & polygon )
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>

<VARIABLES>
</VARIABLES>
