/*
 * $Id: QGraphicsSvgItem.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = 
Inherit     = QObject, QGraphicsItem
Type        = 
New         = 
</CLASS>

<CODE>
#include <QtGui/QGraphicsSvgItem>


/*
 * QGraphicsSvgItem ( QGraphicsItem * parent = 0 )
 * QGraphicsSvgItem ( const QString & fileName, QGraphicsItem * parent = 0 )
 */
HB_FUNC( QT_QGRAPHICSSVGITEM )
{
   if( hb_pcount() == 1 && HB_ISCHAR( 1 ) )
   {
      void * pText01 = NULL;
      __HB_RETPTRGC__( new QGraphicsSvgItem( hb_parstr_utf8( 1, &pText01, NULL ) ) ); 
      hb_strfree( pText01 );
   }
   else if( hb_pcount() == 2 && HB_ISCHAR( 1 ) && hbqt_par_isDerivedFrom( 2, "QGRAPHICSITEM" ) )
   {
      void * pText01 = NULL;
      __HB_RETPTRGC__( new QGraphicsSvgItem( hb_parstr_utf8( 1, &pText01, NULL ), hbqt_par_QGraphicsItem( 1 ) ) ); 
      hb_strfree( pText01 );
   }
   else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QGRAPHICSITEM" ) )
   {  
      __HB_RETPTRGC__( new QGraphicsSvgItem( hbqt_par_QGraphicsItem( 1 ) ) ); 
   }
   else
   {
      __HB_RETPTRGC__( new QGraphicsSvgItem() );
   }   
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
virtual QRectF boundingRect () const
QString elementId () const
QSize maximumCacheSize () const
QSvgRenderer * renderer () const
void setElementId ( const QString & id )
void setMaximumCacheSize ( const QSize & size )
void setSharedRenderer ( QSvgRenderer * renderer )
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>

<VARIABLES>
</VARIABLES>
