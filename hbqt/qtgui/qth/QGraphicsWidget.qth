/*
 * $Id: QGraphicsWidget.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = 
Inherit     = QObject, QGraphicsItem, QGraphicsLayoutItem
Type        = 
New         = 
</CLASS>

<CODE>
#include <QtGui/QGraphicsWidget>


/*
 * QGraphicsWidget ( QGraphicsItem * parent = 0, Qt::WindowFlags wFlags = 0 )
 * ~QGraphicsWidget ()
 */
HB_FUNC( QT_QGRAPHICSWIDGET )
{
   if( hb_pcount() >= 1 && hbqt_par_isDerivedFrom( 1, "QGRAPHICSITEM" ) )
   {
      __HB_RETPTRGC__( new QGraphicsWidget( hbqt_par_QGraphicsItem( 1 ), ( Qt::WindowFlags ) ( HB_ISNUM( 2 ) ? hb_parni( 2 ) : 0 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QGraphicsWidget() );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
QList<QAction *> actions () const
void addAction ( QAction * action )
void addActions ( QList<QAction *> actions )
void adjustSize ()
// const QObjectList & children () const
Qt::FocusPolicy focusPolicy () const
QGraphicsWidget * focusWidget () const
QFont font () const
virtual void getContentsMargins ( qreal * left, qreal * top, qreal * right, qreal * bottom ) const
void getWindowFrameMargins ( qreal * left, qreal * top, qreal * right, qreal * bottom ) const
int grabShortcut ( const QKeySequence & sequence, Qt::ShortcutContext context = Qt::WindowShortcut )
void insertAction ( QAction * before, QAction * action )
void insertActions ( QAction * before, QList<QAction *> actions )
bool isActiveWindow () const
QGraphicsLayout * layout () const
Qt::LayoutDirection layoutDirection () const
// virtual void paintWindowFrame ( QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget = 0 )
QPalette palette () const
QRectF rect () const
void releaseShortcut ( int id )
void removeAction ( QAction * action )
void resize ( const QSizeF & size )
void resize ( qreal w, qreal h )
void setAttribute ( Qt::WidgetAttribute attribute, bool on = true )
void setContentsMargins ( qreal left, qreal top, qreal right, qreal bottom )
void setFocusPolicy ( Qt::FocusPolicy policy )
void setFont ( const QFont & font )
virtual void setGeometry ( const QRectF & rect )
void setGeometry ( qreal x, qreal y, qreal w, qreal h )
void setLayout ( QGraphicsLayout * layout )
void setLayoutDirection ( Qt::LayoutDirection direction )
void setPalette ( const QPalette & palette )
void setShortcutAutoRepeat ( int id, bool enabled = true )
void setShortcutEnabled ( int id, bool enabled = true )
void setStyle ( QStyle * style )
void setWindowFlags ( Qt::WindowFlags wFlags )
void setWindowFrameMargins ( qreal left, qreal top, qreal right, qreal bottom )
void setWindowTitle ( const QString & title )
QSizeF size () const
QStyle * style () const
bool testAttribute ( Qt::WidgetAttribute attribute ) const
void unsetLayoutDirection ()
void unsetWindowFrameMargins ()
Qt::WindowFlags windowFlags () const
QRectF windowFrameGeometry () const
QRectF windowFrameRect () const
QString windowTitle () const
Qt::WindowType windowType () const

void setTabOrder ( QGraphicsWidget * first, QGraphicsWidget * second )
</PROTOS>

<SLOTS>
bool close ()
</SLOTS>

<SIGNALS>
</SIGNALS>

<VARIABLES>
</VARIABLES>
