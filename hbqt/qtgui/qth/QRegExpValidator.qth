/*
 * $Id: QRegExpValidator.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     =
Inherit     = QValidator
Type        = 
New         =
Destructor  = 
</CLASS>

<CODE>
#include <QtGui/QRegExpValidator>


/* QRegExpValidator ( QObject * parent )
 * QRegExpValidator ( const QRegExp & rx, QObject * parent )
 * ~QRegExpValidator ()
 */
HB_FUNC( QT_QREGEXPVALIDATOR )
{
   if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QREGEXP" ) && hbqt_par_isDerivedFrom( 2, "QOBJECT" ) )
   {
      __HB_RETPTRGC__( new QRegExpValidator( *hbqt_par_QRegExp( 1 ), hbqt_par_QObject( 2 ) ) );
   }
   else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QOBJECT" ) )
   {
      __HB_RETPTRGC__( new QRegExpValidator( hbqt_par_QObject( 1 ) ) );
   }
   else 
   {   
      hb_errRT_BASE( EG_ARG, 9999, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
   }   
}
</CODE>

<ENUMS>
enum State { Invalid, Intermediate, Acceptable }
</ENUMS>

<PROTOS>
const QRegExp & regExp () const
void setRegExp ( const QRegExp & rx )
//virtual QValidator::State validate ( QString & input, int & pos ) const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
