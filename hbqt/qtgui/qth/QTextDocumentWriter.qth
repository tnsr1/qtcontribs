/*
 * $Id: QTextDocumentWriter.qth 431 2016-10-29 02:28:13Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Inherit     =
Type        = Core
New         =
</CLASS>

<CODE>
#include <QtGui/QTextDocumentWriter>


/*
 * QTextDocumentWriter ()
 * QTextDocumentWriter ( QIODevice * device, const QByteArray & format )
 * QTextDocumentWriter ( const QString & fileName, const QByteArray & format = QByteArray() )
 * ~QTextDocumentWriter ()
 */
HB_FUNC( QT_QTEXTDOCUMENTWRITER )
{
   if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QIODEVICE" ) && hbqt_par_isDerivedFrom( 2, "QBYTEARRAY" ) )
   {
      __HB_RETPTRGC__( new QTextDocumentWriter( hbqt_par_QIODevice( 1 ), *hbqt_par_QByteArray( 2 ) ) );
   }
   else if( hb_pcount() == 2 && HB_ISCHAR( 1 ) && hbqt_par_isDerivedFrom( 2, "QBYTEARRAY" ) )
   {
      void * pText01 = NULL;
      __HB_RETPTRGC__( new QTextDocumentWriter( hb_parstr_utf8( 1, &pText01, NULL ), *hbqt_par_QByteArray( 2 ) ) );
      hb_strfree( pText01 );
   }
   else if( hb_pcount() == 1 && HB_ISCHAR( 1 ) )
   {
      void * pText01 = NULL;
      __HB_RETPTRGC__( new QTextDocumentWriter( hb_parstr_utf8( 1, &pText01, NULL ) ) );
      hb_strfree( pText01 );
   }
   else
   {
      __HB_RETPTRGC__( new QTextDocumentWriter() );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
QTextCodec * codec () const
QIODevice * device () const
QString fileName () const
QByteArray format () const
void setCodec ( QTextCodec * codec )
void setDevice ( QIODevice * device )
void setFileName ( const QString & fileName )
void setFormat ( const QByteArray & format )
bool write ( const QTextDocument * document )
bool write ( const QTextDocumentFragment & fragment )
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
