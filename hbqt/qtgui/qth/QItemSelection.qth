/*
 * $Id: QItemSelection.qth 160 2013-02-04 23:59:32Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Inherit     = QList
Type        = Core
New         =
Destructor  = 
</CLASS>

<CODE>
#if QT_VERSION <= 0x040900
#include <QtGui/QItemSelection>
#else
#include <QtCore/QItemSelection>
#endif

/* QItemSelection ()
 * QItemSelection ( const QModelIndex & topLeft, const QModelIndex & bottomRight )
 */
HB_FUNC( QT_QITEMSELECTION )
{
   if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QMODELINDEX" ) && hbqt_par_isDerivedFrom( 2, "QMODELINDEX" ) )
   {
      __HB_RETPTRGC__( new QItemSelection( *hbqt_par_QModelIndex( 1 ), *hbqt_par_QModelIndex( 2 ) ) );
   }
   else
   {   
      __HB_RETPTRGC__( new QItemSelection() );
   }   
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
bool contains ( const QModelIndex & index ) const
QList< QModelIndex > indexes () const
void merge ( const QItemSelection & other, QItemSelectionModel::SelectionFlags command )
void select ( const QModelIndex & topLeft, const QModelIndex & bottomRight )

// void split ( const QItemSelectionRange & range, const QItemSelectionRange & other, QItemSelection * result )
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
