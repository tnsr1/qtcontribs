/*
 * $Id: QIcon.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Type        = PlainObject
New         =
</CLASS>


<CODE>
#include <QtGui/QIcon>


/*
 * QIcon ()
 * QIcon ( const QPixmap & pixmap )
 * QIcon ( const QIcon & other )
 * QIcon ( const QString & fileName )
 * QIcon ( QIconEngine * engine )
 * QIcon ( QIconEngineV2 * engine )
 * ~QIcon ()
 */
HB_FUNC( QT_QICON )
{
   if( hb_pcount() == 1 )
   {
      if( HB_ISCHAR( 1 ) )
      {
         void * pText01 = NULL;
         __HB_RETPTRGC__( new QIcon( hb_parstr_utf8( 1, &pText01, NULL ) ) );
         hb_strfree( pText01 );
      }
      else if( hbqt_par_isDerivedFrom( 1, "QICON" ) )
      {   
         __HB_RETPTRGC__( new QIcon( *hbqt_par_QIcon( 1 ) ) );
      }   
      else if( hbqt_par_isDerivedFrom( 1, "QPIXMAP" ) )
      {   
         __HB_RETPTRGC__( new QIcon( *hbqt_par_QPixmap( 1 ) ) );
      }   
      else
      {   
         __HB_RETPTRGC__( new QIcon() );
      }
   }      
   else
   {
      __HB_RETPTRGC__( new QIcon() );
   }   
}
</CODE>

<ENUMS>
enum Mode { Normal, Disabled, Active, Selected }
enum State { Off, On }
</ENUMS>

<PROTOS>
QSize actualSize ( const QSize & size, Mode mode = Normal, State state = Off ) const
void addFile ( const QString & fileName, const QSize & size = QSize(), Mode mode = Normal, State state = Off )
void addPixmap ( const QPixmap & pixmap, Mode mode = Normal, State state = Off )
QList<QSize> availableSizes ( Mode mode = Normal, State state = Off ) const
qint64 cacheKey () const
bool isNull () const
void paint ( QPainter * painter, const QRect & rect, Qt::Alignment alignment = Qt::AlignCenter, Mode mode = Normal, State state = Off ) const
void paint ( QPainter * painter, int x, int y, int w, int h, Qt::Alignment alignment = Qt::AlignCenter, Mode mode = Normal, State state = Off ) const
QPixmap pixmap ( const QSize & size, Mode mode = Normal, State state = Off ) const
QPixmap pixmap ( int w, int h, Mode mode = Normal, State state = Off ) const
//QPixmap pixmap ( int extent, Mode mode = Normal, State state = Off ) const        // Not Implemented

</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
