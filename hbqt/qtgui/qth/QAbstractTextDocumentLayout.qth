/*
 * $Id: QAbstractTextDocumentLayout.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QObject
Type        = Core
New         = 
Constructor = No
</CLASS>

<CODE>
#include <QtGui/QAbstractTextDocumentLayout>


/* QAbstractTextDocumentLayout ( QTextDocument * document )
 * 
 */
HB_FUNC( QT_QABSTRACTTEXTDOCUMENTLAYOUT )
{
   // __HB_RETPTRGC__( new QAbstractTextDocumentLayout( hbqt_par_QTextDocument( 1 ) ) );
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
QString anchorAt ( const QPointF & position ) const
virtual QRectF blockBoundingRect ( const QTextBlock & block ) const = 0
QTextDocument * document () const
virtual QSizeF documentSize () const = 0
//virtual void draw ( QPainter * painter, const PaintContext & context ) = 0
virtual QRectF frameBoundingRect ( QTextFrame * frame ) const = 0
//QTextObjectInterface * handlerForObject ( int objectType ) const
virtual int hitTest ( const QPointF & point, Qt::HitTestAccuracy accuracy ) const = 0
virtual int pageCount () const = 0
QPaintDevice * paintDevice () const
void registerHandler ( int objectType, QObject * component )
void setPaintDevice ( QPaintDevice * device )
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
void documentSizeChanged ( const QSizeF & newSize )
void pageCountChanged ( int newPages )
void update ( const QRectF & rect = QRectF( 0., 0., 1000000000., 1000000000. ) )
void updateBlock ( const QTextBlock & block )
</SIGNALS>
