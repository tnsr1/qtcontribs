/*
 * $Id: QInputMethodEvent.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Inherit     = QEvent 
Type        = Core
New         =
Destructor  = 
</CLASS>

<CODE>
#include <QtGui/QInputMethodEvent>


/* QInputMethodEvent ()
 * QInputMethodEvent ( const QString & preeditText, const QList<Attribute> & attributes )
 * QInputMethodEvent ( const QInputMethodEvent & other )
 */
HB_FUNC( QT_QINPUTMETHODEVENT )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QINPUTMETHODEVENT" ) )
   {
      __HB_RETPTRGC__( new QInputMethodEvent( *hbqt_par_QInputMethodEvent( 1 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QInputMethodEvent() );
   }
}
</CODE>

<ENUMS>
enum AttributeType { TextFormat, Cursor, Language, Ruby }
</ENUMS>

<PROTOS>
// const QList<Attribute> & attributes () const
const QString & commitString () const
const QString & preeditString () const
int replacementLength () const
int replacementStart () const
void setCommitString ( const QString & commitString, int replaceFrom = 0, int replaceLength = 0 )
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
