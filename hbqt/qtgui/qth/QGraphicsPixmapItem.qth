/*
 * $Id: QGraphicsPixmapItem.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Inherit     = QGraphicsItem
Type        =
New         =
</CLASS>

<CODE>
#include <QtGui/QGraphicsPixmapItem>


/*
 * QGraphicsPixmapItem ( QGraphicsItem * parent = 0 )
 * QGraphicsPixmapItem ( const QPixmap & pixmap, QGraphicsItem * parent = 0 )
 * ~QGraphicsPixmapItem ()
 */
HB_FUNC( QT_QGRAPHICSPIXMAPITEM )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QGRAPHICSITEM" ) )
   {
      __HB_RETPTRGC__( new QGraphicsPixmapItem( hbqt_par_QGraphicsItem( 1 ) ) );
   }
   else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QPIXMAP" ) )  
   {   
      __HB_RETPTRGC__( new QGraphicsPixmapItem( *hbqt_par_QPixmap( 1 ), 0 ) );
   }
   else if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QPIXMAP" ) && hbqt_par_isDerivedFrom( 2, "QGRAPHICSITEM" ) )  
   {   
      __HB_RETPTRGC__( new QGraphicsPixmapItem( *hbqt_par_QPixmap( 1 ), hbqt_par_QGraphicsItem( 2 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QGraphicsPixmapItem() );
   }
}
</CODE>

<ENUMS>
enum ShapeMode { MaskShape, BoundingRectShape, HeuristicMaskShape }
</ENUMS>

<PROTOS>
QPointF offset () const
QPixmap pixmap () const
void setOffset ( const QPointF & offset )
void setOffset ( qreal x, qreal y )
void setPixmap ( const QPixmap & pixmap )
void setShapeMode ( ShapeMode mode )
void setTransformationMode ( Qt::TransformationMode mode )
ShapeMode shapeMode () const
Qt::TransformationMode transformationMode () const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>

<VARIABLES>
</VARIABLES>
