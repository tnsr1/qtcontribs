/*
 * $Id: QLabel.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QFrame
New         = pParent, nFlags
</CLASS>

<CODE>
#include <QtGui/QLabel>
#include <QtGui/QPicture>


/*
 * QLabel ( QWidget * parent = 0, Qt::WindowFlags f = 0 )
 * QLabel ( const QString & text, QWidget * parent = 0, Qt::WindowFlags f = 0 )
 * ~QLabel ()
 */
HB_FUNC( QT_QLABEL )
{
   if( hb_pcount() >= 2 && HB_ISCHAR( 1 ) && hbqt_par_isDerivedFrom( 2, "QWIDGET" ) )
   {
      void * pText01 = NULL;
      __HB_RETPTRGC__( new QLabel( hb_parstr_utf8( 1, &pText01, NULL ), hbqt_par_QWidget( 2 ), ( Qt::WindowFlags ) hb_parni( 3 ) ) );
      hb_strfree( pText01 );
   }
   else if( hb_pcount() == 1 && HB_ISCHAR( 1 ) )
   {
      void * pText01 = NULL;
      __HB_RETPTRGC__( new QLabel( hb_parstr_utf8( 1, &pText01, NULL ) ) );
      hb_strfree( pText01 );
   }
   else if( hb_pcount() >= 1 && hbqt_par_isDerivedFrom( 1, "QWIDGET" ) )
   {
      __HB_RETPTRGC__( new QLabel( hbqt_par_QWidget( 1 ), ( Qt::WindowFlags ) hb_parni( 2 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QLabel() );
   }
}
</CODE>

<PROTOS>
Qt::Alignment alignment () const
QWidget * buddy () const
bool hasScaledContents () const
int indent () const
int margin () const
QMovie * movie () const
bool openExternalLinks () const
const QPicture * picture () const
const QPixmap * pixmap () const
void setAlignment ( Qt::Alignment )
void setBuddy ( QWidget * buddy )
void setIndent ( int )
void setMargin ( int )
void setOpenExternalLinks ( bool open )
void setScaledContents ( bool )
void setTextFormat ( Qt::TextFormat )
void setTextInteractionFlags ( Qt::TextInteractionFlags flags )
void setWordWrap ( bool on )
QString text () const
Qt::TextFormat textFormat () const
Qt::TextInteractionFlags textInteractionFlags () const
bool wordWrap () const
</PROTOS>

<SLOTS>
void clear ()
void setMovie ( QMovie * movie )
void setNum ( int num )
//void setNum ( double num )
void setPicture ( const QPicture & picture )
void setPixmap ( const QPixmap & )
void setText ( const QString & )
</SLOTS>

<SIGNALS>
void linkActivated ( const QString & link )
void linkHovered ( const QString & link )
</SIGNALS>
