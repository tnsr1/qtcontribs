/*
 * $Id: QProgressBar.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QWidget
New         = pParent
</CLASS>

<CODE>
#include <QtGui/QProgressBar>


/*
 * QProgressBar ( QWidget * parent = 0 )
 * ~QProgressBar ()
 */
HB_FUNC( QT_QPROGRESSBAR )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QWIDGET" ) )
   {
      __HB_RETPTRGC__( new QProgressBar( hbqt_par_QWidget( 1 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QProgressBar() );
   }      
}
</CODE>

<ENUMS>
enum Direction { TopToBottom, BottomToTop }
</ENUMS>

<PROTOS>
Qt::Alignment alignment () const
QString format () const
bool invertedAppearance ()
bool isTextVisible () const
int maximum () const
int minimum () const
Qt::Orientation orientation () const
void setAlignment ( Qt::Alignment alignment )
void setFormat ( const QString & format )
void setInvertedAppearance ( bool invert )
void setTextDirection ( QProgressBar::Direction textDirection )
void setTextVisible ( bool visible )
virtual QString text () const
QProgressBar::Direction textDirection ()
int value () const
</PROTOS>

<SLOTS>
void reset ()
void setMaximum ( int maximum )
void setMinimum ( int minimum )
void setOrientation ( Qt::Orientation )
void setRange ( int minimum, int maximum )
void setValue ( int value )
</SLOTS>

<SIGNALS>
void valueChanged ( int value )
</SIGNALS>
