/*
 * $Id: QMainWindow.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QWidget
New         = pParent, nFlags
</CLASS>

<CODE>
#include <QtGui/QMainWindow>
#include <QtCore/QSettings>


/*
 * QMainWindow ( QWidget * parent = 0, Qt::WindowFlags flags = 0 )
 * ~QMainWindow ()
 */
HB_FUNC( QT_QMAINWINDOW )
{
   if( hb_pcount() <= 2 && hbqt_par_isDerivedFrom( 1, "QWIDGET" ) )
   {
      __HB_RETPTRGC__( new QMainWindow( hbqt_par_QWidget( 1 ), ( Qt::WindowFlags ) hb_parni( 2 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QMainWindow() );
   }
}

HB_FUNC( HBQT_QMAINWINDOW_SAVESETTINGS )
{
   void * pText01 = NULL; 
   void * pText02 = NULL; 
   
   QSettings qSet( hb_parstr_utf8( 1, &pText01, NULL ), QSettings::IniFormat );
   qSet.setValue( hb_parstr_utf8( 2, &pText02, NULL ), hbqt_par_QMainWindow( 3 )->saveState() );
   
   hb_strfree( pText01 );
   hb_strfree( pText02 );
}

HB_FUNC( HBQT_QMAINWINDOW_RESTSETTINGS )
{
   void * pText01 = NULL; 
   void * pText02 = NULL; 
   
   QSettings qSet(  hb_parstr_utf8( 1, &pText01, NULL ), QSettings::IniFormat );

   hbqt_par_QMainWindow( 3 )->restoreState( qSet.value( hb_parstr_utf8( 2, &pText02, NULL ) ).toByteArray() );
   
   hb_strfree( pText01 );
   hb_strfree( pText02 );
}
</CODE>

<ENUMS>
enum DockOption { AnimatedDocks, AllowNestedDocks, AllowTabbedDocks, ForceTabbedDocks, VerticalTabs }
flags DockOptions
</ENUMS>

<PROTOS>

void addDockWidget ( Qt::DockWidgetArea area, QDockWidget * dockwidget )   [*X=2*]
void addDockWidget ( Qt::DockWidgetArea area, QDockWidget * dockwidget, Qt::Orientation orientation )   [*X=2*]
void addToolBar ( Qt::ToolBarArea area, QToolBar * toolbar )               [*X=2*]
void addToolBar ( QToolBar * toolbar )                                     [*X=1*]
QToolBar * addToolBar ( const QString & title )               // NOT implemented
void addToolBarBreak ( Qt::ToolBarArea area = Qt::TopToolBarArea )
QWidget * centralWidget () const
Qt::DockWidgetArea corner ( Qt::Corner corner ) const
virtual QMenu * createPopupMenu ()
DockOptions dockOptions () const
Qt::DockWidgetArea dockWidgetArea ( QDockWidget * dockwidget ) const
bool documentMode () const
QSize iconSize () const
void insertToolBar ( QToolBar * before, QToolBar * toolbar )      [*X=2*]
void insertToolBarBreak ( QToolBar * before )
bool isAnimated () const
bool isDockNestingEnabled () const
QMenuBar * menuBar () const
QWidget * menuWidget () const
void removeDockWidget ( QDockWidget * dockwidget )
void removeToolBar ( QToolBar * toolbar )
void removeToolBarBreak ( QToolBar * before )
bool restoreDockWidget ( QDockWidget * dockwidget )
bool restoreState ( const QByteArray & state, int Version = 0 )
QByteArray saveState ( int Version = 0 ) const
void setCentralWidget ( QWidget * widget )                        [*X=1*]
void setCorner ( Qt::Corner corner, Qt::DockWidgetArea area )
void setDockOptions ( DockOptions options )
void setDocumentMode ( bool enabled )
void setIconSize ( const QSize & iconSize )
void setMenuBar ( QMenuBar * menuBar )                            [*X=1*]
void setMenuWidget ( QWidget * menuBar )                          [*X=1*]
void setStatusBar ( QStatusBar * statusbar )                      [*X=1*]
void setTabPosition ( Qt::DockWidgetAreas areas, QTabWidget::TabPosition tabPosition )
void setTabShape ( QTabWidget::TabShape tabShape )
void setToolButtonStyle ( Qt::ToolButtonStyle toolButtonStyle )
void setUnifiedTitleAndToolBarOnMac ( bool set )
void splitDockWidget ( QDockWidget * first, QDockWidget * second, Qt::Orientation orientation )
QStatusBar * statusBar () const
QTabWidget::TabPosition tabPosition ( Qt::DockWidgetArea area ) const
QTabWidget::TabShape tabShape () const
QList<QDockWidget *> tabifiedDockWidgets ( QDockWidget * dockwidget ) const
void tabifyDockWidget ( QDockWidget * first, QDockWidget * second )
Qt::ToolBarArea toolBarArea ( QToolBar * toolbar ) const
bool toolBarBreak ( QToolBar * toolbar ) const
Qt::ToolButtonStyle toolButtonStyle () const
bool unifiedTitleAndToolBarOnMac () const
</PROTOS>

<SLOTS>
void setAnimated ( bool enabled )
void setDockNestingEnabled ( bool enabled )
</SLOTS>

<SIGNALS>
void iconSizeChanged ( const QSize & iconSize )
void toolButtonStyleChanged ( Qt::ToolButtonStyle toolButtonStyle )
</SIGNALS>
