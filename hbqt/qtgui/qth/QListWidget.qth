/*
 * $Id: QListWidget.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QListView
New         = pParent
</CLASS>

<CODE>
#include <QtGui/QListWidget>


/*
 * QListWidget ( QWidget * parent = 0 )
 * ~QListWidget ()
 */
HB_FUNC( QT_QLISTWIDGET )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QWIDGET" ) )
   {
      __HB_RETPTRGC__( new QListWidget( hbqt_par_QWidget( 1 ) ) );
   }
   else
   { 
      __HB_RETPTRGC__( new QListWidget() );
   }  
}
</CODE>

<PROTOS>

void addItem ( const QString & label )
void addItem ( QListWidgetItem * item )              [*D=1*]
void addItems ( const QStringList & labels )
void closePersistentEditor ( QListWidgetItem * item )
int count () const
QListWidgetItem * currentItem () const
int currentRow () const
void editItem ( QListWidgetItem * item )
QList<QListWidgetItem *> findItems ( const QString & text, Qt::MatchFlags flags ) const

void insertItem ( int row, QListWidgetItem * item )  [*D=2*]
void insertItem ( int row, const QString & label )

void insertItems ( int row, const QStringList & labels )
bool isSortingEnabled () const
QListWidgetItem * item ( int row ) const

QListWidgetItem * itemAt ( const QPoint & p ) const
QListWidgetItem * itemAt ( int x, int y ) const

QWidget * itemWidget ( QListWidgetItem * item ) const
void openPersistentEditor ( QListWidgetItem * item )
void removeItemWidget ( QListWidgetItem * item )
int row ( const QListWidgetItem * item ) const
QList<QListWidgetItem *> selectedItems () const

void setCurrentItem ( QListWidgetItem * item )
void setCurrentItem ( QListWidgetItem * item, QItemSelectionModel::SelectionFlags command )

void setCurrentRow ( int row )
void setCurrentRow ( int row, QItemSelectionModel::SelectionFlags command )

void setItemWidget ( QListWidgetItem * item, QWidget * widget )
void setSortingEnabled ( bool enable )
void sortItems ( Qt::SortOrder order = Qt::AscendingOrder )
QListWidgetItem * takeItem ( int row )                            
QRect visualItemRect ( const QListWidgetItem * item ) const
</PROTOS>

<SLOTS>
void clear ()
void scrollToItem ( const QListWidgetItem * item, QAbstractItemView::ScrollHint hint = EnsureVisible )
</SLOTS>

<SIGNALS>
void currentItemChanged ( QListWidgetItem * current, QListWidgetItem * previous )
void currentRowChanged ( int currentRow )
void currentTextChanged ( const QString & currentText )
void itemActivated ( QListWidgetItem * item )
void itemChanged ( QListWidgetItem * item )
void itemClicked ( QListWidgetItem * item )
void itemDoubleClicked ( QListWidgetItem * item )
void itemEntered ( QListWidgetItem * item )
void itemPressed ( QListWidgetItem * item )
void itemSelectionChanged ()
</SIGNALS>
