/*
 * $Id: QItemSelectionModel.qth 160 2013-02-04 23:59:32Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = 
Inherit     = QObject
Type        = Core
New         =
Destructor  = 
</CLASS>

<CODE>
#if QT_VERSION <= 0x040900
#include <QtGui/QItemSelectionModel>
#else
#include <QtCore/QItemSelectionModel>
#endif

/* QItemSelectionModel ( QAbstractItemModel * model )
 * QItemSelectionModel ( QAbstractItemModel * model, QObject * parent )
 * virtual ~QItemSelectionModel ()
 */
HB_FUNC( QT_QITEMSELECTIONMODEL )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QABSTRACTITEMMODEL" ) )
   {
      __HB_RETPTRGC__( new QItemSelectionModel( hbqt_par_QAbstractItemModel( 1 ) ) );
   }
   else if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QABSTRACTITEMMODEL" )  && hbqt_par_isDerivedFrom( 2, "QOBJECT" ) )
   {
      __HB_RETPTRGC__( new QItemSelectionModel( hbqt_par_QAbstractItemModel( 1 ), hbqt_par_QObject( 2 ) ) );
   }
   else 
   {   
      hb_errRT_BASE( EG_ARG, 9999, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
   }   
}
</CODE>

<ENUMS>
enum SelectionFlag { NoUpdate, Clear, Select, Deselect, ..., ClearAndSelect }
flags SelectionFlags
</ENUMS>

<PROTOS>
bool columnIntersectsSelection ( int column, const QModelIndex & parent ) const
QModelIndex currentIndex () const
bool hasSelection () const
bool isColumnSelected ( int column, const QModelIndex & parent ) const
bool isRowSelected ( int row, const QModelIndex & parent ) const
bool isSelected ( const QModelIndex & index ) const
const QAbstractItemModel * model () const
bool rowIntersectsSelection ( int row, const QModelIndex & parent ) const
QList< QModelIndex > selectedColumns ( int row = 0 ) const
QList< QModelIndex > selectedIndexes () const
QList< QModelIndex > selectedRows ( int column = 0 ) const
const QItemSelection selection () const
</PROTOS>

<SLOTS>
virtual void clear ()
void clearSelection ()
virtual void reset ()
virtual void select ( const QModelIndex & index, QItemSelectionModel::SelectionFlags command )
virtual void select ( const QItemSelection & selection, QItemSelectionModel::SelectionFlags command )
void setCurrentIndex ( const QModelIndex & index, QItemSelectionModel::SelectionFlags command )
</SLOTS>

<SIGNALS>
void currentChanged ( const QModelIndex & current, const QModelIndex & previous )
void currentColumnChanged ( const QModelIndex & current, const QModelIndex & previous )
void currentRowChanged ( const QModelIndex & current, const QModelIndex & previous )
void selectionChanged ( const QItemSelection & selected, const QItemSelection & deselected )
</SIGNALS>
