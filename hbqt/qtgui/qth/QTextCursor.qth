/*
 * $Id: QTextCursor.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Inherit     =
Type        = PlainObject
New         =
</CLASS>


<CODE>
#include <QtGui/QTextBlock>
#include <QtGui/QTextCursor>
#include <QtGui/QTextDocumentFragment>


/*
 * QTextCursor ()
 * QTextCursor ( QTextDocument * document )
 * QTextCursor ( QTextFrame * frame )
 * QTextCursor ( const QTextBlock & block )
 * QTextCursor ( const QTextCursor & cursor )
 * ~QTextCursor ()
 */
HB_FUNC( QT_QTEXTCURSOR )
{
   if( hb_pcount() == 1 && HB_ISOBJECT( 1 ) )
   {
      if( hbqt_par_isDerivedFrom( 1, "QTEXTCURSOR" ) )
         __HB_RETPTRGC__( new QTextCursor( *hbqt_par_QTextCursor( 1 ) ) );
      else if( hbqt_par_isDerivedFrom( 1, "QTEXTDOCUMENT" ) )
         __HB_RETPTRGC__( new QTextCursor( hbqt_par_QTextDocument( 1 ) ) );
      else if( hbqt_par_isDerivedFrom( 1, "QTEXTBLOCK" ) )
         __HB_RETPTRGC__( new QTextCursor( *hbqt_par_QTextBlock( 1 ) ) );
      else if( hbqt_par_isDerivedFrom( 1, "QTEXTFRAME" ) )
         __HB_RETPTRGC__( new QTextCursor( hbqt_par_QTextFrame( 1 ) ) );
      else
         __HB_RETPTRGC__( new QTextCursor() );
   }
   else
      __HB_RETPTRGC__( new QTextCursor() );
}
</CODE>

<ENUMS>
enum MoveMode { MoveAnchor, KeepAnchor }
enum MoveOperation { NoMove, Start, StartOfLine, StartOfBlock, ..., PreviousRow }
enum SelectionType { Document, BlockUnderCursor, LineUnderCursor, WordUnderCursor }
</ENUMS>

<PROTOS>
int anchor () const
bool atBlockEnd () const
bool atBlockStart () const
bool atEnd () const
bool atStart () const
void beginEditBlock ()
#
QTextBlock block () const
#
QTextCharFormat blockCharFormat () const
QTextBlockFormat blockFormat () const
int blockNumber () const
QTextCharFormat charFormat () const
void clearSelection ()
int columnNumber () const
QTextList * createList ( const QTextListFormat & format )
QTextList * createList ( QTextListFormat::Style style )
QTextFrame * currentFrame () const
QTextList * currentList () const
//QTextTable * currentTable () const
void deleteChar ()
void deletePreviousChar ()
QTextDocument * document () const
void endEditBlock ()
bool hasComplexSelection () const
bool hasSelection () const
void insertBlock ()
void insertBlock ( const QTextBlockFormat & format )
void insertBlock ( const QTextBlockFormat & format, const QTextCharFormat & charFormat )
void insertFragment ( const QTextDocumentFragment & fragment )
QTextFrame * insertFrame ( const QTextFrameFormat & format )
void insertHtml ( const QString & html )
void insertImage ( const QString & name )
void insertImage ( const QTextImageFormat & format )
void insertImage ( const QTextImageFormat & format, QTextFrameFormat::Position alignment )
void insertImage ( const QImage & image, const QString & name = QString() )
QTextList * insertList ( const QTextListFormat & format )
QTextList * insertList ( QTextListFormat::Style style )
//QTextTable * insertTable ( int rows, int columns, const QTextTableFormat & format )
//QTextTable * insertTable ( int rows, int columns )
void insertText ( const QString & text )
void insertText ( const QString & text, const QTextCharFormat & format )
bool isCopyOf ( const QTextCursor & other ) const
bool isNull () const
void joinPreviousEditBlock ()
void mergeBlockCharFormat ( const QTextCharFormat & modifier )
void mergeBlockFormat ( const QTextBlockFormat & modifier )
void mergeCharFormat ( const QTextCharFormat & modifier )
bool movePosition ( MoveOperation operation, MoveMode mode = MoveAnchor, int n = 1 )
int position () const
void removeSelectedText ()
void select ( SelectionType selection )
void selectedTableCells ( int * firstRow, int * numRows, int * firstColumn, int * numColumns ) const
QString selectedText () const
QTextDocumentFragment selection () const
int selectionEnd () const
int selectionStart () const
void setBlockCharFormat ( const QTextCharFormat & format )
void setBlockFormat ( const QTextBlockFormat & format )
void setCharFormat ( const QTextCharFormat & format )
void setPosition ( int pos, MoveMode m = MoveAnchor )
void setVisualNavigation ( bool b )
bool visualNavigation () const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
