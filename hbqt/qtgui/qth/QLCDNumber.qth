/*
 * $Id: QLCDNumber.qth 160 2013-02-04 23:59:32Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QFrame
New         = pParent
</CLASS>

<CODE>
#include <QtGui/QLCDNumber>


/*
 * QLCDNumber ( QWidget * parent = 0 )
 * QLCDNumber ( uint numDigits, QWidget * parent = 0 )
 * ~QLCDNumber ()
 */
HB_FUNC( QT_QLCDNUMBER )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QWIDGET" ) )
   {
      __HB_RETPTRGC__( new QLCDNumber( hbqt_par_QWidget( 1 ) ) );
   }
   else if( hb_pcount() == 1 && HB_ISNUM( 1 ) )
   {
      __HB_RETPTRGC__( new QLCDNumber( hb_parni( 1 ) ) );
   }
   else if( hb_pcount() == 2 && HB_ISNUM( 1 ) && hbqt_par_isDerivedFrom( 2, "QWIDGET" ) )
   {
      __HB_RETPTRGC__( new QLCDNumber( hb_parni( 1 ), hbqt_par_QWidget( 2 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QLCDNumber() );
   }      
}
</CODE>

<ENUMS>
enum Mode { Hex, Dec, Oct, Bin }
enum SegmentStyle { Outline, Filled, Flat }
</ENUMS>

<PROTOS>
bool checkOverflow ( double num ) const
//bool checkOverflow ( int num ) const
int digitCount () const                                     [*V=0x040600*]
int intValue () const
Mode mode () const
int numDigits () const                                      [*V=-0x040900*]
SegmentStyle segmentStyle () const
void setDigitCount ( int numDigits )                        [*V=0x040600*]
void setMode ( Mode )
void setNumDigits ( int nDigits )                           [*V=-0x040900*]
void setSegmentStyle ( SegmentStyle )
bool smallDecimalPoint () const
double value () const
</PROTOS>

<SLOTS>
void display ( const QString & s )
void display ( double num )
//void display ( int num )
void setBinMode ()
void setDecMode ()
void setHexMode ()
void setOctMode ()
void setSmallDecimalPoint ( bool )
</SLOTS>

<SIGNALS>
void overflow ()
</SIGNALS>
