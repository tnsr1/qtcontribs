/*
 * $Id: QProgressDialog.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QDialog
New         = pParent
</CLASS>

<CODE>
#include <QtGui/QProgressDialog>


/*
 * QProgressDialog ( QWidget * parent = 0, Qt::WindowFlags f = 0 )
 * QProgressDialog ( const QString & labelText, const QString & cancelButtonText, int minimum, int maximum, QWidget * parent = 0, Qt::WindowFlags f = 0 )
 * ~QProgressDialog ()
 */
HB_FUNC( QT_QPROGRESSDIALOG )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QWIDGET" ) )
   {
      __HB_RETPTRGC__( new QProgressDialog( hbqt_par_QWidget( 1 ) ) );
   }
   else if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QWIDGET" ) && HB_ISNUM( 2 ) )
   {
      __HB_RETPTRGC__( new QProgressDialog( hbqt_par_QWidget( 1 ), ( Qt::WindowFlags ) hb_parni( 2 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QProgressDialog() );
   }      
}
</CODE>

<PROTOS>
bool autoClose () const
bool autoReset () const
QString labelText () const
int maximum () const
int minimum () const
int minimumDuration () const
void open ( QObject * receiver, const char * member )
void setAutoClose ( bool close )
void setAutoReset ( bool reset )
void setBar ( QProgressBar * bar )
void setCancelButton ( QPushButton * cancelButton )
void setLabel ( QLabel * label )
virtual QSize sizeHint () const
int value () const
bool wasCanceled () const
</PROTOS>

<SLOTS>
void cancel ()
void reset ()
void setCancelButtonText ( const QString & cancelButtonText )
void setLabelText ( const QString & text )
void setMaximum ( int maximum )
void setMinimum ( int minimum )
void setMinimumDuration ( int ms )
void setRange ( int minimum, int maximum )
void setValue ( int progress )
</SLOTS>

<SIGNALS>
void canceled ()
</SIGNALS>
