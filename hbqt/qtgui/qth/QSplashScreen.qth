/*
 * $Id: QSplashScreen.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QWidget
New         = pParent
</CLASS>

<CODE>
#include <QtGui/QSplashScreen>


/*
 * QSplashScreen ( const QPixmap & pixmap = QPixmap(), Qt::WindowFlags f = 0 )
 * QSplashScreen ( QWidget * parent, const QPixmap & pixmap = QPixmap(), Qt::WindowFlags f = 0 )
 * virtual ~QSplashScreen ()
 */
HB_FUNC( QT_QSPLASHSCREEN )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QPIXMAP" ) )
   {
      __HB_RETPTRGC__( new QSplashScreen( *hbqt_par_QPixmap( 1 ) ) );
   }
   else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QWIDGET" ) )
   {   
      __HB_RETPTRGC__( new QSplashScreen( hbqt_par_QWidget( 1 ) ) );
   }
   else if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QWIDGET" ) && hbqt_par_isDerivedFrom( 2, "QPIXMAP" ) )
   {   
      __HB_RETPTRGC__( new QSplashScreen( hbqt_par_QWidget( 1 ), *hbqt_par_QPixmap( 2 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QSplashScreen() );
   }   
}
</CODE>

<PROTOS>
void finish ( QWidget * mainWin )
const QPixmap pixmap () const
void repaint ()
void setPixmap ( const QPixmap & pixmap )
</PROTOS>

<SLOTS>
void clearMessage ()
void showMessage ( const QString & message, int alignment = Qt::AlignLeft, const QColor & color = Qt::black )
</SLOTS>

<SIGNALS>
void messageChanged ( const QString & message )
</SIGNALS>
