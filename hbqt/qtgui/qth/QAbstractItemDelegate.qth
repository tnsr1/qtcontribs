/*
 * $Id: QAbstractItemDelegate.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QObject
Type        = Core
New         = 
Destructor  = no
Constructor = No
</CLASS>

<CODE>
#include <QtGui/QAbstractItemDelegate>


/* QAbstractItemDelegate ( QObject * parent = 0 )
 * virtual ~QAbstractItemDelegate ()
 */
HB_FUNC( QT_QABSTRACTITEMDELEGATE )
{
   // __HB_RETPTRGC__( new QAbstractItemDelegate( 0 ) );
}
</CODE>

<ENUMS>
enum EndEditHint { NoHint, EditNextItem, EditPreviousItem, SubmitModelCache, RevertModelCache }
</ENUMS>

<PROTOS>
virtual QWidget * createEditor ( QWidget * parent, const QStyleOptionViewItem & option, const QModelIndex & index ) const
virtual bool editorEvent ( QEvent * event, QAbstractItemModel * model, const QStyleOptionViewItem & option, const QModelIndex & index )
virtual void paint ( QPainter * painter, const QStyleOptionViewItem & option, const QModelIndex & index ) const = 0
virtual void setEditorData ( QWidget * editor, const QModelIndex & index ) const
virtual void setModelData ( QWidget * editor, QAbstractItemModel * model, const QModelIndex & index ) const
virtual QSize sizeHint ( const QStyleOptionViewItem & option, const QModelIndex & index ) const = 0
virtual void updateEditorGeometry ( QWidget * editor, const QStyleOptionViewItem & option, const QModelIndex & index ) const
</PROTOS>

<SLOTS>
// bool helpEvent ( QHelpEvent * event, QAbstractItemView * view, const QStyleOptionViewItem & option, const QModelIndex & index )
</SLOTS>

<SIGNALS>
void closeEditor ( QWidget * editor, QAbstractItemDelegate::EndEditHint hint = NoHint )
void commitData ( QWidget * editor )
void sizeHintChanged ( const QModelIndex & index )
</SIGNALS>
