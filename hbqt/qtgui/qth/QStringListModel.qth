/*
 * $Id: QStringListModel.qth 160 2013-02-04 23:59:32Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QAbstractListModel
Type        = Core
New         = 
</CLASS>

<CODE>
#if QT_VERSION <= 0x040900
#include <QtGui/QStringListModel>
#else
#include <QtCore/QStringListModel>
#endif

/*
 * QStringListModel ( QObject * parent = 0 )
 * QStringListModel ( const QStringList & strings, QObject * parent = 0 )
 */
HB_FUNC( QT_QSTRINGLISTMODEL )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QOBJECT" ) )
   {
      __HB_RETPTRGC__( new QStringListModel( hbqt_par_QObject( 1 ) ) );
   }
   else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QSTRINGLIST" ) )
   {
      __HB_RETPTRGC__( new QStringListModel( *hbqt_par_QStringList( 1 ) ) );
   }
   else if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QSTRINGLIST" ) && hbqt_par_isDerivedFrom( 2, "QOBJECT" ) )
   {
      __HB_RETPTRGC__( new QStringListModel( *hbqt_par_QStringList( 1 ), hbqt_par_QObject( 2 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QStringListModel() );
   }      
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
virtual QVariant data ( const QModelIndex & index, int role ) const
virtual Qt::ItemFlags flags ( const QModelIndex & index ) const
virtual bool insertRows ( int row, int count, const QModelIndex & parent = QModelIndex() )
virtual bool removeRows ( int row, int count, const QModelIndex & parent = QModelIndex() )
virtual int rowCount ( const QModelIndex & parent = QModelIndex() ) const
virtual bool setData ( const QModelIndex & index, const QVariant & value, int role = Qt::EditRole )
void setStringList ( const QStringList & strings )
QStringList stringList () const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>

<VARIABLES>
</VARIABLES>
