/*
 * $Id: QToolBox.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QFrame
New         = pParent, nFlags
</CLASS>

<CODE>
#include <QtGui/QToolBox>


/*
 * QToolBox ( QWidget * parent = 0, Qt::WindowFlags f = 0 )
 * ~QToolBox ()
 */
HB_FUNC( QT_QTOOLBOX )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QWIDGET" ) )
   {
      __HB_RETPTRGC__( new QToolBox( hbqt_par_QWidget( 1 ) ) );
   }
   else if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QWIDGET" ) && HB_ISNUM( 2 ) )
   {
      __HB_RETPTRGC__( new QToolBox( hbqt_par_QWidget( 1 ), ( Qt::WindowFlags ) hb_parni( 2 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QToolBox() );
   }      
}
</CODE>

<PROTOS>
int addItem ( QWidget * widget, const QIcon & iconSet, const QString & text )
int addItem ( QWidget * w, const QString & text )
int count () const
int currentIndex () const
QWidget * currentWidget () const
int indexOf ( QWidget * widget ) const
int insertItem ( int index, QWidget * widget, const QIcon & icon, const QString & text )
int insertItem ( int index, QWidget * widget, const QString & text )
bool isItemEnabled ( int index ) const
QIcon itemIcon ( int index ) const
QString itemText ( int index ) const
QString itemToolTip ( int index ) const
void removeItem ( int index )
void setItemEnabled ( int index, bool enabled )
void setItemIcon ( int index, const QIcon & icon )
void setItemText ( int index, const QString & text )
void setItemToolTip ( int index, const QString & toolTip )
QWidget * widget ( int index ) const
</PROTOS>

<SLOTS>
void setCurrentIndex ( int index )
void setCurrentWidget ( QWidget * widget )
</SLOTS>

<SIGNALS>
void currentChanged ( int index )
</SIGNALS>
