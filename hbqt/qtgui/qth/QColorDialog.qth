/*
 * $Id: QColorDialog.qth 160 2013-02-04 23:59:32Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>

Inherit     = QDialog
New         = pParent
Calls    = QT_QColorDialog

</CLASS>

<CODE>
#include <QtGui/QColorDialog>

/*
 * QColorDialog ( QWidget * parent = 0 )
 * QColorDialog ( const QColor & initial, QWidget * parent = 0 )
 * ~QColorDialog ()
 */
HB_FUNC( QT_QCOLORDIALOG )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QCOLOR" ) )
   {
      __HB_RETPTRGC__( new QColorDialog( *hbqt_par_QColor( 1 ) ) );
   }
   else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QWIDGET" ) )
   {
      __HB_RETPTRGC__( new QColorDialog( hbqt_par_QWidget( 1 ) ) );
   }
   else if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QCOLOR" ) && hbqt_par_isDerivedFrom( 2, "QWIDGET" ) )
   {
      __HB_RETPTRGC__( new QColorDialog( *hbqt_par_QColor( 1 ), hbqt_par_QWidget( 2 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QColorDialog() );
   }
}

</CODE>

<ENUMS>
enum ColorDialogOption { ShowAlphaChannel, NoButtons, DontUseNativeDialog }
flags ColorDialogOptions
</ENUMS>

<PROTOS>
QColor currentColor () const
void open ()
//void open ( QObject * receiver, const char * member )
ColorDialogOptions options () const
QColor selectedColor () const
void setCurrentColor ( const QColor & color )
void setOption ( ColorDialogOption option, bool on = true )
void setOptions ( ColorDialogOptions options )
virtual void setVisible ( bool visible )
bool testOption ( ColorDialogOption option ) const

void customColor ( int index ){
   QColorDialog * p = ( QColorDialog * ) hbqt_par_ptr( 0 );
   if( p )
   {
      #if QT_VERSION <= 0x040900
      hb_retnl( p->customColor( hb_parni( 1 ) ) );
      #else
      hb_itemReturnRelease( hbqt_bindGetHbObject( NULL, new QColor( p->customColor( hb_parni( 1 ) ) ), "HB_QCOLOR", hbqt_del_QColor, HBQT_BIT_NONE | HBQT_BIT_OWNER ) );
      #endif
   }
}

int customCount ()
QColor getColor ( const QColor & initial, QWidget * parent, const QString & title, ColorDialogOptions options = 0 )
QColor getColor ( const QColor & initial = Qt::white, QWidget * parent = 0 )
void setCustomColor ( int index, QRgb color )
void setStandardColor ( int index, QRgb color )
</PROTOS>

<SIGNALS>
void colorSelected ( const QColor & color )
void currentColorChanged ( const QColor & color )
</SIGNALS>
