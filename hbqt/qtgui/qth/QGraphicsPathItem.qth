/*
 * $Id: QGraphicsPathItem.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Inherit     = QAbstractGraphicsShapeItem
Type        =
New         =
</CLASS>

<CODE>
#include <QtGui/QGraphicsPathItem>


/*
 * QGraphicsPathItem ( QGraphicsItem * parent = 0 )
 * QGraphicsPathItem ( const QPainterPath & path, QGraphicsItem * parent = 0 )
 * ~QGraphicsPathItem ()
 */
HB_FUNC( QT_QGRAPHICSPATHITEM )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QGRAPHICSITEM" ) )
   {
      __HB_RETPTRGC__( new QGraphicsPathItem( hbqt_par_QGraphicsItem( 1 ) ) );
   }
   else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QPAINTERPATH" ) )  
   {   
      __HB_RETPTRGC__( new QGraphicsPathItem( *hbqt_par_QPainterPath( 1 ), 0 ) );
   }
   else if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QPAINTERPATH" ) && hbqt_par_isDerivedFrom( 2, "QGRAPHICSITEM" ) )  
   {   
      __HB_RETPTRGC__( new QGraphicsPathItem( *hbqt_par_QPainterPath( 1 ), hbqt_par_QGraphicsItem( 2 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QGraphicsPathItem() );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
QPainterPath path () const
void setPath ( const QPainterPath & path )
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>

<VARIABLES>
</VARIABLES>
