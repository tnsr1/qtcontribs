/*
 * $Id: QGraphicsSceneDragDropEvent.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Inherit     = QGraphicsSceneEvent
Type        =
New         =
Constructor =
</CLASS>

<CODE>
#include <QtGui/QGraphicsSceneDragDropEvent>
#include <QtGui/QWidget>
#include <QtCore/QMimeData>
#include <QtCore/QPointF>
#include <QtCore/QPoint>


/*
 * QGraphicsSceneDragDropEvent ()
 * ~QGraphicsSceneDragDropEvent ()
 */
HB_FUNC( QT_QGRAPHICSSCENEDRAGDROPEVENT )
{
   __HB_RETPTRGC__( new QGraphicsSceneDragDropEvent() );
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
void acceptProposedAction ()
Qt::MouseButtons buttons () const
Qt::DropAction dropAction () const
const QMimeData * mimeData () const{
   QGraphicsSceneDragDropEvent * p = ( QGraphicsSceneDragDropEvent * ) hbqt_par_ptr( 0 );
   if( p )
   {
      hb_itemReturnRelease( hbqt_bindGetHbObject( NULL, ( void* ) p->mimeData(), "HB_QMIMEDATA", NULL, HBQT_BIT_NONE ) );
   }
}
Qt::KeyboardModifiers modifiers () const
QPointF pos () const
Qt::DropActions possibleActions () const
Qt::DropAction proposedAction () const
QPointF scenePos () const
QPoint screenPos () const
void setDropAction ( Qt::DropAction action )
QWidget * source () const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>

<VARIABLES>
</VARIABLES>
