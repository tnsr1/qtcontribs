/*
 * $Id: QPen.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
New         =
Type        = PlainObject
</CLASS>


<CODE>
#include <QtGui/QPen>


/*
 * QPen ()
 * QPen ( Qt::PenStyle style )
 * QPen ( const QColor & color )
 * QPen ( const QBrush & brush, qreal width, Qt::PenStyle style = Qt::SolidLine, Qt::PenCapStyle cap = Qt::SquareCap, Qt::PenJoinStyle join = Qt::BevelJoin )
 * QPen ( const QPen & pen )
 * ~QPen ()
 */
HB_FUNC( QT_QPEN )
{
   if( hb_pcount() == 1 && HB_ISNUM( 1 ) )
   {
      __HB_RETPTRGC__( new QPen( ( Qt::PenStyle ) hb_parni( 1 ) ) );
   }
   else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QPEN" ) )
   {
      __HB_RETPTRGC__( new QPen( *hbqt_par_QPen( 1 ) ) );
   }
   else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QCOLOR" ) )
   {
      __HB_RETPTRGC__( new QPen( *hbqt_par_QColor( 2 ) ) );
   }
   else if( hb_pcount() >= 2 && hbqt_par_isDerivedFrom( 1, "QBRUSH" ) && HB_ISNUM( 2 ) )
   {
      Qt::PenStyle iStyle = HB_ISNUM( 3 ) ? ( Qt::PenStyle ) hb_parni( 3 ) : Qt::SolidLine;
      Qt::PenCapStyle iCap = HB_ISNUM( 4 ) ? ( Qt::PenCapStyle ) hb_parni( 4 ) : Qt::SquareCap;
      Qt::PenJoinStyle iJoin = HB_ISNUM( 5 ) ? ( Qt::PenJoinStyle ) hb_parni( 5 ) : Qt::BevelJoin;

      __HB_RETPTRGC__( new QPen( *hbqt_par_QBrush( 1 ), hb_parnd( 2 ), iStyle, iCap, iJoin ) );
   }   
   else
   {
      __HB_RETPTRGC__( new QPen() );
   }
}
</CODE>

<PROTOS>
QBrush brush () const
Qt::PenCapStyle capStyle () const
QColor color () const
qreal dashOffset () const
QVector<qreal> dashPattern () const
bool isCosmetic () const
bool isSolid () const
Qt::PenJoinStyle joinStyle () const
qreal miterLimit () const
void setBrush ( const QBrush & brush )
void setCapStyle ( Qt::PenCapStyle style )
void setColor ( const QColor & color )
void setCosmetic ( bool cosmetic )
void setDashOffset ( qreal offset )
void setDashPattern ( const QVector<qreal> & pattern )
void setJoinStyle ( Qt::PenJoinStyle style )
void setMiterLimit ( qreal limit )
void setStyle ( Qt::PenStyle style )
void setWidth ( int width )
void setWidthF ( qreal width )
Qt::PenStyle style () const
int width () const
qreal widthF () const
</PROTOS>
