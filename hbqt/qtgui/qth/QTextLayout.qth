/*
 * $Id: QTextLayout.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Inherit     = 
Type        = Core
New         = 
</CLASS>

<CODE>
#include <QtGui/QTextLayout>


/*
 * QTextLayout ()
 * QTextLayout ( const QString & text )
 * QTextLayout ( const QString & text, const QFont & font, QPaintDevice * paintdevice = 0 )
 * ~QTextLayout ()
 */
HB_FUNC( QT_QTEXTLAYOUT )
{
   __HB_RETPTRGC__( new QTextLayout() );
}
</CODE>

<ENUMS>
enum CursorMode { SkipCharacters, SkipWords }
</ENUMS>

<PROTOS>
//QList<FormatRange> additionalFormats () const
void beginLayout ()
QRectF boundingRect () const
bool cacheEnabled () const
void clearAdditionalFormats ()
void clearLayout ()
QTextLine createLine ()
void draw ( QPainter * p, const QPointF & pos, const QVector<FormatRange> & selections = QVector<FormatRange> (), const QRectF & clip = QRectF() ) const
void drawCursor ( QPainter * painter, const QPointF & position, int cursorPosition, int width ) const
void drawCursor ( QPainter * painter, const QPointF & position, int cursorPosition ) const
void endLayout ()
QFont font () const
bool isValidCursorPosition ( int pos ) const
QTextLine lineAt ( int i ) const
int lineCount () const
QTextLine lineForTextPosition ( int pos ) const
qreal maximumWidth () const
qreal minimumWidth () const
int nextCursorPosition ( int oldPos, CursorMode mode = SkipCharacters ) const
QPointF position () const
int preeditAreaPosition () const
QString preeditAreaText () const
int previousCursorPosition ( int oldPos, CursorMode mode = SkipCharacters ) const
void setAdditionalFormats ( const QList<FormatRange> & formatList )
void setCacheEnabled ( bool enable )
void setFont ( const QFont & font )
void setPosition ( const QPointF & p )
void setPreeditArea ( int position, const QString & text )
void setText ( const QString & string )
void setTextOption ( const QTextOption & option )
QString text () const
QTextOption textOption () const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
