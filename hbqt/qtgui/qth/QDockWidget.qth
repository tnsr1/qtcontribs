/*
 * $Id: QDockWidget.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QWidget
New         = pParent
</CLASS>

<CODE>
#include <QtGui/QDockWidget>


/*
 * QDockWidget ( const QString & title, QWidget * parent = 0, Qt::WindowFlags flags = 0 )
 * QDockWidget ( QWidget * parent = 0, Qt::WindowFlags flags = 0 )
 * ~QDockWidget ()
 */
HB_FUNC( QT_QDOCKWIDGET )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QWIDGET" ) )
   {
      __HB_RETPTRGC__( new QDockWidget( hbqt_par_QWidget( 1 ) ) );
   }
   else if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QWIDGET" ) && HB_ISNUM( 2 ) )
   {
      __HB_RETPTRGC__( new QDockWidget( hbqt_par_QWidget( 1 ), ( Qt::WindowFlags ) hb_parni( 2 ) ) );
   }
   else if( hb_pcount() == 1 && HB_ISCHAR( 1 ) )
   {
      void * pText01 = NULL;
      __HB_RETPTRGC__( new QDockWidget( hb_parstr_utf8( 1, &pText01, NULL ), 0, 0 ) );
      hb_strfree( pText01 );
   }
   else if( hb_pcount() == 2 && HB_ISCHAR( 1 ) && hbqt_par_isDerivedFrom( 2, "QWIDGET" ) )
   {
      void * pText01 = NULL;
      __HB_RETPTRGC__( new QDockWidget( hb_parstr_utf8( 1, &pText01, NULL ), hbqt_par_QWidget( 2 ) ) );
      hb_strfree( pText01 );
   }
   else if( hb_pcount() == 3 && HB_ISCHAR( 1 ) && hbqt_par_isDerivedFrom( 2, "QWIDGET" ) && HB_ISNUM( 3 ) )
   {
      void * pText01 = NULL;
      __HB_RETPTRGC__( new QDockWidget( hb_parstr_utf8( 1, &pText01, NULL ), hbqt_par_QWidget( 2 ), ( Qt::WindowFlags ) hb_parni( 3 ) ) );
      hb_strfree( pText01 );
   }
   else
   {
      __HB_RETPTRGC__( new QDockWidget() );
   }
}
</CODE>

<ENUMS>
enum DockWidgetFeature { DockWidgetClosable, DockWidgetMovable, DockWidgetFloatable, DockWidgetVerticalTitleBar, AllDockWidgetFeatures, NoDockWidgetFeatures }
flags DockWidgetFeatures
</ENUMS>

<PROTOS>
Qt::DockWidgetAreas allowedAreas () const
DockWidgetFeatures features () const
bool isAreaAllowed ( Qt::DockWidgetArea area ) const
bool isFloating () const
void setAllowedAreas ( Qt::DockWidgetAreas areas )
void setFeatures ( DockWidgetFeatures features )
void setFloating ( bool floating )
void setTitleBarWidget ( QWidget * widget )            [*X=1*]
void setWidget ( QWidget * widget )                    [*X=1*]
QWidget * titleBarWidget () const
QAction * toggleViewAction () const
QWidget * widget () const
</PROTOS>

<SIGNALS>
void allowedAreasChanged ( Qt::DockWidgetAreas allowedAreas )
void dockLocationChanged ( Qt::DockWidgetArea area )
void featuresChanged ( QDockWidget::DockWidgetFeatures features )
void topLevelChanged ( bool topLevel )
void visibilityChanged ( bool visible )
</SIGNALS>
