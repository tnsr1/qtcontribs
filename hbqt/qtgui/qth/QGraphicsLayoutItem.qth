/*
 * $Id: QGraphicsLayoutItem.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Inherit     = 
Type        = 
New         = 
Constructor = no
</CLASS>

<CODE>
#include <QtGui/QGraphicsLayoutItem>
#include <QtCore/QRectF>
#include <QtCore/QSizeF>
#include <QtCore/QPointF>


/*
 * QGraphicsLayoutItem ( QGraphicsLayoutItem * parent = 0, bool isLayout = false )
 * virtual ~QGraphicsLayoutItem ()
 */
HB_FUNC( QT_QGRAPHICSLAYOUTITEM )
{
   // __HB_RETPTRGC__( new QGraphicsLayoutItem() );
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
QRectF contentsRect () const
QSizeF effectiveSizeHint ( Qt::SizeHint which, const QSizeF & constraint = QSizeF() ) const
QRectF geometry () const
virtual void getContentsMargins ( qreal * left, qreal * top, qreal * right, qreal * bottom ) const
QGraphicsItem * graphicsItem () const
bool isLayout () const
qreal maximumHeight () const
QSizeF maximumSize () const
qreal maximumWidth () const
qreal minimumHeight () const
QSizeF minimumSize () const
qreal minimumWidth () const
bool ownedByLayout () const
QGraphicsLayoutItem * parentLayoutItem () const
qreal preferredHeight () const
QSizeF preferredSize () const
qreal preferredWidth () const
virtual void setGeometry ( const QRectF & rect )
void setMaximumHeight ( qreal height )
void setMaximumSize ( const QSizeF & size )
void setMaximumSize ( qreal w, qreal h )
void setMaximumWidth ( qreal width )
void setMinimumHeight ( qreal height )
void setMinimumSize ( const QSizeF & size )
void setMinimumSize ( qreal w, qreal h )
void setMinimumWidth ( qreal width )
void setParentLayoutItem ( QGraphicsLayoutItem * parent )
void setPreferredHeight ( qreal height )
void setPreferredSize ( const QSizeF & size )
void setPreferredSize ( qreal w, qreal h )
void setPreferredWidth ( qreal width )
void setSizePolicy ( const QSizePolicy & policy )
void setSizePolicy ( QSizePolicy::Policy hPolicy, QSizePolicy::Policy vPolicy, QSizePolicy::ControlType controlType = QSizePolicy::DefaultType )
QSizePolicy sizePolicy () const
virtual void updateGeometry ()
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>

<VARIABLES>
</VARIABLES>
