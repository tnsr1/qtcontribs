/*
 * $Id: QTextBlockFormat.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Inherit     = QTextFormat
Type        = Core
New         = 
</CLASS>

<CODE>
#include <QtGui/QTextBlockFormat>


/*
 * QTextBlockFormat ()
 *
 */
HB_FUNC( QT_QTEXTBLOCKFORMAT )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QTEXTBLOCKFORMAT" ) )
   {
      __HB_RETPTRGC__( new QTextBlockFormat( *hbqt_par_QTextBlockFormat( 1 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QTextBlockFormat() );
   }
}
</CODE>

<ENUMS>
enum FormatType { InvalidFormat, BlockFormat, CharFormat, ListFormat, ..., UserFormat }
enum ObjectTypes { NoObject, ImageObject, TableObject, TableCellObject, UserObject }
enum PageBreakFlag { PageBreak_Auto, PageBreak_AlwaysBefore, PageBreak_AlwaysAfter }
flags PageBreakFlags
enum Property { ObjectIndex, CssFloat, LayoutDirection, OutlinePen, ..., UserProperty }
</ENUMS>

<PROTOS>
Qt::Alignment alignment () const
qreal bottomMargin () const
int indent () const
bool isValid () const
qreal leftMargin () const
bool nonBreakableLines () const
PageBreakFlags pageBreakPolicy () const
qreal rightMargin () const
void setAlignment ( Qt::Alignment alignment )
void setBottomMargin ( qreal margin )
void setIndent ( int indentation )
void setLeftMargin ( qreal margin )
void setNonBreakableLines ( bool b )
void setPageBreakPolicy ( PageBreakFlags policy )
void setRightMargin ( qreal margin )
void setTabPositions ( const QList<QTextOption::Tab> & tabs )
void setTextIndent ( qreal indent )
void setTopMargin ( qreal margin )
QList<QTextOption::Tab> tabPositions () const
qreal textIndent () const
qreal topMargin () const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
