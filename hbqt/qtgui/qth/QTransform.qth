/*
 * $Id: QTransform.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Inherit     = 
Type        = Core
New         =
Destructor  = 
</CLASS>

<CODE>
#include <QtGui/QTransform>


/* QTransform ()
 * QTransform ( qreal m11, qreal m12, qreal m13, qreal m21, qreal m22, qreal m23, qreal m31, qreal m32, qreal m33 = 1.0 )
 * QTransform ( qreal m11, qreal m12, qreal m21, qreal m22, qreal dx, qreal dy )
 * QTransform ( const QMatrix & matrix )
 */
HB_FUNC( QT_QTRANSFORM )
{
   __HB_RETPTRGC__( new QTransform() );
}
</CODE>

<ENUMS>
enum TransformationType { TxNone, TxTranslate, TxScale, TxRotate, TxShear, TxProject }
</ENUMS>

<PROTOS>
qreal m11 () const
qreal m12 () const
qreal m13 () const
qreal m21 () const
qreal m22 () const
qreal m23 () const
qreal m31 () const
qreal m32 () const
qreal m33 () const
QTransform adjoint () const
qreal det () const
qreal determinant () const
qreal dx () const
qreal dy () const
QTransform inverted ( bool * invertible = 0 ) const
bool isAffine () const
bool isIdentity () const
bool isInvertible () const
bool isRotating () const
bool isScaling () const
bool isTranslating () const

void map ( qreal x, qreal y, qreal * tx, qreal * ty ) const
QPointF map ( const QPointF & p ) const
QPoint map ( const QPoint & point ) const
QLine map ( const QLine & l ) const
QLineF map ( const QLineF & line ) const
QPolygonF map ( const QPolygonF & polygon ) const
QPolygon map ( const QPolygon & polygon ) const
QRegion map ( const QRegion & region ) const
QPainterPath map ( const QPainterPath & path ) const
//void map ( int x, int y, int * tx, int * ty ) const

QRectF mapRect ( const QRectF & rectangle ) const
QRect mapRect ( const QRect & rectangle ) const
QPolygon mapToPolygon ( const QRect & rectangle ) const
void reset ()
QTransform & rotate ( qreal angle, Qt::Axis axis = Qt::ZAxis )
QTransform & rotateRadians ( qreal angle, Qt::Axis axis = Qt::ZAxis )
QTransform & scale ( qreal sx, qreal sy )
void setMatrix ( qreal m11, qreal m12, qreal m13, qreal m21, qreal m22, qreal m23, qreal m31, qreal m32, qreal m33 )
QTransform & shear ( qreal sh, qreal sv )
const QMatrix & toAffine () const
QTransform & translate ( qreal dx, qreal dy )
QTransform transposed () const
TransformationType type () const

QTransform fromScale ( qreal sx, qreal sy )
QTransform fromTranslate ( qreal dx, qreal dy )
bool quadToQuad ( const QPolygonF & one, const QPolygonF & two, QTransform & trans )
bool quadToSquare ( const QPolygonF & quad, QTransform & trans )
bool squareToQuad ( const QPolygonF & quad, QTransform & trans )
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
