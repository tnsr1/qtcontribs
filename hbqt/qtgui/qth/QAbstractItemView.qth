/*
 * $Id: QAbstractItemView.qth 201 2013-04-08 07:06:53Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QAbstractScrollArea
New         = pParent
Constructor = No
</CLASS>


<CODE>
#include <QtGui/QAbstractItemView>


/*
 * QAbstractItemView ( QWidget * parent = 0 )
 * ~QAbstractItemView ()
 */
HB_FUNC( QT_QABSTRACTITEMVIEW )
{

}
</CODE>

<ENUMS>
flags EditTriggers
enum DragDropMode { NoDragDrop, DragOnly, DropOnly, DragDrop, InternalMove }
enum EditTrigger { NoEditTriggers, CurrentChanged, DoubleClicked, SelectedClicked, ..., AllEditTriggers }
enum ScrollHint { EnsureVisible, PositionAtTop, PositionAtBottom, PositionAtCenter }
enum ScrollMode { ScrollPerItem, ScrollPerPixel }
enum SelectionBehavior { SelectItems, SelectRows, SelectColumns }
enum SelectionMode { SingleSelection, ContiguousSelection, ExtendedSelection, MultiSelection, NoSelection }
</ENUMS>

<PROTOS>
bool alternatingRowColors () const
int autoScrollMargin () const
void closePersistentEditor ( const QModelIndex & index )
QModelIndex currentIndex () const

Qt::DropAction defaultDropAction () const                           [*V=0x040600*]

DragDropMode dragDropMode () const
bool dragDropOverwriteMode () const
bool dragEnabled () const
EditTriggers editTriggers () const
bool hasAutoScroll () const
ScrollMode horizontalScrollMode () const
QSize iconSize () const
virtual QModelIndex indexAt ( const QPoint & point ) const = 0
QWidget * indexWidget ( const QModelIndex & index ) const
QAbstractItemDelegate * itemDelegate () const
QAbstractItemDelegate * itemDelegate ( const QModelIndex & index ) const
QAbstractItemDelegate * itemDelegateForColumn ( int column ) const
QAbstractItemDelegate * itemDelegateForRow ( int row ) const
virtual void keyboardSearch ( const QString & search )
QAbstractItemModel * model () const
void openPersistentEditor ( const QModelIndex & index )
QModelIndex rootIndex () const
virtual void scrollTo ( const QModelIndex & index, ScrollHint hint = EnsureVisible ) = 0
QAbstractItemView::SelectionBehavior selectionBehavior () const
QAbstractItemView::SelectionMode selectionMode () const
QItemSelectionModel * selectionModel () const
void setAlternatingRowColors ( bool enable )
void setAutoScroll ( bool enable )
void setAutoScrollMargin ( int margin )

void setDefaultDropAction ( Qt::DropAction dropAction )             [*V=0x040600*]

void setDragDropMode ( DragDropMode behavior )
void setDragDropOverwriteMode ( bool overwrite )
void setDragEnabled ( bool enable )
void setDropIndicatorShown ( bool enable )
void setEditTriggers ( EditTriggers triggers )
void setHorizontalScrollMode ( ScrollMode mode )
void setIconSize ( const QSize & size )
void setIndexWidget ( const QModelIndex & index, QWidget * widget )
void setItemDelegate ( QAbstractItemDelegate * delegate )
void setItemDelegateForColumn ( int column, QAbstractItemDelegate * delegate )
void setItemDelegateForRow ( int row, QAbstractItemDelegate * delegate )
virtual void setModel ( QAbstractItemModel * model )
void setSelectionBehavior ( QAbstractItemView::SelectionBehavior behavior )
void setSelectionMode ( QAbstractItemView::SelectionMode mode )
virtual void setSelectionModel ( QItemSelectionModel * selectionModel )
void setTabKeyNavigation ( bool enable )
void setTextElideMode ( Qt::TextElideMode mode )
void setVerticalScrollMode ( ScrollMode mode )
bool showDropIndicator () const
virtual int sizeHintForColumn ( int column ) const
QSize sizeHintForIndex ( const QModelIndex & index ) const
virtual int sizeHintForRow ( int row ) const
bool tabKeyNavigation () const
Qt::TextElideMode textElideMode () const
ScrollMode verticalScrollMode () const
virtual QRect visualRect ( const QModelIndex & index ) const = 0
</PROTOS>

<SLOTS>

void clearSelection ()
void edit ( const QModelIndex & index )
virtual void reset ()
void scrollToBottom ()
void scrollToTop ()
virtual void selectAll ()
void setCurrentIndex ( const QModelIndex & index )
virtual void setRootIndex ( const QModelIndex & index )

// Called in QWidget - to be addressed in future with some other mechanism.
void update ()
void update ( int x, int y, int w, int h )
void update ( const QRect & rect )
void update ( const QRegion & rgn ) 
// This class specific
void update ( const QModelIndex & index )

</SLOTS>

<SIGNALS>
void activated ( const QModelIndex & index )
void clicked ( const QModelIndex & index )
void doubleClicked ( const QModelIndex & index )
void entered ( const QModelIndex & index )
void pressed ( const QModelIndex & index )
void viewportEntered ()
</SIGNALS>
