/*
 * $Id: QBarSet.qth 428 2016-10-20 01:05:49Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2016 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QObject
Version     = 0x050700
</CLASS>


<CODE>
#include <QtCharts/QBarSet>


/*
 * QBarSet(const QString label, QObject *parent = Q_NULLPTR)
 * virtual   ~QBarSet()
 */
HB_FUNC( QT_QBARSET )
{
   if( hb_pcount() == 2 && HB_ISCHAR( 1 ) && hbqt_par_isDerivedFrom( 2, "QObject" ) )
   {
      void * pText01 = NULL;
      __HB_RETPTRGC__( new QBarSet( hb_parstr_utf8( 1, &pText01, NULL ), hbqt_par_QObject( 2 ) ) );
      hb_strfree( pText01 );
   }
   else if( hb_pcount() == 1 && HB_ISCHAR( 1 ) )
   {
      void * pText01 = NULL;
      __HB_RETPTRGC__( new QBarSet( hb_parstr_utf8( 1, &pText01, NULL ) ) );
      hb_strfree( pText01 );
   }
   else
   {
      hb_errRT_BASE( EG_ARG, 9999, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
void   append(const qreal value)
void   append(const QList<qreal> &values)
qreal   at(const int index) const
QColor   borderColor()
QBrush   brush() const
QColor   color()
int   count() const
void   insert(const int index, const qreal value)
QString   label() const
QBrush   labelBrush() const
QColor   labelColor()
QFont   labelFont() const
QPen   pen() const
void   remove(const int index, const int count = 1)
void   replace(const int index, const qreal value)
void   setBorderColor(const QColor &color)
void   setBrush(const QBrush &brush)
void   setColor(const QColor &color)
void   setLabel(const QString label)
void   setLabelBrush(const QBrush &brush)
void   setLabelColor(const QColor &color)
void   setLabelFont(const QFont &font)
void   setPen(const QPen &pen)
qreal   sum() const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
void   borderColorChanged(QColor color)
void   brushChanged()
void   clicked(int index)
void   colorChanged(QColor color)
void   doubleClicked(int index)
void   hovered(bool status, int index)
void   labelBrushChanged()
void   labelChanged()
void   labelColorChanged(QColor color)
void   labelFontChanged()
void   penChanged()
void   pressed(int index)
void   released(int index)
void   valueChanged(int index)
void   valuesAdded(int index, int count)
void   valuesRemoved(int index, int count)
</SIGNALS>
