
/* $DOC$
   $TEMPLATE$
      Class
   $NAME$
      QByteArray()
   $CATEGORY$
      Harbour Bindings for Qt
   $SUBCATEGORY$
      GUI
   $EXTERNALLINK$
      http://doc.qt.io/qt-4.5/qbytearray.html
   $ONELINER$
      Creates a new QByteArray object.
   $INHERITS$

   $SYNTAX$
      QByteArray( ... )

   $ARGUMENTS$

   $RETURNS$
      An instance of the object of type QByteArray
   $METHODS$
      :append( oQByteArray )                              -> oQByteArray
      :( cStr )                                           -> oQByteArray
      :( cStr, nLen )                                     -> oQByteArray
      :( nCh )                                            -> oQByteArray
      :at( nI )                                           -> cChar
      :capacity()                                         -> nInt
      :chop( nN )                                         -> NIL
      :clear()                                            -> NIL
      :constData()                                        -> cChar
      :count( oQByteArray )                               -> nInt
      :( cStr )                                           -> nInt
      :( nCh )                                            -> nInt
      :()                                                 -> nInt
      :data()                                             -> cChar
      :endsWith( oQByteArray )                            -> lBool
      :( cStr )                                           -> lBool
      :( nCh )                                            -> lBool
      :fill( nCh, nSize )                                 -> oQByteArray
      :indexOf( oQByteArray, nFrom )                      -> nInt
      :( cStr, nFrom )                                    -> nInt
      :( nCh, nFrom )                                     -> nInt
      :insert( nI, oQByteArray )                          -> oQByteArray
      :( nI, cStr )                                       -> oQByteArray
      :( nI, nCh )                                        -> oQByteArray
      :isEmpty()                                          -> lBool
      :isNull()                                           -> lBool
      :lastIndexOf( oQByteArray, nFrom )                  -> nInt
      :( cStr, nFrom )                                    -> nInt
      :( nCh, nFrom )                                     -> nInt
      :left( nLen )                                       -> oQByteArray
      :leftJustified( nWidth, nFill, lTruncate )          -> oQByteArray
      :length()                                           -> nInt
      :mid( nPos, nLen )                                  -> oQByteArray
      :prepend( oQByteArray )                             -> oQByteArray
      :( cStr )                                           -> oQByteArray
      :( nCh )                                            -> oQByteArray
      :push_back( oQByteArray )                           -> NIL
      :( cStr )                                           -> NIL
      :( nCh )                                            -> NIL
      :push_front( oQByteArray )                          -> NIL
      :( cStr )                                           -> NIL
      :( nCh )                                            -> NIL
      :remove( nPos, nLen )                               -> oQByteArray
      :repeated( nTimes )                                 -> oQByteArray
      :replace( nPos, nLen, oQByteArray )                 -> oQByteArray
      :( nPos, nLen, cAfter )                             -> oQByteArray
      :( oQByteArray, oQByteArray )                       -> oQByteArray
      :( cBefore, oQByteArray )                           -> oQByteArray
      :( cBefore, nBsize, cAfter, nAsize )                -> oQByteArray
      :( oQByteArray, cAfter )                            -> oQByteArray
      :( cBefore, oQByteArray )                           -> oQByteArray
      :( cBefore, cAfter )                                -> oQByteArray
      :( nBefore, oQByteArray )                           -> oQByteArray
      :( nBefore, cAfter )                                -> oQByteArray
      :( nBefore, nAfter )                                -> oQByteArray
      :reserve( nSize )                                   -> NIL
      :resize( nSize )                                    -> NIL
      :right( nLen )                                      -> oQByteArray
      :rightJustified( nWidth, nFill, lTruncate )         -> oQByteArray
      :setNum( nN, nBase )                                -> oQByteArray
      :simplified()                                       -> oQByteArray
      :size()                                             -> nInt
      :split( nSep )                                      -> oQList_QByteArray>
      :squeeze()                                          -> NIL
      :startsWith( oQByteArray )                          -> lBool
      :( cStr )                                           -> lBool
      :( nCh )                                            -> lBool
      :toBase64()                                         -> oQByteArray
      :toDouble( @lOk )                                   -> nDouble
      :toFloat( @lOk )                                    -> nFloat
      :toHex()                                            -> oQByteArray
      :toInt( @lOk, nBase )                               -> nInt
      :toLong( @lOk, nBase )                              -> nLong
      :toLongLong( @lOk, nBase )                          -> nQlonglong
      :toLower()                                          -> oQByteArray
      :toPercentEncoding( oQByteArray, oQByteArray, nPercent )  -> oQByteArray
      :toShort( @lOk, nBase )                             -> nShort
      :toUInt( @lOk, nBase )                              -> nUint
      :toULong( @lOk, nBase )                             -> nUlong
      :toULongLong( @lOk, nBase )                         -> nQulonglong
      :toUShort( @lOk, nBase )                            -> nUshort
      :toUpper()                                          -> oQByteArray
      :trimmed()                                          -> oQByteArray
      :truncate( nPos )                                   -> NIL

   $DESCRIPTION$

   $EXAMPLES$

   $TESTS$

   $STATUS$
      R
   $COMPLIANCE$
      Not Clipper compatible
   $PLATFORMS$
      Windows, Linux, Mac OS X, OS/2
   $VERSION$
      4.5 or upper
   $FILES$
      Library: hbqtcore
   $END$
 */
