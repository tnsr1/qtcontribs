
/* $DOC$
   $TEMPLATE$
      Class
   $NAME$
      QUrl()
   $CATEGORY$
      Harbour Bindings for Qt
   $SUBCATEGORY$
      GUI
   $EXTERNALLINK$
      http://doc.qt.io/qt-4.5/qurl.html
   $ONELINER$
      Creates a new QUrl object.
   $INHERITS$

   $SYNTAX$
      QUrl( ... )

   $ARGUMENTS$

   $RETURNS$
      An instance of the object of type QUrl
   $METHODS$
      :addEncodedQueryItem( oQByteArray, oQByteArray )    -> NIL
      :addQueryItem( cKey, cValue )                       -> NIL
      :allEncodedQueryItemValues( oQByteArray )           -> oQList_QByteArray>
      :allQueryItemValues( cKey )                         -> oQStringList
      :authority()                                        -> cQString
      :clear()                                            -> NIL
      :encodedFragment()                                  -> oQByteArray
      :encodedHost()                                      -> oQByteArray
      :encodedPassword()                                  -> oQByteArray
      :encodedPath()                                      -> oQByteArray
      :encodedQuery()                                     -> oQByteArray
      :encodedQueryItemValue( oQByteArray )               -> oQByteArray
      :encodedUserName()                                  -> oQByteArray
      :errorString()                                      -> cQString
      :fragment()                                         -> cQString
      :hasEncodedQueryItem( oQByteArray )                 -> lBool
      :hasFragment()                                      -> lBool
      :hasQuery()                                         -> lBool
      :hasQueryItem( cKey )                               -> lBool
      :host()                                             -> cQString
      :isEmpty()                                          -> lBool
      :isParentOf( oQUrl )                                -> lBool
      :isRelative()                                       -> lBool
      :isValid()                                          -> lBool
      :password()                                         -> cQString
      :path()                                             -> cQString
      :port()                                             -> nInt
      :( nDefaultPort )                                   -> nInt
      :queryItemValue( cKey )                             -> cQString
      :queryPairDelimiter()                               -> cChar
      :queryValueDelimiter()                              -> cChar
      :removeAllEncodedQueryItems( oQByteArray )          -> NIL
      :removeAllQueryItems( cKey )                        -> NIL
      :removeEncodedQueryItem( oQByteArray )              -> NIL
      :removeQueryItem( cKey )                            -> NIL
      :resolved( oQUrl )                                  -> oQUrl
      :scheme()                                           -> cQString
      :setAuthority( cAuthority )                         -> NIL
      :setEncodedFragment( oQByteArray )                  -> NIL
      :setEncodedHost( oQByteArray )                      -> NIL
      :setEncodedPassword( oQByteArray )                  -> NIL
      :setEncodedPath( oQByteArray )                      -> NIL
      :setEncodedQuery( oQByteArray )                     -> NIL
      :setEncodedUrl( oQByteArray )                       -> NIL
      :( oQByteArray, nParsingMode )                      -> NIL
      :setEncodedUserName( oQByteArray )                  -> NIL
      :setFragment( cFragment )                           -> NIL
      :setHost( cHost )                                   -> NIL
      :setPassword( cPassword )                           -> NIL
      :setPath( cPath )                                   -> NIL
      :setPort( nPort )                                   -> NIL
      :setScheme( cScheme )                               -> NIL
      :setUrl( cUrl )                                     -> NIL
      :( cUrl, nParsingMode )                             -> NIL
      :setUserInfo( cUserInfo )                           -> NIL
      :setUserName( cUserName )                           -> NIL
      :toEncoded( nOptions )                              -> oQByteArray
      :toLocalFile()                                      -> cQString
      :toString( nOptions )                               -> cQString
      :userInfo()                                         -> cQString
      :userName()                                         -> cQString
      :fromAce( oQByteArray )                             -> cQString
      :fromEncoded( oQByteArray )                         -> oQUrl
      :( oQByteArray, nParsingMode )                      -> oQUrl
      :fromLocalFile( cLocalFile )                        -> oQUrl
      :fromPercentEncoding( oQByteArray )                 -> cQString
      :idnWhitelist()                                     -> oQStringList
      :setIdnWhitelist( oQStringList )                    -> NIL
      :toAce( cDomain )                                   -> oQByteArray
      :toPercentEncoding( cInput, oQByteArray, oQByteArray )  -> oQByteArray

   $DESCRIPTION$

   $EXAMPLES$

   $TESTS$

   $STATUS$
      R
   $COMPLIANCE$
      Not Clipper compatible
   $PLATFORMS$
      Windows, Linux, Mac OS X, OS/2
   $VERSION$
      4.5 or upper
   $FILES$
      Library: hbqtcore
   $END$
 */
