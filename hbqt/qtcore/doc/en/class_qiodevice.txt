
/* $DOC$
   $TEMPLATE$
      Class
   $NAME$
      QIODevice()
   $CATEGORY$
      Harbour Bindings for Qt
   $SUBCATEGORY$
      GUI
   $EXTERNALLINK$
      http://doc.qt.io/qt-4.5/qiodevice.html
   $ONELINER$
      Creates a new QIODevice object.
   $INHERITS$
      QObject
   $SYNTAX$
      QIODevice( ... )

   $ARGUMENTS$

   $RETURNS$
      An instance of the object of type QIODevice
   $METHODS$
      :atEnd()                                            -> lBool
      :bytesAvailable()                                   -> nQint64
      :bytesToWrite()                                     -> nQint64
      :canReadLine()                                      -> lBool
      :close()                                            -> NIL
      :errorString()                                      -> cQString
      :getChar( cC )                                      -> lBool
      :isOpen()                                           -> lBool
      :isReadable()                                       -> lBool
      :isSequential()                                     -> lBool
      :isTextModeEnabled()                                -> lBool
      :isWritable()                                       -> lBool
      :open( nMode )                                      -> lBool
      :openMode()                                         -> nOpenMode
      :peek( cData, nMaxSize )                            -> nQint64
      :( nMaxSize )                                       -> oQByteArray
      :pos()                                              -> nQint64
      :putChar( nC )                                      -> lBool
      :read( cData, nMaxSize )                            -> nQint64
      :( nMaxSize )                                       -> oQByteArray
      :readAll()                                          -> oQByteArray
      :readLine( cData, nMaxSize )                        -> nQint64
      :( nMaxSize )                                       -> oQByteArray
      :reset()                                            -> lBool
      :seek( nPos )                                       -> lBool
      :setTextModeEnabled( lEnabled )                     -> NIL
      :size()                                             -> nQint64
      :ungetChar( nC )                                    -> NIL
      :waitForBytesWritten( nMsecs )                      -> lBool
      :waitForReadyRead( nMsecs )                         -> lBool
      :write( cData, nMaxSize )                           -> nQint64
      :( cData )                                          -> nQint64
      :( oQByteArray )                                    -> nQint64

   $DESCRIPTION$

   $EXAMPLES$

   $TESTS$

   $STATUS$
      R
   $COMPLIANCE$
      Not Clipper compatible
   $PLATFORMS$
      Windows, Linux, Mac OS X, OS/2
   $VERSION$
      4.5 or upper
   $FILES$
      Library: hbqtcore
   $END$
 */
