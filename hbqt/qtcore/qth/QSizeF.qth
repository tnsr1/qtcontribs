/*
 * $Id: QSizeF.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Type        = PlainObject
New         =
</CLASS>

<CODE>
#include <QtCore/QSizeF>


/*
 * QSizeF ()
 * QSizeF ( const QSize & size )
 * QSizeF ( qreal width, qreal height )
 * ~QSizeF ()
 */
HB_FUNC( QT_QSIZEF )
{
   if( hb_pcount() == 2 && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) )
   {
      __HB_RETPTRGC__( new QSizeF( hb_parnd( 1 ), hb_parnd( 2 ) ) );
   }
   else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QSIZEF" ) )
   {
      __HB_RETPTRGC__( new QSizeF( *hbqt_par_QSizeF( 1 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QSizeF() );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
QSizeF boundedTo ( const QSizeF & otherSize ) const
QSizeF expandedTo ( const QSizeF & otherSize ) const
qreal height () const
bool isEmpty () const
bool isNull () const
bool isValid () const
qreal & rheight ()
qreal & rwidth ()
void scale ( qreal width, qreal height, Qt::AspectRatioMode mode )
void scale ( const QSizeF & size, Qt::AspectRatioMode mode )
void setHeight ( qreal height )
void setWidth ( qreal width )
QSize toSize () const
void transpose ()
qreal width () const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
