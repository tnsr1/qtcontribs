   /*
 * $Id: QMetaObject.qth 414 2015-07-30 23:52:01Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Inherit     =
Type        =
New         =
Constructor = No
</CLASS>

<SUBCLASS>
</SUBCLASS>

<DOC>
</DOC>

<CODE>
#include <QtCore/QMetaObject>
#include <QtCore/QMetaClassInfo>


static QVariant __hbqtHbArgument( int param )
{
   QVariant arg;

   if( HB_ISCHAR( param ) )
   {
      void * pText01 = NULL;
      arg = QVariant( hb_parstr_utf8( param, &pText01, NULL ) );
      hb_strfree( pText01 );
   }
   else if( HB_ISLOG( param ) )
   {
      arg = QVariant( hb_parl( param ) );
   }
   else if( HB_ISNUM( param ) )
   {
      arg = QVariant( hb_parnd( param ) );
   }
   return arg;
}


/*
 * QMetaObject ()
 *
 */
HB_FUNC( QT_QMETAOBJECT )
{
   HB_FUNC_EXEC( HB_QMETAOBJECT );
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
QMetaClassInfo classInfo ( int index ) const
int classInfoCount () const
int classInfoOffset () const
const char * className () const
QMetaMethod constructor ( int index ) const
int constructorCount () const
QMetaEnum enumerator ( int index ) const
int enumeratorCount () const
int enumeratorOffset () const
int indexOfClassInfo ( const char * name ) const
int indexOfConstructor ( const char * constructor ) const
int indexOfEnumerator ( const char * name ) const
int indexOfMethod ( const char * method ) const
int indexOfProperty ( const char * name ) const
int indexOfSignal ( const char * signal ) const
int indexOfSlot ( const char * slot ) const
QMetaMethod method ( int index ) const
int methodCount () const
int methodOffset () const
//QObject * newInstance ( QGenericArgument val0 = QGenericArgument( 0 ), QGenericArgument val1 = QGenericArgument(), QGenericArgument val2 = QGenericArgument(), QGenericArgument val3 = QGenericArgument(), QGenericArgument val4 = QGenericArgument(), QGenericArgument val5 = QGenericArgument(), QGenericArgument val6 = QGenericArgument(), QGenericArgument val7 = QGenericArgument(), QGenericArgument val8 = QGenericArgument(), QGenericArgument val9 = QGenericArgument() ) const
QMetaProperty property ( int index ) const
int propertyCount () const
int propertyOffset () const
const QMetaObject * superClass () const
QMetaProperty userProperty () const

bool checkConnectArgs ( const char * signal, const char * method )
void connectSlotsByName ( QObject * object )
//bool invokeMethod ( QObject * obj, const char * member, Qt::ConnectionType type, QGenericReturnArgument ret, QGenericArgument val0 = QGenericArgument( 0 ), QGenericArgument val1 = QGenericArgument(), QGenericArgument val2 = QGenericArgument(), QGenericArgument val3 = QGenericArgument(), QGenericArgument val4 = QGenericArgument(), QGenericArgument val5 = QGenericArgument(), QGenericArgument val6 = QGenericArgument(), QGenericArgument val7 = QGenericArgument(), QGenericArgument val8 = QGenericArgument(), QGenericArgument val9 = QGenericArgument() )
//bool invokeMethod ( QObject * obj, const char * member, Qt::ConnectionType type, QGenericArgument val0 = QGenericArgument( 0 ), QGenericArgument val1 = QGenericArgument(), QGenericArgument val2 = QGenericArgument(), QGenericArgument val3 = QGenericArgument(), QGenericArgument val4 = QGenericArgument(), QGenericArgument val5 = QGenericArgument(), QGenericArgument val6 = QGenericArgument(), QGenericArgument val7 = QGenericArgument(), QGenericArgument val8 = QGenericArgument(), QGenericArgument val9 = QGenericArgument() )
//bool invokeMethod ( QObject * obj, const char * member, QGenericReturnArgument ret, QGenericArgument val0 = QGenericArgument( 0 ), QGenericArgument val1 = QGenericArgument(), QGenericArgument val2 = QGenericArgument(), QGenericArgument val3 = QGenericArgument(), QGenericArgument val4 = QGenericArgument(), QGenericArgument val5 = QGenericArgument(), QGenericArgument val6 = QGenericArgument(), QGenericArgument val7 = QGenericArgument(), QGenericArgument val8 = QGenericArgument(), QGenericArgument val9 = QGenericArgument() )
QVariant invokeMethod ( QObject * obj, const char * member, QGenericArgument val0 = QGenericArgument( 0 ), QGenericArgument val1 = QGenericArgument(), QGenericArgument val2 = QGenericArgument(), QGenericArgument val3 = QGenericArgument(), QGenericArgument val4 = QGenericArgument(), QGenericArgument val5 = QGenericArgument(), QGenericArgument val6 = QGenericArgument(), QGenericArgument val7 = QGenericArgument(), QGenericArgument val8 = QGenericArgument(), QGenericArgument val9 = QGenericArgument() ){
   QVariant returned;

   if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QOBJECT" ) && HB_ISCHAR( 2 ) )
   {
      QMetaObject::invokeMethod( hbqt_par_QObject( 1 ), ( const char * ) hb_parc( 2 ), Q_RETURN_ARG( QVariant, returned ) );
   }
   else if( hb_pcount() > 2 && hbqt_par_isDerivedFrom( 1, "QOBJECT" ) && HB_ISCHAR( 2 ) )
   {
      if( hb_pcount() == 3 )
      {
         QVariant arg0( __hbqtHbArgument( 3 ) );
         QMetaObject::invokeMethod( hbqt_par_QObject( 1 ), ( const char * ) hb_parc( 2 ), Q_RETURN_ARG( QVariant, returned ), Q_ARG( QVariant, arg0 ) );
      }
      else if( hb_pcount() == 4 )
      {
         QVariant arg0( __hbqtHbArgument( 3 ) );
         QVariant arg1( __hbqtHbArgument( 4 ) );
         QMetaObject::invokeMethod( hbqt_par_QObject( 1 ), ( const char * ) hb_parc( 2 ), Q_RETURN_ARG( QVariant, returned ),
                                       Q_ARG( QVariant, arg0 ),
                                       Q_ARG( QVariant, arg1 )
                                   );
      }
      else if( hb_pcount() == 5 )
      {
         QVariant arg0( __hbqtHbArgument( 3 ) );
         QVariant arg1( __hbqtHbArgument( 4 ) );
         QVariant arg2( __hbqtHbArgument( 5 ) );
         QMetaObject::invokeMethod( hbqt_par_QObject( 1 ), ( const char * ) hb_parc( 2 ), Q_RETURN_ARG( QVariant, returned ),
                                       Q_ARG( QVariant, arg0 ),
                                       Q_ARG( QVariant, arg1 ),
                                       Q_ARG( QVariant, arg2 )
                                   );
      }
      else if( hb_pcount() == 6 )
      {
         QVariant arg0( __hbqtHbArgument( 3 ) );
         QVariant arg1( __hbqtHbArgument( 4 ) );
         QVariant arg2( __hbqtHbArgument( 5 ) );
         QVariant arg3( __hbqtHbArgument( 6 ) );
         QMetaObject::invokeMethod( hbqt_par_QObject( 1 ), ( const char * ) hb_parc( 2 ), Q_RETURN_ARG( QVariant, returned ),
                                       Q_ARG( QVariant, arg0 ),
                                       Q_ARG( QVariant, arg1 ),
                                       Q_ARG( QVariant, arg2 ),
                                       Q_ARG( QVariant, arg3 )
                                   );
      }
      else if( hb_pcount() == 7 )
      {
         QVariant arg0( __hbqtHbArgument( 3 ) );
         QVariant arg1( __hbqtHbArgument( 4 ) );
         QVariant arg2( __hbqtHbArgument( 5 ) );
         QVariant arg3( __hbqtHbArgument( 6 ) );
         QVariant arg4( __hbqtHbArgument( 7 ) );
         QMetaObject::invokeMethod( hbqt_par_QObject( 1 ), ( const char * ) hb_parc( 2 ), Q_RETURN_ARG( QVariant, returned ),
                                       Q_ARG( QVariant, arg0 ),
                                       Q_ARG( QVariant, arg1 ),
                                       Q_ARG( QVariant, arg2 ),
                                       Q_ARG( QVariant, arg3 ),
                                       Q_ARG( QVariant, arg4 )
                                   );
      }
      else if( hb_pcount() == 8 )
      {
         QVariant arg0( __hbqtHbArgument( 3 ) );
         QVariant arg1( __hbqtHbArgument( 4 ) );
         QVariant arg2( __hbqtHbArgument( 5 ) );
         QVariant arg3( __hbqtHbArgument( 6 ) );
         QVariant arg4( __hbqtHbArgument( 7 ) );
         QVariant arg5( __hbqtHbArgument( 8 ) );
         QMetaObject::invokeMethod( hbqt_par_QObject( 1 ), ( const char * ) hb_parc( 2 ), Q_RETURN_ARG( QVariant, returned ),
                                       Q_ARG( QVariant, arg0 ),
                                       Q_ARG( QVariant, arg1 ),
                                       Q_ARG( QVariant, arg2 ),
                                       Q_ARG( QVariant, arg3 ),
                                       Q_ARG( QVariant, arg4 ),
                                       Q_ARG( QVariant, arg5 )
                                   );
      }
      else if( hb_pcount() == 9 )
      {
         QVariant arg0( __hbqtHbArgument( 3 ) );
         QVariant arg1( __hbqtHbArgument( 4 ) );
         QVariant arg2( __hbqtHbArgument( 5 ) );
         QVariant arg3( __hbqtHbArgument( 6 ) );
         QVariant arg4( __hbqtHbArgument( 7 ) );
         QVariant arg5( __hbqtHbArgument( 8 ) );
         QVariant arg6( __hbqtHbArgument( 9 ) );
         QMetaObject::invokeMethod( hbqt_par_QObject( 1 ), ( const char * ) hb_parc( 2 ), Q_RETURN_ARG( QVariant, returned ),
                                       Q_ARG( QVariant, arg0 ),
                                       Q_ARG( QVariant, arg1 ),
                                       Q_ARG( QVariant, arg2 ),
                                       Q_ARG( QVariant, arg3 ),
                                       Q_ARG( QVariant, arg4 ),
                                       Q_ARG( QVariant, arg5 ),
                                       Q_ARG( QVariant, arg6 )
                                   );
      }
      else if( hb_pcount() == 10 )
      {
         QVariant arg0( __hbqtHbArgument( 3 ) );
         QVariant arg1( __hbqtHbArgument( 4 ) );
         QVariant arg2( __hbqtHbArgument( 5 ) );
         QVariant arg3( __hbqtHbArgument( 6 ) );
         QVariant arg4( __hbqtHbArgument( 7 ) );
         QVariant arg5( __hbqtHbArgument( 8 ) );
         QVariant arg6( __hbqtHbArgument( 9 ) );
         QVariant arg7( __hbqtHbArgument( 10 ) );
         QMetaObject::invokeMethod( hbqt_par_QObject( 1 ), ( const char * ) hb_parc( 2 ), Q_RETURN_ARG( QVariant, returned ),
                                       Q_ARG( QVariant, arg0 ),
                                       Q_ARG( QVariant, arg1 ),
                                       Q_ARG( QVariant, arg2 ),
                                       Q_ARG( QVariant, arg3 ),
                                       Q_ARG( QVariant, arg4 ),
                                       Q_ARG( QVariant, arg5 ),
                                       Q_ARG( QVariant, arg6 ),
                                       Q_ARG( QVariant, arg7 )
                                   );
      }
      else if( hb_pcount() == 11 )
      {
         QVariant arg0( __hbqtHbArgument( 3 ) );
         QVariant arg1( __hbqtHbArgument( 4 ) );
         QVariant arg2( __hbqtHbArgument( 5 ) );
         QVariant arg3( __hbqtHbArgument( 6 ) );
         QVariant arg4( __hbqtHbArgument( 7 ) );
         QVariant arg5( __hbqtHbArgument( 8 ) );
         QVariant arg6( __hbqtHbArgument( 9 ) );
         QVariant arg7( __hbqtHbArgument( 10 ) );
         QVariant arg8( __hbqtHbArgument( 11 ) );
         QMetaObject::invokeMethod( hbqt_par_QObject( 1 ), ( const char * ) hb_parc( 2 ), Q_RETURN_ARG( QVariant, returned ),
                                       Q_ARG( QVariant, arg0 ),
                                       Q_ARG( QVariant, arg1 ),
                                       Q_ARG( QVariant, arg2 ),
                                       Q_ARG( QVariant, arg3 ),
                                       Q_ARG( QVariant, arg4 ),
                                       Q_ARG( QVariant, arg5 ),
                                       Q_ARG( QVariant, arg6 ),
                                       Q_ARG( QVariant, arg7 ),
                                       Q_ARG( QVariant, arg8 )
                                   );
      }
      else if( hb_pcount() >= 12 )
      {
         QVariant arg0( __hbqtHbArgument( 3 ) );
         QVariant arg1( __hbqtHbArgument( 4 ) );
         QVariant arg2( __hbqtHbArgument( 5 ) );
         QVariant arg3( __hbqtHbArgument( 6 ) );
         QVariant arg4( __hbqtHbArgument( 7 ) );
         QVariant arg5( __hbqtHbArgument( 8 ) );
         QVariant arg6( __hbqtHbArgument( 9 ) );
         QVariant arg7( __hbqtHbArgument( 10 ) );
         QVariant arg8( __hbqtHbArgument( 11 ) );
         QVariant arg9( __hbqtHbArgument( 12 ) );
         QMetaObject::invokeMethod( hbqt_par_QObject( 1 ), ( const char * ) hb_parc( 2 ), Q_RETURN_ARG( QVariant, returned ),
                                       Q_ARG( QVariant, arg0 ),
                                       Q_ARG( QVariant, arg1 ),
                                       Q_ARG( QVariant, arg2 ),
                                       Q_ARG( QVariant, arg3 ),
                                       Q_ARG( QVariant, arg4 ),
                                       Q_ARG( QVariant, arg5 ),
                                       Q_ARG( QVariant, arg6 ),
                                       Q_ARG( QVariant, arg7 ),
                                       Q_ARG( QVariant, arg8 ),
                                       Q_ARG( QVariant, arg9 )
                                   );
      }
   }

   hb_itemReturnRelease( hbqt_bindGetHbObject( NULL, new QVariant( returned ), "HB_QVARIANT", hbqt_del_QVariant, HBQT_BIT_NONE | HBQT_BIT_OWNER ) );
}
QByteArray normalizedSignature ( const char * method )
QByteArray normalizedType ( const char * type )
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
