/*
 * $Id: QLibraryInfo.qth 157 2013-02-01 21:02:58Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Inherit     =
Type        = 
New         = 
Constructor = 
</CLASS>

<SUBCLASS>
</SUBCLASS>

<DOC>
</DOC>

<CODE>
#include <QtCore/QLibraryInfo>
#include <QtCore/QDate>


/*
 * 
 * 
 */
HB_FUNC( QT_QLIBRARYINFO )
{
   HB_FUNC_EXEC( HB_QLIBRARYINFO );
}
</CODE>

<ENUMS>
enum LibraryLocation { PrefixPath, DocumentationPath, HeadersPath, LibrariesPath, BinariesPath, PluginsPath, ImportsPath, DataPath, TranslationsPath, SettingsPath, ExamplesPath, DemosPath }
</ENUMS>

<PROTOS>
QDate buildDate (){
   #if QT_VERSION >= 0x040600
   hb_itemReturnRelease( hbqt_bindGetHbObject( NULL, new QDate( QLibraryInfo::buildDate() ), "HB_QDATE", hbqt_del_QDate, HBQT_BIT_OWNER ) );
   #endif
}
QString buildKey (){
   #if QT_VERSION <= 0x050000
   hb_retstr_utf8( QLibraryInfo::buildKey().toUtf8().data() );
   #endif
}
QString licensedProducts (){
   hb_retstr_utf8( QLibraryInfo::licensedProducts().toUtf8().data() );
}
QString licensee (){
   hb_retstr_utf8( QLibraryInfo::licensee().toUtf8().data() );
}
QString location ( LibraryLocation loc ){
   hb_retstr_utf8( QLibraryInfo::location( ( QLibraryInfo::LibraryLocation ) hb_parni( 1 ) ).toUtf8().data() );
}
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
