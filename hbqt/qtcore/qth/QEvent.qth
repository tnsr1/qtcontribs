/*
 * $Id: QEvent.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Type        = Core
New         = nType
</CLASS>

<CODE>
#include <QtCore/QEvent>


/*
 * QEvent ( Type type )
 * ~QEvent ()
 */
HB_FUNC( QT_QEVENT )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QEVENT" ) )
   {
      __HB_RETPTRGC__( new QEvent( *hbqt_par_QEvent( 1 ) ) );
   }
   else if( hb_pcount() == 1 && HB_ISNUM( 1 ) )
   {
      __HB_RETPTRGC__( new QEvent( ( QEvent::Type ) hb_parni( 1 ) ) );
   }
   else
   {
      hb_errRT_BASE( EG_ARG, 9999, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
   }      
}
</CODE>

<ENUMS>
enum Type { None, AccessibilityDescription, AccessibilityHelp, AccessibilityPrepare, ..., MaxUser }
</ENUMS>

<PROTOS>
void accept ()
void ignore ()
bool isAccepted () const
void setAccepted ( bool accepted )
bool spontaneous () const
Type type () const

int registerEventType ( int hint = -1 )
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
