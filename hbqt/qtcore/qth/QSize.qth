/*
 * $Id: QSize.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Type        = PlainObject
New         = 
</CLASS>

<CODE>
#include <QtCore/QSize>


/*
 * QSize ()
 * QSize ( const QSize & size )
 * QSize ( int width, int height )
 * ~QSize ()
 */
HB_FUNC( QT_QSIZE )
{
   if( hb_pcount() == 2 && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) )
   {
      __HB_RETPTRGC__( new QSize( hb_parni( 1 ), hb_parni( 2 ) ) );
   }
   else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QSIZE" ) )
   {
      __HB_RETPTRGC__( new QSize( *hbqt_par_QSize( 1 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QSize() );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
int height () const
bool isEmpty () const
bool isNull () const
bool isValid () const
int & rheight ()
int & rwidth ()
void scale ( int width, int height, Qt::AspectRatioMode mode )
void scale ( const QSize & size, Qt::AspectRatioMode mode )
void setHeight ( int height )
void setWidth ( int width )
void transpose ()
int width () const
QSize boundedTo ( const QSize & otherSize ) const
QSize expandedTo ( const QSize & otherSize ) const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
