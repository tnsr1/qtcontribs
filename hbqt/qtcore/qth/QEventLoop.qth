/*
 * $Id: QEventLoop.qth 434 2016-11-09 02:32:49Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QObject
Type        = Core
New         = pObject
</CLASS>

<CODE>
#include <QtCore/QEventLoop>
#include <QtCore/QEvent>

/*
 * QEventLoop ( QObject * parent = 0 )
 * ~QEventLoop ()
 */
HB_FUNC( QT_QEVENTLOOP )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QOBJECT" ) )
   {
      __HB_RETPTRGC__( new QEventLoop( hbqt_par_QObject( 1 ) ) );
   }
   else
   {      
      __HB_RETPTRGC__( new QEventLoop( Q_NULLPTR ) );
   }   
}
</CODE>

<ENUMS>
enum ProcessEventsFlag { AllEvents, ExcludeUserInputEvents, ExcludeSocketNotifiers, WaitForMoreEvents, DeferredDeletion }
flags ProcessEventsFlags
</ENUMS>

<PROTOS>
int exec ( ProcessEventsFlags flags = AllEvents )
void exit ( int returnCode = 0 )
bool isRunning () const
bool processEvents ( ProcessEventsFlags flags = AllEvents )
void processEvents ( ProcessEventsFlags flags, int maxTime )
void wakeUp ()
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
