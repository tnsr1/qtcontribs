/*
 * $Id: QAbstractEventDispatcher.qth 457 2017-10-12 03:34:02Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QObject
Type        = Core
New         = 
</CLASS>

<CODE>
#include <QtCore/QAbstractEventDispatcher>


/*
 * QAbstractEventDispatcher ( QObject * parent = 0 )
 * ~QAbstractEventDispatcher ()
 */
HB_FUNC( QT_QABSTRACTEVENTDISPATCHER )
{
   HB_FUNC_EXEC( HB_QABSTRACTEVENTDISPATCHER );
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
//bool filterEvent ( void * message )
virtual void flush () = 0
virtual bool hasPendingEvents () = 0
virtual void interrupt () = 0
virtual bool processEvents ( QEventLoop::ProcessEventsFlags flags ) = 0
virtual void registerSocketNotifier ( QSocketNotifier * notifier ) = 0
//int registerTimer ( int interval, QObject * object )
//virtual void registerTimer ( int timerId, int interval, QObject * object ) = 0
//virtual QList<TimerInfo> registeredTimers ( QObject * object ) const = 0
EventFilter setEventFilter ( EventFilter filter )
virtual void unregisterSocketNotifier ( QSocketNotifier * notifier ) = 0
virtual bool unregisterTimer ( int timerId ) = 0
virtual bool unregisterTimers ( QObject * object ) = 0
virtual void wakeUp () = 0

QAbstractEventDispatcher * instance ( QThread * thread = 0 )
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
void aboutToBlock ()
void awake ()
</SIGNALS>

<VARIABLES>
</VARIABLES>
