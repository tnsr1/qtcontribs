/*
 * $Id: QFileSystemWatcher.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QObject
Type        = Core
New         =
Destructor  =
</CLASS>

<CODE>
#include <QtCore/QFileSystemWatcher>

/* QFileSystemWatcher ( QObject * parent = 0 )
 * QFileSystemWatcher ( const QStringList & paths, QObject * parent = 0 )
 * ~QFileSystemWatcher ()
 */

HB_FUNC( QT_QFILESYSTEMWATCHER )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QSTRINGLIST" ) )
   {
      __HB_RETPTRGC__( new QFileSystemWatcher( *hbqt_par_QStringList( 1 ) ) );
   }
   else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QOBJECT" ) )
   {
      __HB_RETPTRGC__( new QFileSystemWatcher( hbqt_par_QObject( 1 ) ) );
   }
   else if( hb_pcount() == 2 && hbqt_par_isDerivedFrom( 1, "QSTRINGLIST" ) && hbqt_par_isDerivedFrom( 2, "QOBJECT" ) )
   {
      __HB_RETPTRGC__( new QFileSystemWatcher( *hbqt_par_QStringList( 1 ), hbqt_par_QObject( 2 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QFileSystemWatcher() );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
void addPath ( const QString & path )
void addPaths ( const QStringList & paths )
QStringList directories () const
QStringList files () const
void removePath ( const QString & path )
void removePaths ( const QStringList & paths )
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
void directoryChanged ( const QString & path )
void fileChanged ( const QString & path )
</SIGNALS>
