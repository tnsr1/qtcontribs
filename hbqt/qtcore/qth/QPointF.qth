/*
 * $Id: QPointF.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Type        = PlainObject
New         = 
</CLASS>

<CODE>
#include <QtCore/QPointF>


/*
 * QPointF ()
 * QPointF ( const QPoint & point )
 * QPointF ( qreal x, qreal y )
 * ~QPointF ()
 */
HB_FUNC( QT_QPOINTF )
{
   if( hb_pcount() == 2 && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) )
   {
      __HB_RETPTRGC__( new QPointF( ( qreal ) hb_parnd( 1 ), ( qreal ) hb_parnd( 2 ) ) );
   }
   else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QPOINT" ) )
   {
      __HB_RETPTRGC__( new QPointF( *hbqt_par_QPoint( 1 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QPointF() );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
bool isNull () const
qreal & rx ()
qreal & ry ()
void setX ( qreal x )
void setY ( qreal y )
QPoint toPoint () const
qreal x () const
qreal y () const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
