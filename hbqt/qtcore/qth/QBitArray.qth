/*
 * $Id: QBitArray.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject     = no
Inherit     = 
Type        = Core
New         = 
</CLASS>

<CODE>
#include <QtCore/QBitArray>


/* QBitArray ()
 * QBitArray ( int size, bool value = false )
 * QBitArray ( const QBitArray & other )
 */
HB_FUNC( QT_QBITARRAY )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QBITARRAY" ) )
   {
      __HB_RETPTRGC__( new QBitArray( *hbqt_par_QBitArray( 1 ) ) );
   }
   else if( hb_pcount() >= 1 && HB_ISNUM( 1 ) )
   {
      __HB_RETPTRGC__( new QBitArray( hb_parni( 1 ), HB_ISLOG( 2 ) ? hb_parl( 2 ) : false ) );   
   }
   else
   {
      __HB_RETPTRGC__( new QBitArray() );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
bool at ( int i ) const
void clear ()
void clearBit ( int i )
int count () const
int count ( bool on ) const
bool fill ( bool value, int size = -1 )
void fill ( bool value, int begin, int end )
bool isEmpty () const
bool isNull () const
void resize ( int size )
void setBit ( int i )
void setBit ( int i, bool value )
int size () const
bool testBit ( int i ) const
bool toggleBit ( int i )
void truncate ( int pos )
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
