/*
 * $Id: QSqlDatabase.qth 319 2014-07-25 01:29:55Z bedipritpal $
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009-2011 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>
QObject  = no
Inherit  =
Type     =
New      =
</CLASS>

<CODE>
#include <QtSql/QSqlDatabase>
#include <QtSql/QSqlQuery>
#include <QtSql/QSqlError>
#include <QtSql/QSqlIndex>
#include <QtSql/QSqlRecord>

/*
 * QSqlDatabase ()
 * QSqlDatabase ( const QSqlDatabase & other )
 * ~QSqlDatabase ()
 */
HB_FUNC( QT_QSQLDATABASE )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QSqlDatabase" ) )
   {
      __HB_RETPTRGC__( new QSqlDatabase( * hbqt_par_QSqlDatabase( 1 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QSqlDatabase() );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
void close ()
bool commit ()
QString connectOptions () const
QString connectionName () const
QString databaseName () const
QSqlDriver * driver () const
QString driverName () const
QSqlQuery exec ( const QString & query = QString() ) const
QString hostName () const
bool isOpen () const
bool isOpenError () const
bool isValid () const
QSqlError lastError () const
bool open ()
bool open ( const QString & user, const QString & password )
QString password () const
int port () const
QSqlIndex primaryIndex ( const QString & tablename ) const
QSqlRecord record ( const QString & tablename ) const
bool rollback ()
void setConnectOptions ( const QString & options = QString() )
void setDatabaseName ( const QString & name )
void setHostName ( const QString & host )
void setPassword ( const QString & password )
void setPort ( int port )
void setUserName ( const QString & name )
QStringList tables ( QSql::TableType type = QSql::Tables ) const
bool transaction ()
QString userName () const

QSqlDatabase addDatabase ( const QString & type, const QString & connectionName = QLatin1String( defaultConnection ) )
QSqlDatabase addDatabase ( QSqlDriver * driver, const QString & connectionName = QLatin1String( defaultConnection ) )
QSqlDatabase cloneDatabase ( const QSqlDatabase & other, const QString & connectionName )
QStringList connectionNames ()
bool contains ( const QString & connectionName = QLatin1String( defaultConnection ) )
QSqlDatabase database ( const QString & connectionName = QLatin1String( defaultConnection ), bool open = true )
QStringList drivers ()
bool isDriverAvailable ( const QString & name )
void registerSqlDriver ( const QString & name, QSqlDriverCreatorBase * creator )
void removeDatabase ( const QString & connectionName )
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>

<VARIABLES>
</VARIABLES>
