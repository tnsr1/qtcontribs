/*
 * $Id: QSqlDriver.qth 319 2014-07-25 01:29:55Z bedipritpal $
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009-2011 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>
QObject  = Yes
Inherit  = QObject
Type     =
New      =
</CLASS>

<CODE>
#include <QtSql/QSqlDriver>
#include <QtSql/QSqlError>
#include <QtSql/QSqlIndex>
#include <QtCore/QObject>
#include <QtCore/QVariant>


/*
 * QSqlDriver ( QObject * parent = 0 )
 * ~QSqlDriver ()
 */
HB_FUNC( QT_QSQLDRIVER )
{
   HB_FUNC_EXEC( HB_QSQLDRIVER );
}
</CODE>

<ENUMS>
enum DriverFeature { Transactions, QuerySize, BLOB, Unicode, ..., MultipleResultSets }
enum IdentifierType { FieldName, TableName }
enum StatementType { WhereStatement, SelectStatement, UpdateStatement, InsertStatement, DeleteStatement }
</ENUMS>

<PROTOS>
virtual bool beginTransaction ()
virtual void close () = 0
virtual bool commitTransaction ()
virtual QSqlResult * createResult () const = 0
virtual QString escapeIdentifier ( const QString & identifier, IdentifierType type ) const
virtual QString formatValue ( const QSqlField & field, bool trimStrings = false ) const
virtual QVariant handle () const
virtual bool hasFeature ( DriverFeature feature ) const = 0
virtual bool isOpen () const
bool isOpenError () const
QSqlError lastError () const
virtual bool open ( const QString & db, const QString & user = QString(), const QString & password = QString(), const QString & host = QString(), int port = -1, const QString & options = QString() ) = 0
virtual QSqlIndex primaryIndex ( const QString & tableName ) const
virtual QSqlRecord record ( const QString & tableName ) const
virtual bool rollbackTransaction ()
virtual QString sqlStatement ( StatementType type, const QString & tableName, const QSqlRecord & rec, bool preparedStatement ) const
bool subscribeToNotification ( const QString & name )
QStringList subscribedToNotifications () const
virtual QStringList tables ( QSql::TableType tableType ) const
bool unsubscribeFromNotification ( const QString & name )
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
void notification ( const QString & name )
</SIGNALS>

<VARIABLES>
</VARIABLES>
