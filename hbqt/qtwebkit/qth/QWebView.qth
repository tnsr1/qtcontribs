/*
 * $Id: QWebView.qth 250 2013-06-29 00:41:35Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject  = Yes
Inherit  = QWidget
New      = pParent
folder   = qtwebkit
</CLASS>

<CODE>
#include "hbqtgui.h"

#if QT_VERSION >= 0x050000
#   include <QtWebKitWidgets/QWebView>
#else
#   include <QtWebKit/QWebView>
#endif

/*
 * QWebView ( QWidget * parent = 0 )
 * virtual ~QWebView ()
 */
HB_FUNC( QT_QWEBVIEW )
{
   if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QWIDGET" ) )
   {
      __HB_RETPTRGC__( new QWebView( hbqt_par_QWidget( 1 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QWebView() );
   }
}
</CODE>

<PROTOS>
bool findText ( const QString & subString, QWebPage::FindFlags options = 0 )
QWebHistory * history () const
QIcon icon () const
bool isModified () const
void load ( const QUrl & url )
void load ( const QNetworkRequest & request, QNetworkAccessManager::Operation operation = QNetworkAccessManager::GetOperation, const QByteArray & body = QByteArray() )
QWebPage * page () const
QAction * pageAction ( QWebPage::WebAction action ) const
QString selectedText () const
void setContent ( const QByteArray & data, const QString & mimeType = QString(), const QUrl & baseUrl = QUrl() )
void setHtml ( const QString & html, const QUrl & baseUrl = QUrl() )
void setPage ( QWebPage * page )
void setTextSizeMultiplier ( qreal factor )
void setUrl ( const QUrl & url )
void setZoomFactor ( qreal factor )
QWebSettings * settings () const
qreal textSizeMultiplier () const
QString title () const
void triggerPageAction ( QWebPage::WebAction action, bool checked = false )
QUrl url () const
qreal zoomFactor () const
</PROTOS>

<SLOTS>
void back ()
void forward ()
void print ( QPrinter * printer ) const
void reload ()
void stop ()
</SLOTS>

<SIGNALS>
void iconChanged ()
void linkClicked ( const QUrl & url )
void loadFinished ( bool ok )
void loadProgress ( int progress )
void loadStarted ()
void selectionChanged ()
void statusBarMessage ( const QString & text )
void titleChanged ( const QString & title )
void urlChanged ( const QUrl & url )
</SIGNALS>
