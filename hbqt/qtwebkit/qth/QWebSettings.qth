/*
 * $Id: QWebSettings.qth 34 2012-10-13 21:57:41Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject    = no
Inherits   =
Type       = Core
New        =
Destructor = no
Constructor = no
folder     = qtwebkit
</CLASS>

<CODE>
#include "hbqtgui.h"

#include <QtWebKit/QWebSettings>
#include <QtCore/QUrl>


/*
 * QWebSettings () 
 */
HB_FUNC( QT_QWEBSETTINGS )
{
   //__HB_RETPTRGC__( new QWebSettings() );
}
</CODE>

<ENUMS>
enum FontFamily { StandardFont, FixedFont, SerifFont, SansSerifFont, CursiveFont, FantasyFont }
enum FontSize { MinimumFontSize, MinimumLogicalFontSize, DefaultFontSize, DefaultFixedFontSize }
enum WebAttribute { AutoLoadImages, JavascriptEnabled, JavaEnabled, PluginsEnabled, ..., LocalStorageDatabaseEnabled }
enum WebGraphic { MissingImageGraphic, MissingPluginGraphic, DefaultFrameIconGraphic, TextAreaSizeGripCornerGraphic }
</ENUMS>

<PROTOS>
QString fontFamily ( FontFamily which ) const
int fontSize ( FontSize type ) const
void resetAttribute ( WebAttribute attribute )
void resetFontFamily ( FontFamily which )
void resetFontSize ( FontSize type )
void setAttribute ( WebAttribute attribute, bool on )
void setFontFamily ( FontFamily which, const QString & family )
void setFontSize ( FontSize type, int size )
void setUserStyleSheetUrl ( const QUrl & location )
bool testAttribute ( WebAttribute attribute ) const
QUrl userStyleSheetUrl () const

void clearIconDatabase ()
QWebSettings * globalSettings ()
QString iconDatabasePath ()
QIcon iconForUrl ( const QUrl & url )
int maximumPagesInCache ()
qint64 offlineStorageDefaultQuota ()
QString offlineStoragePath ()
void setIconDatabasePath ( const QString & path )
void setMaximumPagesInCache ( int pages )
void setObjectCacheCapacities ( int cacheMinDeadCapacity, int cacheMaxDead, int totalCapacity )
void setOfflineStorageDefaultQuota ( qint64 maximumSize )
void setOfflineStoragePath ( const QString & path )
void setWebGraphic ( WebGraphic type, const QPixmap & graphic )
QPixmap webGraphic ( WebGraphic type )
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
