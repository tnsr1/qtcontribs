/*
 * $Id: QsciLexer.qth 400 2015-02-02 08:27:21Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject    =
Inherits   =
</CLASS>

<CODE>
#include <qsci/qscilexer.h>


/*
 * QsciLexer (QObject *parent=0)
 * virtual ~QsciLexer ()
 *
 */
HB_FUNC( QT_QSCILEXER )
{

}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
virtual const char * language () const =0
virtual const char * lexer () const
virtual int lexerId () const
QsciAbstractAPIs * apis () const
virtual const char * autoCompletionFillups () const
virtual QStringList autoCompletionWordSeparators () const
int autoIndentStyle ()
virtual const char * blockEnd (int *style=0) const
virtual int blockLookback () const
virtual const char * blockStart (int *style=0) const
virtual const char * blockStartKeyword (int *style=0) const
virtual int braceStyle () const
virtual bool caseSensitive () const
virtual QColor color (int style) const
virtual bool eolFill (int style) const
virtual QFont font (int style) const
virtual int indentationGuideView () const
virtual const char * keywords (int set) const
virtual int defaultStyle () const
virtual QString description (int style) const =0
virtual QColor paper (int style) const
QColor defaultColor () const
virtual QColor defaultColor (int style) const
virtual bool defaultEolFill (int style) const
QFont defaultFont () const
virtual QFont defaultFont (int style) const
QColor defaultPaper () const
virtual QColor defaultPaper (int style) const
QsciScintilla * editor () const
virtual void setEditor (QsciScintilla *editor)
bool readSettings (QSettings &qs, const char *prefix="/Scintilla")
virtual void refreshProperties ()
virtual int styleBitsNeeded () const
virtual const char * wordCharacters () const
bool writeSettings (QSettings &qs, const char *prefix="/Scintilla") const

void setAPIs (QsciAbstractAPIs *apis)
void setDefaultColor (const QColor &c)
void setDefaultFont (const QFont &f)
void setDefaultPaper (const QColor &c)

</PROTOS>

<SLOTS>
virtual void setAutoIndentStyle (int autoindentstyle)
virtual void setColor (const QColor &c, int style=-1)
virtual void setEolFill (bool eoffill, int style=-1)
virtual void setFont (const QFont &f, int style=-1)
virtual void setPaper (const QColor &c, int style=-1)
</SLOTS>

<SIGNALS>
void colorChanged (const QColor &c, int style)
void eolFillChanged (bool eolfilled, int style)
void fontChanged (const QFont &f, int style)
void paperChanged (const QColor &c, int style)
void propertyChanged (const char *prop, const char *val)
</SIGNALS>
