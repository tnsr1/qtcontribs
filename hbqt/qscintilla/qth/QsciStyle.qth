/*
 * $Id: QsciStyle.qth 401 2015-02-03 00:28:37Z bedipritpal $
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject  =
Inherits =
</CLASS>

<CODE>
#include <qsci/qscistyle.h>
#include <QtCore/QStringList>

/*
 * QsciStyle (int style=-1)
 * QsciStyle (int style, const QString &description, const QColor &color, const QColor &paper, const QFont &font, bool eol_fill=false)
 *
 */
HB_FUNC( QT_QSCISTYLE )
{
   if( HB_ISNUM( 1 ) )
   {
      __HB_RETPTRGC__( new QsciStyle( hb_parni( 1 ) ) );
   }
   else if( hb_pcount() >= 5 )
   {
      void * pText01 = NULL;
      __HB_RETPTRGC__( new QsciStyle( hb_parni( 1 ), hb_parstr_utf8( 2, &pText01, NULL ), *hbqt_par_QColor( 3 ), *hbqt_par_QColor( 4 ), * hbqt_par_QFont( 5 ), HB_ISLOG( 6 ) ? hb_parl( 6 ) : false ) );
      hb_strfree( pText01 );
   }
   else
   {
      __HB_RETPTRGC__( new QsciStyle() );
   }
}
</CODE>

<ENUMS>
enum TextCase { OriginalCase = 0, UpperCase = 1, LowerCase = 2 }
</ENUMS>

<PROTOS>
int style () const
void setDescription (const QString &description)
QString description () const
void setColor (const QColor &color)
QColor color () const
void setPaper (const QColor &paper)
QColor paper () const
void setFont (const QFont &font)
QFont font () const
void setEolFill (bool fill)
bool eolFill () const
void setTextCase (TextCase text_case)
TextCase textCase () const
void setVisible (bool visible)
bool visible () const
void setChangeable (bool changeable)
bool changeable () const
void setHotspot (bool hotspot)
bool hotspot () const
void refresh ()
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
