/*
 * $Id: ChangeLog 480 2020-04-03 16:03:58Z bedipritpal $
 */

/* Read doc/howtosvn.txt and use this format for entry headers:
   YYYY-MM-DD HH:MM UTC[-|+]hhmm Your Full Name (your_email address)
   2010-12-31 13:59 UTC+0100 Foo Bar (foo.bar foobar.org)

   This work is licensed under the Creative Commons Attribution-ShareAlike
   License. To view a copy of this license, visit
   http://creativecommons.org/licenses/by-sa/3.0/ or send a letter to
   Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305,
   USA.  A summary of the license and the full legal text is included
   in file: COPYING.  If you wish to distribute some or all of this work
   under different terms, please contact respective author(s).
   The license applies to all entries newer than 2009-04-28.
*/

2020-04-03 08:53 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r479)
  + Added: qmlparts/resources/qml/PhotoCapture.qml
    ! Miss from previous commit. Reported by Luigi - thanks.

2020-02-28 13:37 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r479)
  * hbqt/qtgui/hbqt_version.ch
    % Updated for r479
    
  * hbqt/hbmk2_qt.hb
    % Updated to include QObject derived classes of QtWebEngine.
    
  + hbqt/qtwebengine
  + hbqt/qtwebengine/doc
  + hbqt/qtwebengine/doc/en
  + hbqt/qtwebengine/hbqt_init.cpp
  + hbqt/qtwebengine/hbqtwebengine.ch
  + hbqt/qtwebengine/hbqtwebengine.hbc
  + hbqt/qtwebengine/hbqtwebengine.hbm
  + hbqt/qtwebengine/hbqtwebengine.hbp
  + hbqt/qtwebengine/hbqtwebengine.hbx
  + hbqt/qtwebengine/hbqtwebengines.hbp
  + hbqt/qtwebengine/qth
  + hbqt/qtwebengine/qth/filelist.hbm
  + hbqt/qtwebengine/qth/QQuickWebEngineProfile.qth
  + hbqt/qtwebengine/qth/QWebEngineCertificateError.qth
  + hbqt/qtwebengine/qth/QWebEngineContextMenuData.qth
  + hbqt/qtwebengine/qth/QWebEngineCookieStore.qth
  + hbqt/qtwebengine/qth/QWebEngineDownloadItem.qth
  + hbqt/qtwebengine/qth/QWebEngineFullScreenRequest.qth
  + hbqt/qtwebengine/qth/QWebEngineHistory.qth
  + hbqt/qtwebengine/qth/QWebEngineHistoryItem.qth
  + hbqt/qtwebengine/qth/QWebEnginePage.qth
  + hbqt/qtwebengine/qth/QWebEngineProfile.qth
  + hbqt/qtwebengine/qth/QWebEngineScript.qth
  + hbqt/qtwebengine/qth/QWebEngineScriptCollection.qth
  + hbqt/qtwebengine/qth/QWebEngineSettings.qth
  + hbqt/qtwebengine/qth/QWebEngineUrlRequestInfo.qth
  + hbqt/qtwebengine/qth/QWebEngineUrlRequestInterceptor.qth
  + hbqt/qtwebengine/qth/QWebEngineUrlRequestJob.qth
  + hbqt/qtwebengine/qth/QWebEngineUrlSchemeHandler.qth
  + hbqt/qtwebengine/qth/QWebEngineView.qth
  + hbqtwidgets/tests/loganalyzer
    + Added: Module QtWebEngine since Qt 5.5 onwards.
      A replacement to QtWebkit module which is now depricated.
      
  ; NOTE: this module is tested to be compilable on Linux 
          Ubuntu 64 bits in shared mode. It is not possible to 
          compile and link it in static mode. You will need 
          Qt 5.8 or higher for this purpose. This lib is not 
          included in qtcoontribs57.hbp. You may need to 
          call it manually staying in harbour/addons as:
             hbmk2 hbqt/qtwebengine/hbqtwebengine.hbp
                 
2020-02-20 20:04 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r478)
  * hbqt/qtcore/hbqt_pointer.cpp
    ! Fixed: cut/update issue. Seems I am ageing.

2020-02-20 19:30 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r477)
  + hbqtqmlparts/photocapture.prg
    + Added. Missed in previous commit.

2020-02-20 19:22 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r476)
  * hbqtwidgets/hbqtwidgets.hbp
    ! Fixed - unwanted additions.

2020-02-20 19:00 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r475)
  * hbdbu/dbu.prg
  * hbide/main.prg
    - Commented out: REQUEST __HBEXTERN__HBQTWIDGETS__
      A bunch of QtQuick/Qml baggage is unnecessary.
    
  * hbqt/hbmk2_qt.hb
    + Added: QStackedWidget as a base widget for .ui forms.
      Until now we had QDialog, QWidget, QMainWindow as base widgets.
      
  * hbqt/hbqt_common.hbc
  * hbqt/qtcore/hbqt_pointer.cpp
  * hbqt/qtcore/hbqtcore.hbc
    + Enhancement: to build Qt 5.5.x version statically.
    
  * hbqt/qtgui/hbqt_errorsys.prg
    % Fixed: to display the error message box always.
      In situations of recursive error it was killing the system.
      
  * hbqt/qtgui/hbqt_hbqgraphicsitem.h
    + Added: bool __hbqGraphicsCanMoveItems();
  * hbqt/qtgui/hbqt_hbqgraphicsitem.cpp
  * hbqt/qtgui/hbqt_hbqgraphicsscene.cpp
    + Implemented to lock the graphics item permanantly.
    
  * hbqt/qtgui/hbqtgui.hbc
    + added: windowsprintersupport static librray for Qt 5.x.x static.
    
  * hbqt/qtgui/qth/QGraphicsScene.qth
    + added: many methods which were not included initially.
    
  * hbqt/qtgui/qth/QPrintPreviewWidget.qth
    + added: missing constructor 
         else if( hb_pcount() == 1 && hbqt_par_isDerivedFrom( 1, "QPRINTER" ) )

  * hbqt/qtqml/hbqt_init.cpp
    + aaded: Qml specific plugins for sttaic builds.
    
  * hbqt/qtqml/hbqtqml.hbc
  * hbqt/qtquick/hbqtquick.hbc
    + Heavy changes for Qt 5.5 and otherwise static builds.
    
  * hbqtqmlparts/hbqtqmlparts.hbp
    + photocapture.prg
  * hbqtqmlparts/hbqtqmlparts.hbx
    % Regenerated.
  * hbqtqmlparts/hbqtqmlparts.qrc
    + added: <file>resources/qml/PhotoCapture.qml</file>
  * hbqtqmlparts/misc.prg
    + added: FUNCTION __hbqtActivatePhotoCapture( bBlock )
  * hbqtqmlparts/qmlbridge.prg
  * hbqtqmlparts/resources/qml/BarcodeReader.qml
    % Cleanup.

  * hbqtwidgets/alert.prg
    % Visual enhancement.
    
  * hbqtwidgets/hbqtbrowse.prg
    % Enhancements to browse printing.
    
  * hbqtwidgets/imageeditor.prg
    % Replaced: :fitInParent() => HbQtLayoutInParent()
    
  * hbqtwidgets/messages.prg
  * hbqtwidgets/messages.ui
    % Changed: <Back> icon.
    
  * hbqtwidgets/misc.prg
    % Minor.
    + Added: FUNCTION HbQtLayInParent( oWidget, oParent )
    
  * hbqtwidgets/previewer.prg
    % Enhanced: PrintPreview widget implementation.
    
  * hbqtwidgets/properties.prg
    + Added: a couple of methods and other enhancements.

  + hbqtwidgets/resources/admin-1.png
  + hbqtwidgets/resources/cart-1.png
  + hbqtwidgets/resources/cart-2.png
  + hbqtwidgets/resources/cart-3.png
  + hbqtwidgets/resources/cart-4.png
  + hbqtwidgets/resources/cart-5.png
  + hbqtwidgets/resources/chat-1.png
  + hbqtwidgets/resources/clean.png
  + hbqtwidgets/resources/credit-card-1.png
  + hbqtwidgets/resources/customer-service.png
  + hbqtwidgets/resources/data-1.png
  + hbqtwidgets/resources/edit.png
  + hbqtwidgets/resources/exit-1.png
  + hbqtwidgets/resources/female.png
  + hbqtwidgets/resources/home.png
  + hbqtwidgets/resources/info-2.png
  + hbqtwidgets/resources/info-3.png
  + hbqtwidgets/resources/info-4.png
  + hbqtwidgets/resources/info-5.png
  + hbqtwidgets/resources/info-6.png
  + hbqtwidgets/resources/info-7.png
  + hbqtwidgets/resources/layers-1.png
  + hbqtwidgets/resources/mail-01.png
  + hbqtwidgets/resources/male.png
  + hbqtwidgets/resources/mover-1.png
  + hbqtwidgets/resources/mover-2.png
  + hbqtwidgets/resources/next-1.png
  + hbqtwidgets/resources/pdf-document.png
  + hbqtwidgets/resources/pdf.png
  + hbqtwidgets/resources/previous-1.png
  + hbqtwidgets/resources/properties-1.png
  + hbqtwidgets/resources/scanner-1.png
  + hbqtwidgets/resources/visuals-1.png
  + hbqtwidgets/resources/visuals-2.png
  + hbqtwidgets/resources/visuals-3.png
  + hbqtwidgets/resources/vzl-arrow-bottom.png
  + hbqtwidgets/resources/vzl-arrow-down.png
  + hbqtwidgets/resources/vzl-arrow-left.png
  + hbqtwidgets/resources/vzl-arrow-leftmost.png
  + hbqtwidgets/resources/vzl-arrow-right.png
  + hbqtwidgets/resources/vzl-arrow-rightmost.png
  + hbqtwidgets/resources/vzl-arrow-top.png
  + hbqtwidgets/resources/vzl-arrow-up.png
  + hbqtwidgets/resources/vzl-csv.png
  + hbqtwidgets/resources/vzl-dataset.png
  + hbqtwidgets/resources/vzl-del-state.png
  + hbqtwidgets/resources/vzl-edit.png
  + hbqtwidgets/resources/vzl-excel.png
  + hbqtwidgets/resources/vzl-layer-leaf.png
  + hbqtwidgets/resources/vzl-markers.png
  + hbqtwidgets/resources/vzl-navigator.png
  + hbqtwidgets/resources/vzl-properties.png
  + hbqtwidgets/resources/vzl-refresh.png
  + hbqtwidgets/resources/vzl-row-to-visual.png
  + hbqtwidgets/resources/vzl-select.png
  + hbqtwidgets/resources/vzl-sort-az.png
  + hbqtwidgets/resources/vzl-sort-za.png
  + hbqtwidgets/resources/vzl-states.png
  + hbqtwidgets/resources/vzl-table-view.png
  + hbqtwidgets/resources/vzl-visuals.png
  + hbqtwidgets/resources/vzl-zoom-in.png
  + hbqtwidgets/resources/vzl-zoom-out.png
  + hbqtwidgets/resources/vzl-zoom-pixel.png
  + hbqtwidgets/resources/vzl-zoom-whole.png
    
  * hbqtwidgets/hbqtwidgets.qrc
    + Added: many more icons.
    
  * hbqtwidgets/toolbarex.prg
    % Minor.
    
  * hbqtwidgets/visualizer.ui
  * hbqtwidgets/visualitems.prg
  * hbqtwidgets/visualizer.prg
    + Many enhancements.
    
  * qtcontribs.hbp
    - Commented out hbqtwebkit - not available for static builds - any version.

2019-04-25 08:40 UTC-0700 Pritpal Bedi (bedipritpal at hotmail.com)(r474)
  + hbqtwidgets/resources/original.png
  + hbqtwidgets/resources/to-excel.png
    + Added missing images. Thanks Zoran for pointing.

2019-04-23 00:05 UTC-0700 Pritpal Bedi (bedipritpal at hotmail.com)(r473)
  * hbqt/hbmk2_qt.hb
    ! Fix where "nullptr" variable declaration is missing in 
      latest Qt releases.
      
  * hbqt/qtcore/hbqt_init.cpp
    + static void hbqt_SlotsExecQRectQPointFQPointF( PHB_ITEM * codeBlock, 
                                   void ** arguments, QStringList pList )
      Needed for signals in QRubberBand class.
      
  * hbqt/qtgui/hbqtgui.ch
    + Added few more contsnats for QRubberBand class.
    
  * hbqt/qtgui/qth/QPlainTextEdit.qth
    + Added few new methods introduced in different Qt versions.
    
  + hbqt/qtgui/qth/QRubberBand.qth
    + Implemented QRubberBand class.
    
  * hbqt/qtgui/qth/filelist.hbm
    + Added: QRubberband.qth
    
  * hbqtwidgets/hbqtbrowse.prg
    + Added: Actions icons in vertical toolbar of browser window for 
      ::refreshCurrent() and ::refreshAll() methods.
      
  + hbqtwidgets/httpclient.prg
    + Implemented a general purpose, easy to use, addressing REST Api
      protocol, class HbQtHttpClient() on top of TipClientHttp().
      This source can be included as stand alone in any other 
      project. If matured enough I will also commit HbQtHttpServer()
      based on Mindaugus's contrib/hbhttpd with some added and 
      extremely required features.
    
  + hbqtwidgets/imageeditor.prg
    + Implemented: HbQtImageEditor( oParent ) class which can be 
      embedded into any container with/without any layout. This 
      class exposes rotation, crop, etc features to manage images.
      
  * hbqtwidgets/silverlight.prg
    + Added ::lActive property to know the state of 
      function HbQtActivateSilverLight().
      
  * hbqtwidgets/hbqtwidgets.hbp
    + Added imageeditor.prg.
    
  + hbqtwidgets/resources/crop.png
  + hbqtwidgets/resources/delete-1.png
  + hbqtwidgets/resources/exit-48.png
  + hbqtwidgets/resources/refresh-3.png
  + hbqtwidgets/resources/rotate-left.png
  + hbqtwidgets/resources/select-2.png
  + hbqtwidgets/resources/settings.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added few more images needed for HbQtImageEdit implementation.
    
  ; All above components, including the previous commit, has been 
    developed for couple of real-time, in-production applications and 
    which are running superbly in heavy load environments. So believe in 
    HbQt and take use of it.    

2019-04-05 14:31 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r472)
  * hbqtwidgets/misc.prg
    ! Fixed. A copy/paste error.

2019-04-04 15:19 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r471)
  * hbqt/hbmk2_qt.hb 
    + WR_PRG( '#include "hbqtcore.ch"' )
	  Patch provided by Zoran, thanks.
	
  * hbqt/qtgui/qth/QCompleter.qth
    + Added: more methods.
	
  * hbqt/qscintilla/qth/QsciScintilla.qth
	+ Added method requested by Antonio Linares.
	
  + hbqtwidgets/timeout.prg 
    + CLASS HbQtWarnTimeout
	  A widget to display timeout in seconds from higher to zero
	  with an option to fetch more time. 
    + FUNCTION HbQtSessionTimeout( bBlock, nWaitPeriod )
      Function to exploit HbQtWarnTimeout().
	  
  * hbqtwidgets/alert.prg
    ! Fixed some cosmetic issues.
	
  * hbqtwidgets/hbqtwidgets.hbp
    + timeout.prg
	
  * hbqtwidgets/keyboardn.ui
  * hbqtwidgets/keyboard.prg
    ! Some cosmetic changes.
	
  * hbqtwidgets/misc.prg
    ! Enhancement to __hbqtHashPullValue() to honor first level arrays.
	
  * hbqtwidgets/parselogs.ui
    ! Cosmetic changes.
	
  * hbqtwidgets/scripts.prg
    ! Minor fixes.
	
2017-11-09 17:08 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r470)
  + hbqt/tests/sqllite-table.prg
    Added: yet another very useful demo exploiting SqlLite table and 
    presenting the data via QSqlModel in a QTableView.
    Thanks to Ronaldo, M. for this contribution.

2017-11-08 16:36 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r469)
  * hbqt/qtgui/hbqtgui.ch
    + Added: QMetaType_* constants.
    - Modified: QVariant_* constants consistent with QMetaType_*.
      Patch submitted by Luigi - thanks.

  + hbqt/tests/cidades.db
    + Added: Sqlite database demonstrated in sqllite.prg.
  + hbqt/tests/sqllite.prg
    + Added: Demo of using QCompleter in a QLineEdit. QCompleter 
      consumes the data coming from SqLite database. A good opportunity
      for you to play with HbQtSql implementation.

  + hbqt/tests/completer.prg
    + Added: Demo app to use QCompleter in a QLineEdit in a simplistic form.
    ; QCompleter demos are provided by Ronaldo - thanks.

  + hbqt/tests/completerex.prg
    + Added: An extended version of above completer.prg. This demo gives 
      you insight how to use QCompleter dynamically based on the contents
      of QLineEdit. I used selecting a domain when "@" key is pressed 
      in an edit controlfetching email address.

2017-10-29 14:10 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r468)
  * hbqtwidgets/hbqtdbu.prg
    % Replaced: hb_osPathSeparator() with hb_ps().

2017-10-29 14:00 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r467)
  * hbdbu/dbu.prg
  * hbide/main.prg
    % Replaced: hb_osPathSeparator() with hb_ps().

2017-10-28 16:20 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r466)
  * hbdbu/dbu.prg
  * hbide/main.prg
    - Reverted: REQUEST __HBEXTERN__HBTIP__ enabled by error.

2017-10-28 15:38 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r465)
  * hbide/hbide.hbp
    % minor.

  * hbdbu/dbu.prg
  * hbide/main.prg
    + Added: #include "harbour.hbx"
    % Prepared to be compiled with freeBSD.

  * hbqt/hbmk2_qt.hb
    - Removed: -std=c++11 

  * hbqt/hbqt_common.hbc
    - Removed: -std=c++11 hacks.
      With current Harbour, sources are compiled just fine.

  * hbqt/qscintilla/hbqscintilla.hbc
  * hbqt/qtbluetooth/hbqtbluetooth.hbc
  * hbqt/qtcharts/hbqtcharts.hbc
  * hbqt/qtcore/hbqtcore.hbc
  * hbqt/qtdbus/hbqtdbus.hbc
  * hbqt/qtdeclarative/hbqtdeclarative.hbc
  * hbqt/qtdesigner/hbqtdesigner.hbc
  * hbqt/qtgui/hbqtgui.hbc
  * hbqt/qtlocation/hbqtlocation.hbc
  * hbqt/qtmultimedia/hbqtmultimedia.hbc
  * hbqt/qtmultimediawidgets/hbqtmultimediawidgets.hbc
  * hbqt/qtnetwork/hbqtnetwork.hbc
  * hbqt/qtopengl/hbqtopengl.hbc
  * hbqt/qtpositioning/hbqtpositioning.hbc
  * hbqt/qtqml/hbqtqml.hbc
  * hbqt/qtquick/hbqtquick.hbc
  * hbqt/qtscript/hbqtscript.hbc
  * hbqt/qtsensors/hbqtsensors.hbc
  * hbqt/qtsql/hbqtsql.hbc
  * hbqt/qtsvg/hbqtsvg.hbc
  * hbqt/qtwebkit/hbqtwebkit.hbc
  * hbqt/qtwebsockets/hbqtwebsockets.hbc
  * hbqt/qtxml/hbqtxml.hbc
  * hbqt/qzxing/hbqtzxing.hbc
    % Prepared to be compiled with freeBSD.

  * hbqtwidgets/hbqtdbu.prg
    + Added: #include "harbour.hbx"

  * hbxbp/xbp.ch
    + Added: #define HB_ISNIL( x )        ( x == NIL )
      Pointed-out by Viktor, many thanks.
      This eliminates XHB dependency for this library.

  ; A patch provided by Mario Logo with , many thanks. 
    

2017-10-22 08:45 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r464)
  * hbqtwidgets/editor.prg
    ! Fixed: Long-standing bug in HbIDE where CTRL+L was misbehaving 
      when some text remains selected prior to calling it. Bug reported 
      by Toni Martins with exact steps to reproduce it, thanks Toni.

2017-10-18 19:14 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r463)
  * hbide/editor.prg
    % Minor fix.
	
  * hbide/shortcuts.prg
    % Fixed: CTRL+SHIFT+W to fire EXIT from HbIDE.
	
  * hbqtwidgets/alert.prg
    + Improved: HbQtMsgbox( cMsg, cTitle, cnBGround, nTimeout, nX, nY )
	  Now background color, timeout in seconds, X and Y
	  positions can be applied.
	  
  * hbqtwidgets/signature.prg
    % Minor: Color of signatures changed from blue to black.
	
  * hbqtwidgets/silverlight.prg
    + Implemented: [<nDuration>] and [<bExecutionBlock>].
	<nDuration> is the timeout seconds after which 
	oSilverLight will be deactivated automatically.
	<bExecutionBlock> is the call-back which will be 
	fired when oSilverLight is deactivated. 
	Very useful extention.
	
  * hbqtwidgets/misc.prg
    + Extended: HbQtActivateSilverLight( lActivate, xContent, oColor, ;
	                 lAnimate, aOpacity, oWidget, nDuration, bExecute )  
	  This function has been upgraded to correspond SilverLight.
	  
  + hbqtwidgets/keyboard.prg
  + hbqtwidgets/keyboard.ui
  + hbqtwidgets/keyboardn.ui
    + A work-in-progress on-screen keyboard meant for 
	  touch-screen applications like kiosks.
	  Shortly I will publish the semantics of 
	  in-production kiosk application which consumes
	  this component. Note that many parts of this 
	  component has to be polished as in its current 
	  state code has been separated from application.
	  It is functional though.
	  
  * hbqtwidgets/hbqtwidgets.hbp
    + Added: keyboard.prg, keyboard.ui, keyboardn.ui
  
  + hbqtwidgets/resources/back-g-w.png
  + hbqtwidgets/resources/backspace.png
  + hbqtwidgets/resources/checkbox-checked-w.png
  + hbqtwidgets/resources/checkbox-unchecked-w.png
  + hbqtwidgets/resources/clear.png
  + hbqtwidgets/resources/click.wav
  + hbqtwidgets/resources/enter-g-w.png
  + hbqtwidgets/resources/enter.png
  + hbqtwidgets/resources/prv_down-4.png
  + hbqtwidgets/resources/prv_up-4.png
  + hbqtwidgets/resources/round-blue.png
  + hbqtwidgets/resources/round-gray.png
  + hbqtwidgets/resources/s-delete.png
  + hbqtwidgets/resources/s-down.png
  + hbqtwidgets/resources/s-left.png
  + hbqtwidgets/resources/s-plus.png
  + hbqtwidgets/resources/s-right.png
  + hbqtwidgets/resources/s-up.png
  + hbqtwidgets/resources/s-yes.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added: many images needed for new components.  

2017-10-14 08:33 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r462)
  * hbdbu/dbu.prg
    % Guarded: __addTreeItem() with #if defined( __PLATFORM__WINDOWS ).
      was raising warning on Linux.

  * hbqtwidgets/editor.prg
    ! Fixed (tried-not tested) rte reported by hb_xfree for a null pointer.
      This is unusual to have this error or source line reported by 
      traceback is wrong. Reported by Luigi. [ HbDBU ]

2017-10-12 08:28 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r461)
  * hbqt/qtcore/qth/QFile.qth
    % Fixed: QFile( oFile ) - pointed-out by Luigi.

  * hbqtwidgets/hbqtbrowse.prg
    + Refined :goTo() method to position vertical scrollbar when no :goto
      block is defined.

2017-10-11 22:16 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r460)
  * hbdbu/dbu.prg
  * hbdbu/hbdbu.hbp
  * hbide/main.prg
    - Commented out __HBTIP_* directives. Broken in the core.
	
  * hbqt/qtcore/hbqt_pointer.cpp
  * hbqt/hbqt_common.hbc
  * hbqt/qtcore/hbqtcore.hbc
    * Some refinements for Qt Static builds for changes in latest versions.
    
  * hbqt/qtgui/hbqtgui.ch
    + Added: QAbstractScrollArea_* constants.
	
  * hbqt/qtgui/qth/QPixmap.qth
    + Added one latest method.
	
  * qtcontribs57.hbp
    - Removed QtScript module. No longer supported and never used in HbQt.

2017-10-11 21:09 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r459)
  * hbqt/qtgui/qth/QWidget.qth
    + Implemented: QWidget:setParent( 0 ).
      Patch submitted by Luigi.

2017-10-11 20:40 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r458)
  * hbqtwidgets/misc.prg
    + Added: __hbqtHashPullValue( hHash, cKey, xDefault )
      A very useful function.

  * hbqtwidgets/scripts.prg
    * Put var cPath under HB_SYMBOL_UNUSED, was raising warnings.

2017-10-11 20:30 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r457)
  * hbqt/qtcore/qth/filelist.hbm
  * hbqt/qtcore/qth/QAbstractEventDispatcher.qth
    + Added back class QAbstractEventDispatcher(). 
      Also commented out many methods.

2017-10-11 20:22 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r456)
  - hbqt/qtmultimedia/qth/QCameraViewFinderSettings.qth
  + hbqt/qtmultimedia/qth/QCameraViewfinderSettings.qth
    * Renamed because of classname having wrong case.
      Was breaking Linux builds.

2017-05-14 13:28 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r455)
  * hbqt/qtcore/qth/QObject.qth
    + Refined Method setParent() which now can receive 0 as a parameter 
       more like C++ calling convension, in place of NULL pointer.
       Until Now:
        oWidget:setParent( QWidget() )
       Now:
        oWidget:setParent( 0 )

      Suggested and patch supplied by Luigi.
   
  * hbqt/qtgui/qth/QFontDatabase.qth
    + Added a couple of methods which were introduced by Qt's later versions.

  * hbqt/qtgui/hbqtgui.ch
    + Added constants for QFontDatabase_*.

  * hbdbu/hbdbu.hbp
  * hbide/hbide.hbp
    + Added: hbqtmultimedia.hbc

2017-04-18 18:43 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r454)
  * hbide/debugger.prg
    ! Fixed to publish fields of last activated alias with each next step.

2017-04-18 16:26 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r453)
  * hbqt/hbqt_common.hbc
  * hbqt/qtcore/hbqt_pointer.cpp
    + Added more plugins for static builds.
	
  * hbqt/qtcore/qth/QLocale.qth
    + Readded methods which were guarded agains wrong version.
	
  + hbqt/qtmultimedia/qth/QCameraViewFinderSettings.qth
  * hbqt/qtmultimedia/qth/filelist.hbm
    + Added another class.
	
  * hbqt/qtmultimedia/hbqtmultimedia.hbc
  * hbqt/qtmultimedia/qth/QCamera.qth
    +Enhanced QCamera to take advantage of latest offerings.
	
  + hbqtwidgets/resources/camera.png
  + hbqtwidgets/resources/redo-1.png
  + hbqtwidgets/resources/round-green.png
  + hbqtwidgets/resources/round-red.png
  + hbqtwidgets/resources/round-yellow.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added more icons.
	
  * hbqtwidgets/editor.prg
    I Fixed CTRL+L press in a source which was not navigated before.
	
  * hbqtwidgets/parselogs.prg
    ! Fixed some nasty animation constructs.
	
  * hbqtwidgets/signature.prg
    % Minor improvements.
	
  * hbide/debugger.prg
    + Enhanced to respect last active alias and publish the fields auto.
  
2017-03-09 13:31 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r452)
  * hbqt/qtgui/hbqtgui.ch
    + Added: QSqlTableModel_* constants.
	
  * hbqtwidgets/loggraphics.ui
  * hbqtwidgets/parselogs.prg
    + Added: more features.

2017-03-05 13:07 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r451)
  * hbqt/qtgui/qth/QImage.qth
    + Added: methods introduced in later versions of Qt.
	
  + hbqtwidgets/resources/cancel.png
  + hbqtwidgets/resources/refresh-2.png
  + hbqtwidgets/resources/refresh.png
  + hbqtwidgets/resources/select-3.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added: few more images.
	
  * hbqtwidgets/hbqtwidgets.hbp
    + Added: signature.prg.
	
  + hbqtwidgets/signature.prg
    + Implemented: Class HbQtSignature - to fetch signatures over the touch-screen devices. 
	   A blocking but non-modal interface to fetch signatures from party of interest.
	   Testing can be done via mouse on standard screens though. For details 
	   please look into HbQtFetchSignature() function.
	   
	+ Added: HbQtFetchSignature( bBlock ) -> NIL 
       <bBlock> == { | nStatus, oImage | __doWhateverWith( nStatus, oImage ) }
       One-liner function to fetch signatures.
	   
  + hbqtwidgets/tests/signatures.prg
	+ An application demonstrating implementation of HbQtSignature class via 
	   HbQtFetchSignature() function.
    
2017-02-27 13:07 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r450)
  * hbdbu/hbdbu.hbp
    % Adjustments for hbqtcharts.hbc based on Qt's minor version.
	
  * hbqt/hbqt_common.hbc
    ! Fixed to link applications statically for lib name changes in 
	  Qt's minor versions. 
	  
  * hbqt/qzxing/zxing/zxing/ZXing.h
    ! Fixed to resolve _isnan() calls if HbQt is compiled with older 
	  and latest Mingw versions. A constant issue not fixed properly 
	  in Mingw.
	  
  * hbqtwidgets/parselogs.prg
    ! Guarded Class HbQtLogGraphics via #if defined( HBQT_WITH_CHARTS_SUPPORT ).
	   QtCharts are only available from Qt 5.7 onwards.

2017-02-20 17:37 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r449)
  + hbqtqmlparts/tests/calqlatr
  + hbqtqmlparts/tests/calqlatr/calqlatr.hbp
  + hbqtqmlparts/tests/calqlatr/calqlatr.prg
  + hbqtqmlparts/tests/calqlatr/calqlatr.qml
  + hbqtqmlparts/tests/calqlatr/calqlatr.qrc
  + hbqtqmlparts/tests/calqlatr/content
  + hbqtqmlparts/tests/calqlatr/content/Button.qml
  + hbqtqmlparts/tests/calqlatr/content/calculator.js
  + hbqtqmlparts/tests/calqlatr/content/Display.qml
  + hbqtqmlparts/tests/calqlatr/content/images
  + hbqtqmlparts/tests/calqlatr/content/images/paper-edge-left.png
  + hbqtqmlparts/tests/calqlatr/content/images/paper-edge-right.png
  + hbqtqmlparts/tests/calqlatr/content/images/paper-grip.png
  + hbqtqmlparts/tests/calqlatr/content/NumberPad.qml
  + hbqtqmlparts/tests/clocks
  + hbqtqmlparts/tests/clocks/clocks.hbp
  + hbqtqmlparts/tests/clocks/clocks.prg
  + hbqtqmlparts/tests/clocks/clocks.qml
  + hbqtqmlparts/tests/clocks/clocks.qrc
  + hbqtqmlparts/tests/clocks/content
  + hbqtqmlparts/tests/clocks/content/arrow.png
  + hbqtqmlparts/tests/clocks/content/background.png
  + hbqtqmlparts/tests/clocks/content/center.png
  + hbqtqmlparts/tests/clocks/content/clock-night.png
  + hbqtqmlparts/tests/clocks/content/clock.png
  + hbqtqmlparts/tests/clocks/content/Clock.qml
  + hbqtqmlparts/tests/clocks/content/hour.png
  + hbqtqmlparts/tests/clocks/content/minute.png
  + hbqtqmlparts/tests/clocks/content/quit.png
  + hbqtqmlparts/tests/clocks/content/second.png
  + hbqtqmlparts/tests/maroon
  + hbqtqmlparts/tests/maroon/content
  + hbqtqmlparts/tests/maroon/content/audio
  + hbqtqmlparts/tests/maroon/content/audio/bomb-action.wav
  + hbqtqmlparts/tests/maroon/content/audio/catch-action.wav
  + hbqtqmlparts/tests/maroon/content/audio/catch.wav
  + hbqtqmlparts/tests/maroon/content/audio/currency.wav
  + hbqtqmlparts/tests/maroon/content/audio/factory-action.wav
  + hbqtqmlparts/tests/maroon/content/audio/melee-action.wav
  + hbqtqmlparts/tests/maroon/content/audio/projectile-action.wav
  + hbqtqmlparts/tests/maroon/content/audio/shooter-action.wav
  + hbqtqmlparts/tests/maroon/content/BuildButton.qml
  + hbqtqmlparts/tests/maroon/content/GameCanvas.qml
  + hbqtqmlparts/tests/maroon/content/GameOverScreen.qml
  + hbqtqmlparts/tests/maroon/content/gfx
  + hbqtqmlparts/tests/maroon/content/gfx/background.png
  + hbqtqmlparts/tests/maroon/content/gfx/bomb-action.png
  + hbqtqmlparts/tests/maroon/content/gfx/bomb-idle.png
  + hbqtqmlparts/tests/maroon/content/gfx/bomb.png
  + hbqtqmlparts/tests/maroon/content/gfx/button-help.png
  + hbqtqmlparts/tests/maroon/content/gfx/button-play.png
  + hbqtqmlparts/tests/maroon/content/gfx/catch-action.png
  + hbqtqmlparts/tests/maroon/content/gfx/catch.png
  + hbqtqmlparts/tests/maroon/content/gfx/cloud.png
  + hbqtqmlparts/tests/maroon/content/gfx/currency.png
  + hbqtqmlparts/tests/maroon/content/gfx/dialog-bomb.png
  + hbqtqmlparts/tests/maroon/content/gfx/dialog-factory.png
  + hbqtqmlparts/tests/maroon/content/gfx/dialog-melee.png
  + hbqtqmlparts/tests/maroon/content/gfx/dialog-pointer.png
  + hbqtqmlparts/tests/maroon/content/gfx/dialog-shooter.png
  + hbqtqmlparts/tests/maroon/content/gfx/dialog.png
  + hbqtqmlparts/tests/maroon/content/gfx/factory-action.png
  + hbqtqmlparts/tests/maroon/content/gfx/factory-idle.png
  + hbqtqmlparts/tests/maroon/content/gfx/factory.png
  + hbqtqmlparts/tests/maroon/content/gfx/grid.png
  + hbqtqmlparts/tests/maroon/content/gfx/help.png
  + hbqtqmlparts/tests/maroon/content/gfx/lifes.png
  + hbqtqmlparts/tests/maroon/content/gfx/logo-bubble.png
  + hbqtqmlparts/tests/maroon/content/gfx/logo-fish.png
  + hbqtqmlparts/tests/maroon/content/gfx/logo.png
  + hbqtqmlparts/tests/maroon/content/gfx/melee-action.png
  + hbqtqmlparts/tests/maroon/content/gfx/melee-idle.png
  + hbqtqmlparts/tests/maroon/content/gfx/melee.png
  + hbqtqmlparts/tests/maroon/content/gfx/mob-idle.png
  + hbqtqmlparts/tests/maroon/content/gfx/mob.png
  + hbqtqmlparts/tests/maroon/content/gfx/points.png
  + hbqtqmlparts/tests/maroon/content/gfx/projectile-action.png
  + hbqtqmlparts/tests/maroon/content/gfx/projectile.png
  + hbqtqmlparts/tests/maroon/content/gfx/scores.png
  + hbqtqmlparts/tests/maroon/content/gfx/shooter-action.png
  + hbqtqmlparts/tests/maroon/content/gfx/shooter-idle.png
  + hbqtqmlparts/tests/maroon/content/gfx/shooter.png
  + hbqtqmlparts/tests/maroon/content/gfx/sunlight.png
  + hbqtqmlparts/tests/maroon/content/gfx/text-1.png
  + hbqtqmlparts/tests/maroon/content/gfx/text-2.png
  + hbqtqmlparts/tests/maroon/content/gfx/text-3.png
  + hbqtqmlparts/tests/maroon/content/gfx/text-blank.png
  + hbqtqmlparts/tests/maroon/content/gfx/text-gameover.png
  + hbqtqmlparts/tests/maroon/content/gfx/text-go.png
  + hbqtqmlparts/tests/maroon/content/gfx/wave.png
  + hbqtqmlparts/tests/maroon/content/InfoBar.qml
  + hbqtqmlparts/tests/maroon/content/logic.js
  + hbqtqmlparts/tests/maroon/content/mobs
  + hbqtqmlparts/tests/maroon/content/mobs/MobBase.qml
  + hbqtqmlparts/tests/maroon/content/NewGameScreen.qml
  + hbqtqmlparts/tests/maroon/content/SoundEffect.qml
  + hbqtqmlparts/tests/maroon/content/towers
  + hbqtqmlparts/tests/maroon/content/towers/Bomb.qml
  + hbqtqmlparts/tests/maroon/content/towers/Factory.qml
  + hbqtqmlparts/tests/maroon/content/towers/Melee.qml
  + hbqtqmlparts/tests/maroon/content/towers/Ranged.qml
  + hbqtqmlparts/tests/maroon/content/towers/TowerBase.qml
  + hbqtqmlparts/tests/maroon/maroon.hbp
  + hbqtqmlparts/tests/maroon/maroon.prg
  + hbqtqmlparts/tests/maroon/maroon.qml
  + hbqtqmlparts/tests/maroon/maroon.qrc
  + hbqtqmlparts/tests/photosurface
  + hbqtqmlparts/tests/photosurface/photosurface.hbp
  + hbqtqmlparts/tests/photosurface/photosurface.prg
  + hbqtqmlparts/tests/photosurface/photosurface.qml
  + hbqtqmlparts/tests/photosurface/photosurface.qrc
  + hbqtqmlparts/tests/photosurface/resources
  + hbqtqmlparts/tests/photosurface/resources/folder.png
  + hbqtqmlparts/tests/photosurface/resources/icon.png
  + hbqtqmlparts/tests/photosurface/resources/photosurface.icns
  + hbqtqmlparts/tests/photosurface/resources/photosurface.ico
  + hbqtqmlparts/tests/photosurface/resources/photosurface.rc
  + hbqtqmlparts/tests/photoviewer
  + hbqtqmlparts/tests/photoviewer/i18n
  + hbqtqmlparts/tests/photoviewer/i18n/qml_de.qm
  + hbqtqmlparts/tests/photoviewer/i18n/qml_de.ts
  + hbqtqmlparts/tests/photoviewer/i18n/qml_fr.qm
  + hbqtqmlparts/tests/photoviewer/i18n/qml_fr.ts
  + hbqtqmlparts/tests/photoviewer/photoviewer.hbp
  + hbqtqmlparts/tests/photoviewer/photoviewer.prg
  + hbqtqmlparts/tests/photoviewer/photoviewer.qml
  + hbqtqmlparts/tests/photoviewer/photoviewer.qrc
  + hbqtqmlparts/tests/photoviewer/PhotoViewerCore
  + hbqtqmlparts/tests/photoviewer/PhotoViewerCore/AlbumDelegate.qml
  + hbqtqmlparts/tests/photoviewer/PhotoViewerCore/BusyIndicator.qml
  + hbqtqmlparts/tests/photoviewer/PhotoViewerCore/Button.qml
  + hbqtqmlparts/tests/photoviewer/PhotoViewerCore/EditableButton.qml
  + hbqtqmlparts/tests/photoviewer/PhotoViewerCore/images
  + hbqtqmlparts/tests/photoviewer/PhotoViewerCore/images/box-shadow.png
  + hbqtqmlparts/tests/photoviewer/PhotoViewerCore/images/busy.png
  + hbqtqmlparts/tests/photoviewer/PhotoViewerCore/images/cardboard.png
  + hbqtqmlparts/tests/photoviewer/PhotoViewerCore/PhotoDelegate.qml
  + hbqtqmlparts/tests/photoviewer/PhotoViewerCore/ProgressBar.qml
  + hbqtqmlparts/tests/photoviewer/PhotoViewerCore/RssModel.qml
  + hbqtqmlparts/tests/photoviewer/PhotoViewerCore/script
  + hbqtqmlparts/tests/photoviewer/PhotoViewerCore/script/script.js
  + hbqtqmlparts/tests/photoviewer/PhotoViewerCore/Tag.qml
  + hbqtqmlparts/tests/rssnews
  + hbqtqmlparts/tests/rssnews/content
  + hbqtqmlparts/tests/rssnews/content/BusyIndicator.qml
  + hbqtqmlparts/tests/rssnews/content/CategoryDelegate.qml
  + hbqtqmlparts/tests/rssnews/content/images
  + hbqtqmlparts/tests/rssnews/content/images/Asia.jpg
  + hbqtqmlparts/tests/rssnews/content/images/btn_close.png
  + hbqtqmlparts/tests/rssnews/content/images/Business.jpg
  + hbqtqmlparts/tests/rssnews/content/images/busy.png
  + hbqtqmlparts/tests/rssnews/content/images/Entertainment.jpg
  + hbqtqmlparts/tests/rssnews/content/images/Europe.jpg
  + hbqtqmlparts/tests/rssnews/content/images/Health.jpg
  + hbqtqmlparts/tests/rssnews/content/images/Politics.jpg
  + hbqtqmlparts/tests/rssnews/content/images/Science.jpg
  + hbqtqmlparts/tests/rssnews/content/images/scrollbar.png
  + hbqtqmlparts/tests/rssnews/content/images/Sports.jpg
  + hbqtqmlparts/tests/rssnews/content/images/Technology.jpg
  + hbqtqmlparts/tests/rssnews/content/images/TopStories.jpg
  + hbqtqmlparts/tests/rssnews/content/images/USNational.jpg
  + hbqtqmlparts/tests/rssnews/content/images/World.jpg
  + hbqtqmlparts/tests/rssnews/content/NewsDelegate.qml
  + hbqtqmlparts/tests/rssnews/content/RssFeeds.qml
  + hbqtqmlparts/tests/rssnews/content/ScrollBar.qml
  + hbqtqmlparts/tests/rssnews/rssnews.hbp
  + hbqtqmlparts/tests/rssnews/rssnews.prg
  + hbqtqmlparts/tests/rssnews/rssnews.qml
  + hbqtqmlparts/tests/rssnews/rssnews.qrc
  + hbqtqmlparts/tests/samegame
  + hbqtqmlparts/tests/samegame/content
  + hbqtqmlparts/tests/samegame/content/+blackberry
  + hbqtqmlparts/tests/samegame/content/+blackberry/Settings.qml
  + hbqtqmlparts/tests/samegame/content/BBSettings.qml
  + hbqtqmlparts/tests/samegame/content/Block.qml
  + hbqtqmlparts/tests/samegame/content/BlockEmitter.qml
  + hbqtqmlparts/tests/samegame/content/Button.qml
  + hbqtqmlparts/tests/samegame/content/GameArea.qml
  + hbqtqmlparts/tests/samegame/content/gfx
  + hbqtqmlparts/tests/samegame/content/gfx/background-puzzle.png
  + hbqtqmlparts/tests/samegame/content/gfx/background.png
  + hbqtqmlparts/tests/samegame/content/gfx/bar.png
  + hbqtqmlparts/tests/samegame/content/gfx/blue-puzzle.png
  + hbqtqmlparts/tests/samegame/content/gfx/blue.png
  + hbqtqmlparts/tests/samegame/content/gfx/bubble-highscore.png
  + hbqtqmlparts/tests/samegame/content/gfx/bubble-puzzle.png
  + hbqtqmlparts/tests/samegame/content/gfx/but-game-1.png
  + hbqtqmlparts/tests/samegame/content/gfx/but-game-2.png
  + hbqtqmlparts/tests/samegame/content/gfx/but-game-3.png
  + hbqtqmlparts/tests/samegame/content/gfx/but-game-4.png
  + hbqtqmlparts/tests/samegame/content/gfx/but-game-new.png
  + hbqtqmlparts/tests/samegame/content/gfx/but-menu.png
  + hbqtqmlparts/tests/samegame/content/gfx/but-puzzle-next.png
  + hbqtqmlparts/tests/samegame/content/gfx/but-quit.png
  + hbqtqmlparts/tests/samegame/content/gfx/green-puzzle.png
  + hbqtqmlparts/tests/samegame/content/gfx/green.png
  + hbqtqmlparts/tests/samegame/content/gfx/icon-fail.png
  + hbqtqmlparts/tests/samegame/content/gfx/icon-ok.png
  + hbqtqmlparts/tests/samegame/content/gfx/icon-time.png
  + hbqtqmlparts/tests/samegame/content/gfx/logo-a.png
  + hbqtqmlparts/tests/samegame/content/gfx/logo-e.png
  + hbqtqmlparts/tests/samegame/content/gfx/logo-g.png
  + hbqtqmlparts/tests/samegame/content/gfx/logo-m.png
  + hbqtqmlparts/tests/samegame/content/gfx/logo-s.png
  + hbqtqmlparts/tests/samegame/content/gfx/logo.png
  + hbqtqmlparts/tests/samegame/content/gfx/particle-brick.png
  + hbqtqmlparts/tests/samegame/content/gfx/particle-paint.png
  + hbqtqmlparts/tests/samegame/content/gfx/particle-smoke.png
  + hbqtqmlparts/tests/samegame/content/gfx/red-puzzle.png
  + hbqtqmlparts/tests/samegame/content/gfx/red.png
  + hbqtqmlparts/tests/samegame/content/gfx/text-highscore-new.png
  + hbqtqmlparts/tests/samegame/content/gfx/text-highscore.png
  + hbqtqmlparts/tests/samegame/content/gfx/text-no-winner.png
  + hbqtqmlparts/tests/samegame/content/gfx/text-p1-go.png
  + hbqtqmlparts/tests/samegame/content/gfx/text-p1-won.png
  + hbqtqmlparts/tests/samegame/content/gfx/text-p1.png
  + hbqtqmlparts/tests/samegame/content/gfx/text-p2-go.png
  + hbqtqmlparts/tests/samegame/content/gfx/text-p2-won.png
  + hbqtqmlparts/tests/samegame/content/gfx/text-p2.png
  + hbqtqmlparts/tests/samegame/content/gfx/yellow-puzzle.png
  + hbqtqmlparts/tests/samegame/content/gfx/yellow.png
  + hbqtqmlparts/tests/samegame/content/levels
  + hbqtqmlparts/tests/samegame/content/levels/level0.qml
  + hbqtqmlparts/tests/samegame/content/levels/level1.qml
  + hbqtqmlparts/tests/samegame/content/levels/level2.qml
  + hbqtqmlparts/tests/samegame/content/levels/level3.qml
  + hbqtqmlparts/tests/samegame/content/levels/level4.qml
  + hbqtqmlparts/tests/samegame/content/levels/level5.qml
  + hbqtqmlparts/tests/samegame/content/levels/level6.qml
  + hbqtqmlparts/tests/samegame/content/levels/level7.qml
  + hbqtqmlparts/tests/samegame/content/levels/level8.qml
  + hbqtqmlparts/tests/samegame/content/levels/level9.qml
  + hbqtqmlparts/tests/samegame/content/levels/TemplateBase.qml
  + hbqtqmlparts/tests/samegame/content/LogoAnimation.qml
  + hbqtqmlparts/tests/samegame/content/MenuEmitter.qml
  + hbqtqmlparts/tests/samegame/content/PaintEmitter.qml
  + hbqtqmlparts/tests/samegame/content/PrimaryPack.qml
  + hbqtqmlparts/tests/samegame/content/PuzzleBlock.qml
  + hbqtqmlparts/tests/samegame/content/qmldir
  + hbqtqmlparts/tests/samegame/content/samegame.js
  + hbqtqmlparts/tests/samegame/content/SamegameText.qml
  + hbqtqmlparts/tests/samegame/content/Settings.qml
  + hbqtqmlparts/tests/samegame/content/SimpleBlock.qml
  + hbqtqmlparts/tests/samegame/content/SmokeText.qml
  + hbqtqmlparts/tests/samegame/samegame.hbp
  + hbqtqmlparts/tests/samegame/samegame.prg
  + hbqtqmlparts/tests/samegame/samegame.qml
  + hbqtqmlparts/tests/samegame/samegame.qrc
  + hbqtqmlparts/tests/stocqt
  + hbqtqmlparts/tests/stocqt/content
  + hbqtqmlparts/tests/stocqt/content/+windows
  + hbqtqmlparts/tests/stocqt/content/+windows/Settings.qml
  + hbqtqmlparts/tests/stocqt/content/Button.qml
  + hbqtqmlparts/tests/stocqt/content/CheckBox.qml
  + hbqtqmlparts/tests/stocqt/content/images
  + hbqtqmlparts/tests/stocqt/content/images/icon-left-arrow.png
  + hbqtqmlparts/tests/stocqt/content/images/wheel-touch.png
  + hbqtqmlparts/tests/stocqt/content/images/wheel.png
  + hbqtqmlparts/tests/stocqt/content/qmldir
  + hbqtqmlparts/tests/stocqt/content/Settings.qml
  + hbqtqmlparts/tests/stocqt/content/StockChart.qml
  + hbqtqmlparts/tests/stocqt/content/StockInfo.qml
  + hbqtqmlparts/tests/stocqt/content/StockListModel.qml
  + hbqtqmlparts/tests/stocqt/content/StockListView.qml
  + hbqtqmlparts/tests/stocqt/content/StockModel.qml
  + hbqtqmlparts/tests/stocqt/content/StockSettingsPanel.qml
  + hbqtqmlparts/tests/stocqt/content/StockView.qml
  + hbqtqmlparts/tests/stocqt/stocqt.hbp
  + hbqtqmlparts/tests/stocqt/stocqt.prg
  + hbqtqmlparts/tests/stocqt/stocqt.qml
  + hbqtqmlparts/tests/stocqt/stocqt.qrc
  + hbqtqmlparts/tests/tweetsearch
  + hbqtqmlparts/tests/tweetsearch/content
  + hbqtqmlparts/tests/tweetsearch/content/FlipBar.qml
  + hbqtqmlparts/tests/tweetsearch/content/LineInput.qml
  + hbqtqmlparts/tests/tweetsearch/content/ListFooter.qml
  + hbqtqmlparts/tests/tweetsearch/content/ListHeader.qml
  + hbqtqmlparts/tests/tweetsearch/content/resources
  + hbqtqmlparts/tests/tweetsearch/content/resources/anonymous.png
  + hbqtqmlparts/tests/tweetsearch/content/resources/bird-anim-sprites.png
  + hbqtqmlparts/tests/tweetsearch/content/resources/icon-clear.png
  + hbqtqmlparts/tests/tweetsearch/content/resources/icon-loading.png
  + hbqtqmlparts/tests/tweetsearch/content/resources/icon-refresh.png
  + hbqtqmlparts/tests/tweetsearch/content/resources/icon-search.png
  + hbqtqmlparts/tests/tweetsearch/content/SearchDelegate.qml
  + hbqtqmlparts/tests/tweetsearch/content/TweetDelegate.qml
  + hbqtqmlparts/tests/tweetsearch/content/tweetsearch.js
  + hbqtqmlparts/tests/tweetsearch/content/TweetsModel.qml
  + hbqtqmlparts/tests/tweetsearch/tweetsearch.hbp
  + hbqtqmlparts/tests/tweetsearch/tweetsearch.prg
  + hbqtqmlparts/tests/tweetsearch/tweetsearch.qml
  + hbqtqmlparts/tests/tweetsearch/tweetsearch.qrc
    + Added: QML demos provided in Qt distro 5.8.
	   The structure of the folders is kept as-is though 
	   some parent Qml source name is changed somewhat.
	   
  ; To link above demos in STATIC mode must compile 
    hbqt/qtcore/hbqtcore with cflag = -DHBQT_WITH_QML_SUPPORT.  

2017-02-20 16:29 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r448)
  * hbqt/qtcharts/qth/QChartView.qth
    + Applied [*R=1*] to QChart * chart() method. 
	   Trasfers the ownership of <chart> back to Harbour.
	   
  * hbqtwidgets/resources/auto_off.png
  * hbqtwidgets/resources/auto_on.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added: some more images.
	
  * hbqtwidgets/loggraphics.ui
  * hbqtwidgets/parselogs.prg
  * hbqtwidgets/parselogs.ui
    + Many enhancements to HbQtLogsAnalyzer() interface. Details will follow.

2017-02-15 17:00 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r447)
  * hbqt/qtcore/hbqt_init.cpp
    + Added: Code to manage SIGNAL with parameters bool,int.

  * hbdbu/dbu.prg
    % Passed mainwindow to __hbqtAppWidget()

  * hbqtwidgets/loggraphics.ui
  * hbqtwidgets/parselogs.prg
    % Refined the way current-day visual analyzer's look and feel. 

2017-02-14 12:43 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r446)
  * hbdbu/dbu.prg
    ! Fixed: an assertion check.
  * hbdbu/hbdbu.hbp
    + hbqtcharts.hbc
  
  * hbide/debugger.prg
    ! Fixed: another non-sense bug bypassing another assertion check.
  * hbide/projmanager.prg
    ! Fixed: if another project is initiated while one is in build state,
	   fake method call was being reported.
    
  * hbqt/hbmk2_qt.hb
    - Removed: #define Q_NULLPTR.
	! Fixed: parsing of QApplication::translate(*.*). Now HbQt compiles 
	   good with any version of Qt.
  * hbqt/hbqt_common.hbc
    % Formatting.
	
  * hbqt/qtcharts/qth/QAbstractBarSeries.qth
  * hbqt/qtcharts/qth/QChartView.qth
    ! Preliminary effort to stramline child ownership. Still generates 
	   GPF on exit in some circumstances.
  * hbqt/qtcore/hbqt_misc.prg
    - Guarded again - QApplication_translate() - for Qt v4.x only.
  * hbqt/qtcore/hbqt_pointer.cpp
    + Introduced : define HBQT_WITH_QML_SUPPORT needed to link 
	   QtQuick and QtQml plugins in static builds.
	   So, if you are building QML based applications then 
	   compile hbqtcore with -DHBQT_WITH_QML_SUPPORT compiler flag.
	   
      #ifdef HBQT_WITH_QML_SUPPORT
         Q_IMPORT_PLUGIN(QtQuickLayoutsPlugin)
         Q_IMPORT_PLUGIN(QtQuickControls1Plugin)
         Q_IMPORT_PLUGIN(QtQuickControls2Plugin)
         Q_IMPORT_PLUGIN(QtQuick2Plugin)
         Q_IMPORT_PLUGIN(QtQuick2DialogsPrivatePlugin)
         Q_IMPORT_PLUGIN(QtQuick2DialogsPlugin)
         Q_IMPORT_PLUGIN(QtQuick2WindowPlugin)
         Q_IMPORT_PLUGIN(QtQuick2PrivateWidgetsPlugin)
         Q_IMPORT_PLUGIN(QtQuick2ParticlesPlugin)
         Q_IMPORT_PLUGIN(QmlFolderListModelPlugin)
         Q_IMPORT_PLUGIN(QmlSettingsPlugin)
         Q_IMPORT_PLUGIN(QtQmlModelsPlugin)
         Q_IMPORT_PLUGIN(QmlXmlListModelPlugin)
         Q_IMPORT_PLUGIN(QQmlLocalStoragePlugin)
      #endif	
	
  * hbqt/qtdesigner/qth/filelist.hbm
    ! Fixed to compilable in static mode.
	
  * hbqt/qtqml/hbqtqml.hbc
    + Added: ldflags, libs for static builds - v5.8.0 onwards only.
	
  * hbqt/qtquick/hbqtquick.hbc
    + Added: flags for static builds - v5.8.0 onwards only.
	
  * hbqtqmlparts/qmlbridge.prg
    % Some refinement in error reporting.
	
  * hbqtwidgets/parselogs.prg
    + Implemented: a stand alone charting sheet - auto refreshed - details later.
  * hbqtwidgets/silverlight.prg
    % Some refinements.
	
  + hbqtwidgets/loggraphics.ui
  * hbqtwidgets/parselogs.ui
  * hbqtwidgets/hbqtwidgets.hbp
    + Added: loggraphics.ui

2017-02-07 19:03 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r445)
  * hbqt/hbmk2_qt.hb
    + Added logic to detect Qt minor version also.
	+ Added constructs to #define Q_NULLPTR 0 in .ui => .prg sources.
	   A constant introduced by Qt since version 5.7.
	   
  * hbqt/hbqt_common.hbc
  * hbqt/qtcore/hbqtcore.hbc
    + Tweaked to honor Qt 5.8 specific static builds.
	
  * hbqt/qtcore/hbqt_misc.prg
    + Added some experimental methods. 
	  DO NOT USE - may be removed in next commits.
	% FUNCTION QApplication_translate(...) made public.
       Qt has made some difficult-to-comprehend changes in uic tool.
       So this function is called for some builds above Qt 5.6.
	   
  * hbqt/qtcore/hbqt_pointer.cpp
    + Added an experimental function - DO NOT USE.
	
  * hbqt/qtgui/hbqt_version.ch
    % Version bump.
	
  + hbdbu/resources/hbdbu-2017.png
  * hbdbu/dbu.prg
  * hbdbu/dbu.ui
  * hbdbu/dbu.qrc
    + Added another page to host HbQtLogAnalyzer (details below).
    % Changed: splash screen showing copyright year to 2017.

  * hbide/hbide.qrc
  * hbide/main.prg
  + hbide/resources/hbide-2017.png
    % Changed: splash screen showing copyright year to 2017.

  + hbqtwidgets/resources/analysis-1.png
  + hbqtwidgets/resources/analysis-2.png
  + hbqtwidgets/resources/analysis.png
  + hbqtwidgets/resources/save-6.png
  + hbqtwidgets/resources/hbdbu-2017.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added: few more images required here and there.

  * hbqtwidgets/charts.prg
    % Some refinements.

  * hbqtwidgets/dashboard.prg
    ! Fixed to use HbQtToolbar's refined parameters.

  * hbqtwidgets/misc.prg
    + Added: FUNCTION __hbqtAProcessUniqueEx( aData, ele_, add_, opr_, bFor )
             FUNCTION __hbqtAProcessUnique( dat_, ele_, nAdd_, aOpr_ )
             +
             Supporting Static Functions.
               To consolidate arrays by elements and numeric contents.

             FUNCTION __hbqtV( cVrb, xValue )
               A general-purpose SET|GET function where key-value pairs 
               can be stored inside a hash. Was required to parse 
               Error Logs efficiently, if needed, inside HbQtLogAnalyzer().

  * hbqtwidgets/scripts.prg
    + Implemented: Using Harbour expressions in any of the SELECT fields,
       be it aggregate field - COUNT, MIN, MAX, AVG, SUM 
       or value field - SUBSTR, LEFT, RIGHT, LOWER, UPPER 
       or non-SQL-compliant value field FUNC (examples below).

    + Extended: INTO clause to save result as Excel compliant .csv file.
       This is in addition to saving result as a .dbf file. The type is 
       determined by the extention of file provided through INTO clause.
    
    + Extended: SELECT fields can contain parenthesis.

    ; Until now Harbour's SQL query looks like 
                                                                Clause Order
       SELECT   <* | ListOfFieldsSeperatedByComma> ;                 1     Mandatory
       FROM     <[cDriver|]cFullyQualifiedTableName> ;               2     Mandatory
       INTO     <cFullyQualifiedDbf|CsvFilenameWithExtention> ;      v     Optional
       ORDER BY <ListOfFieldNamesProvidedInSELECTseparatedByComma> ; v     Optional
       GROUP BY <ListOfFieldNamesProvidedInSELECTseparatedByComma> ; v     Optional 
       WHERE    <ConditionsComparingFieldsInTheTableWithSomeValue> ; LAST  Optional 

    ; Examples:
       SELECT   age, state, Func(age*salary/2), Func(Right(state,1)+Left(State,1)), Count(*) ;
       FROM     C:\harbour\tests\test.csv ;
       GROUP BY age,state ;
       ORDER BY age-desc,state ;
       WHERE    age > 66

    ; WHERE clause totally rely on fieldnames and literal values and only "AND" clause.

  + hbqtwidgets/parselogs.prg
  + hbqtwidgets/parselogs.ui
  + hbqtwidgets/expandtext.ui
  * hbqtwidgets/hbqtwidgets.hbp
    + Added: A self contained class to analyze application logs - of any kind - almost.

  ; Presenting HbQtLogAnalyzer() - A Tool to Analyze Logs in a Variety of Ways

    ; The Background:
       At Curacao, a shade less than 1000 users/terminals remains on for the 
       best part of the day, spreading accross different cities and locations,
       all accessing the same business application. Usually users do not report 
       if any error is generated. For days it goes on unnoticed until reported 
       or looked into error logs regularly. Even looking into error logs does 
       not yield accurate state of things. 

       This motivated me to develop a tool, from Harbour's point-of-view specifically,
       which could provide enough insite into the state of errors, and from 
       different angels. Initially I started with our standatd errorlog, 
       but soon realized that with some little more effort it can be a generic 
       tool. That little effort resulted in HbQtLogAnalyzer() class, which to my 
       amazement, could parse all other logs generated in our organization. And 
       I am sure that this tool will be good for any type of log generated 
       from any language, machine, or server.

    : How to implement in your application:

       WITH OBJECT oAnalyzer := HbQtLogAnalyzer():new( oParent ):create()
          :loadConfiguration( hb_DirBase() + "errors.hlg" )
          :loadLog( hb_DirBase() + "errors12.16" )
       ENDWITH 
       // Provide a container to LogAnalyzer widget
       //
       oParent:layout():addWidget( oAnalyzer:widget() )
      
    : The Interface:
       LEFT Pane: 
        TreeView containing all the entries in the log chronologically. 
        Each entry is serialized and depicted with the <Description> field 
        defined in the log definition. The child node of each entry contains 
        all other fields defined in the definition. 

       RIGHT Pane: 
        A context sensitive toolbar at the top - TOP-TOOLBAR:
        .
        ToolButton - Paste selection on clipboard.
         This button is active when ANALYSIS tab is in focus. 
         Copies the contents of selected fields and rows on clipboard.

        ToolButton - Save selection as .csv file.
         This button is active when ANALYSIS tab is in focus. 
         Opens a FileSave dialog to fetch the .csv filename, then
         Saves the contents of selected fields and rows in a provided .csv file.

        A Tab Widget at the bottom containing following tabs:
        .
        ANALYSIS  : Contains a table widget containing field values of log entries.
        SUMMARIES : Contains a tree-view at the top depicting summaries of entries 
                    grouped by fields defined to be analyzed.
        CONFIGURE : An interface to define definition files for each type of 
                    log you intend to analyze. A very intuitive and powerful   
                    definition writer.

        ( SEEMS the textual help as above will not be useful, so I will post on 
          QtContribs site at source-forge some detailed GUI aided pages which will 
          demonstrate how to use this tool to the best of your advantage. 
		  
		  Infact, I wanted to present this tool to you as a new year gift for 2017
		  but on 31st I fell sick and it took me a while to recover. So, please 
		  accept it as originally intended. )		  

2016-12-12 18:53 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r444)
  * hbqtwidgets/scripts.prg
    + Added: RecNo() field in SELECT statement. At times it is a must have info.

      SELECT age,state,RecNo(),func(age*salary),Right(state,1),sum(salary),Min(salary),Max(salary),avg(salary),count(*) ;
      FROM c:\harbour\tests\test.dbf GROUP BY age,state ORDER BY age-desc,state WHERE age > 66

2016-12-12 16:43 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r443)
  * hbqtwidgets/scripts.prg
    % Changed : SQL parser from procedural to class code.

    + Array browser window adjusts to number of columns in the record upto 
       maximum columns which can be accomodated on the screen.

    + Implemented: SQL aggregate functions:
       a) Count( * )
       b) Min( cNumFieldName *|+|-|/ cSecondNumField *|+|-|/ cThirdNumField )
       c) Max( cNumFieldName *|+|-|/ cSecondNumField *|+|-|/ cThirdNumField )
       d) Avg( cNumFieldName *|+|-|/ cSecondNumField *|+|-|/ cThirdNumField )
       e) Sum( cNumFieldName *|+|-|/ cSecondNumField *|+|-|/ cThirdNumField )
 
    + Implemented: SQL string functions:
       a) SubStr( cCharFieldName, nFrom [, nCount ] )
       b) Left( cCharFieldName, nCount )
       c) Right( cCharFieldName, nCount )
       d) Upper( cCharFieldName )
       e) Lower( cCharFieldName )

    + Implemented: A general purpose field to club multiple numeric columns.
       It is like SUM() function but is not an aggregate function. Syntax is:
       a) Func( salary * age )

        
    ; WARNING: no parenthesis inside the function body.
    ; Title of the column representing above functions is constructed 
       automatically. Still, I am at a loss how to implement AS clause.
       [ Preprocessor Limitation ].

    ; Example calls:
       SELECT * FROM c:\harbour\tests\test.dbf ORDER BY age WHERE age>=90

       SELECT first,last,age,state,zip,sum(age * age),count(*) ;
       FROM c:\harbour\tests\test.dbf ORDER BY age-desc,state WHERE age>66

       SELECT age,state,Func(age*salary),Right(state,1),Sum(salary),Min(salary),Max(salary),Avg(salary),Count(*) ;
       FROM c:\harbour\tests\test.dbf GROUP BY age,state ORDER BY age-desc,state WHERE age > 66

2016-12-06 16:27 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r442)
  * hbqtwidgets/scripts.prg
    + Implemented LIKE operator in WHERE clause.
      SELECT first,last,age,state,zip ;
        FROM c:\harbour\tests\test.dbf ;
        ORDER BY age-desc,state ;
        WHERE last LIKE 'Vedal%'

      OR

      SELECT first,last,age,state,zip ;
        FROM c:\harbour\tests\test.dbf ;
        ORDER BY age-desc,state ;
        WHERE last LIKE 'Vedal'

      If "%" is not postfixed with search string then the behavior will 
      be exactly the same as "=" opertaor.

      "=" operator matches the exact string.
      "LIKE" without "%" will match the exact string.
      "LIKE" with "%" will match the first characters of the string.

    + Implemented local resizable array browser to display the result set.
       instead of calling Browse() which reduces the overhead to save 
       results in a table and then display. INTO clause is still respected,
       though.

2016-12-02 16:39 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r441)
  * hbqtwidgets/scripts.prg
    ! Fixed: not to call 3rd rdd functions under a directive.

2016-12-02 16:18 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r440)
  * hbdbu/dbu.prg
  * hbdbu/hbdbu.hbp
  * hbqtwidgets/misc.prg
    ! Something missed.

2016-12-02 14:08 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r439)
  * hbdbu/dbu.prg
  * hbdbu/hbdbu.hbp
    + Added few more contribs.

  * hbqtwidgets/dbucreate.prg
    ! Fixed: <Create> and <Cancel> buttons on the "Create Table" 
       interface were not working.

  * hbqtwidgets/getlist.prg
    ! Fixed a potential memoty leak. (Not confirmed).

  * hbqtwidgets/hbqtdbu.prg
    ! Fixed: application freeze if editing was performed on ghost record.
       Now a blank record is appeneded as soon as first editing action 
       is confirmed with ENTER.

  * hbqtwidgets/scripts.ui
  * hbqtwidgets/scripts.prg
    - Removed: <-include> line edit. 

    + Added: <-include> combo-box where multiple paths can be added and 
       managed as a drop-down list.

       How to Add   : Just type in the path in combo's edit field and 
                      press ENTER.
       How to Delete: Select the desired entry so that you can see it 
                      in the combo's edit field, right-click, select 
                      <Delete> from the context menu.

       In single lineEdit control it was a mess to organize the paths.

    + The .hsv (Harbour Scripts View) filename is dispalyed on the 
       header of scripts tree. While saving and opening a new .hsv 
       the file open dialog now respects this path for .hsv files.

    + The path to the root of HbDBU is passed as an -i(nclude) directive 
       when a script is run.
    + If the script is a saved disk file, then, this path is also sent 
       as an -i(nclude) directive. Moreover, for console mode run, 
       the script is run while thread stays in this path.

    + Added: FUNCTION __hbqtExecSelect( cFields, cFrom, cWhere, cOrder, cInto ) 
       which is activated with a statement like:

       SELECT first,last,age,state FROM c:\harbour\tests\test.dbf ;
       ORDER BY age-desc,state WHERE age>60

       #command SELECT <fld,...> FROM <from> ;
                  [INTO <into>] ;
                  [ORDER BY <order,...>] ;
                  [WHERE <*whr*>] ;
              => ;
        __hbqtExecSelect( #<fld>, <"from">, #<whr>, #<order>, <"into"> )

       preprocessor directive is sent with the script buffer automatically.

     ; Yes, you read it right. HbQtScripts now implement a sub-set of 
        SQL SELECT statement which is translated to database commands and 
        result is displayed via Browse(). Let us understand the difference
        in true SQL statement components vs HbQt.
         
        SELECT    * | comma sapartaed list of valid field names - no UDFs yet.

        FROM      fully qualified table name with path and extention. By default 
                  DBFCDX driver is used, but to use another driver prefix the 
                  table name with driver and "|", like:
                        dbfcdx|c:\harbour\tests\test.dbf
                  This must be the 2nd component of the statement.

        INTO      fully qualified table name with path and extention where 
                  results will be deposited. DBFCDX is used for this purpose.

        ORDER BY  a comma separated list of field names contained in the result
                  set. Keyword "-desc" can be post-fixed with a fieldname to 
                  present in descending order. In example statement as above 
                  it is represented as - age-desc,state - where the whole result 
                  is sorted descending on age first, then within each age group
                  state is sorted ascending.

        WHERE     This must be the last component of the statement.
                  The only operator supported for multiple conditions is 
                  "AND" only, like: age > 90 and last = 'Thomas'.
                  The supported operators within a single condition are 
                  >=, <=, !=, <>, =, <, >. 

                  A condition has 3 components
                  //
                  1. FieldName - must be present in the table
                  2. Operator  - one of the >=, <=, !=, <>, =, <, >
                  3. Value     - string 'Thomas', numeric 90.0, date '2016-12-02'

                  a '=' condition is looked for if any index starting with its 
                  FieldName is available or not. If available, then index order 
                  is set to it and seek is performed with Value part which 
                  greately enhances the speed.

    ; You can test it by simply placing the above SQL statement in a function 
      and just run it in console mode, assuming that test.dbf actually resides
      where it is pointed to.

      FUNCTION __test()

         SELECT first,last,age,state FROM c:\harbour\tests\test.dbf ;
         ORDER BY age-desc,state WHERE age>60

         RETURN NIL 

2016-11-24 11:50 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r438)
  * hbxbp/hbxbp.hbp
    - Removed some parts which are now contained in HbQtWidgets.

  * hbxbp/hbxbp.hbx
    * Regenerated.

  * hbide/editor.prg
  * hbide/main.prg
  * hbide/hbide.hbp

  * hbqtwidgets/hbqtwidgets.hbx
    * Regenerated.

  * hbqtwidgets/alert.prg
    + Added: HbQtFetchString( oParent, cDftText, cWhat, cTitle )
             HbQtFetchInteger( oParent, nDftInteger, nMin, nMax, cWhat, cTitle )

  * hbqtwidgets/editor.prg
    + Underwent a major overhaul. Now a fully functional, features rich 
      HbQtEditor can be initiated with a single call like:

      oEditor := HbQtEditor():new( [oHbqPlainTextEdit], [cTheme] ):create()

      oEditor then have almost everything a HbIDE contained editor has, viz., 
      syntax-hilighting, code formatting, cut, copy, paste, undo, redo, column 
      copy and paste, a very unique context toolbar which can be placed anywhere
      inside the editing window, horizontally or verically, and can be called 
      anytime anywhere with right-click. In a nutshell, this editor can serve 
      many of programmers needs. Note that it does not implement traditional 
      toolbars as such ( except for the right-click context toolbar ).
      All actions are carried by keyboard. 

      Actions available with keyboard:

      Ctrl_A    Select All
      Ctrl_C    Copy Selection
      Ctrl_V    Paste Selection 
      Ctrl_X    Copy Selection and Cut
      Ctrl_Z    Undo
      Ctrl_R    Redo
      Ctrl_F    Ask for serach string and find it - from current cursor position
      Ctrl_N    Continue search of last find downward
      Alt_N     Continue search of last find upward
      Ctrl_G    Ask for line number to jump at
      Ctrl_D    Duplicate current line
      Ctrl_Del  Delete current line 
      Ctrl_Up   Move current line one line up
      Ctrl_Down Moce current line one line down.
      Ctrl_P    Print preview
      Ctrl_L    Jump to last editing position

      Actions available in right-click context toolbar:
               
      1         Change selection mode - stream to column or vice versa
      2         Convert selection to upper case
      3         Convert selection to lower case
      4         Convert selection to invert case
      5         Comment out block
      6         Comment out stream
      7         Indent selection to the right
      8         Indent selection to the left
      9         Convert single quotes to double
      10        Convert double quotes to single
      11        Stringify selection
      12        Align column selection to...
      13        Toggle toolbar orintation
      14        Hide toolbar - bring it back with right-click

      Context toolbar is opened exactly at location you right-click in the 
      editor. The location can be changed just by right-clicking anywhere
      giving you the flexibility to hook it at least disturbing corner. 
      Once displayed, it stays there until you hide it with right-most 
      "X" icon.

  * hbqtwidgets/getlist.prg
    % Minor.

  * hbqtwidgets/toolbar.prg
    + Restructured and enhanced HbQtToolbar class.

  * hbqtwidgets/misc.prg
    + Added Functions to create proprietory event loop for any top level widget.

      HbQtExit( cUnique, lExit, lDelete )
      HbQtExec( cUnique )
      //
         cUnique := __hbqtUniqueString( oWnd:objectName() )
         oWnd:connect( QEvent_Close, {|| HbQtExit( cUnique ) } )
         ...
         ...
         oWnd:show()
         HbQtExec( cUnique )
         oWnd:setParent( QWidget() )
         oWnd := nil 
         RETURN 
      //
      __hbqtUniqueString( cBaseStr )
      __hbqtTreeFindNode( oNode, cText )
      __hbqtTreeCollapseAll( oNode, lDirectChildrenOnly )
      __hbqtTreeExpandAll( oNode, lDirectChildrenOnly )
      __hbqtExecPopup( aOptions, oPoint )

      Please look for the implementation in scripts.prg.

  * hbqtwidgets/hbqtbrowse.prg
    + HbQtBrowseDB( nTop, nLeft, nBottom, nRight, hConfig )

      A GUI replacement for Clipper Browse() function. The function creates
      a separate window displaying the browser and deploys its own even loop.
      This function consumes HbQtExit()/HbQtExec() functions and demonstrates
      its powerful usage. You can call this function for many tables 
      simultaneously.

  * hbqtwidgets/hbqtdbu.prg
    % Minor.

  + hbqtwidgets/hilighter.prg
    + Added class HbQtHilighter()
       Pulled from HbIDE but without user interface. Implements only default 
       themes, viz., Bare Minimum, City Lights, Sand Storm, Pritpal's Favourite
       Classical, Evening Glamour.

  + hbqtwidgets/scripts.ui
  + hbqtwidgets/scripts.prg
    + Added: class HbQtScripts() - An interface to create, organize, manage 
      and run Harbour scripts. The component is implemnted to be callable 
      within an applcation via a single line call.

      oScripts := HbQtScripts():new():create( oParent )

      If oParent == nil then a top-level widget is presented. 
      If oParent is passed then make sure that no layout is applied to it.
      Alternatively you can provide a container yourself, like,
      
      oMainWindow:setCentralWidget( oScripts:widget() )
      OR
      oStackedWidget:addWidget( oScripts:widget() )
      OR 
      oLayout:addWidget( oScripts:widget() )
      

      The interface is divided into four sections. 

      Top    - A slim layout containing following elements:

        1  Name of the script file on disk - "new..." if none is loaded
        2  CheckBox for compiler switch -w3 - default checked 
        3  CheckBox for compiler switch -es2 - default checked
        4  LineEdit to provide other compiler switches; prefixed by "-" 
           and separated by space.
        5  LineEdit to provide include paths; a space separated list of 
           paths but without "-i" prefix. Run component adds "-i" in front 
           of each path.

      Left   - A tree widget to manage scripts. Bottom of tree widget contains 
               actions to manage the tree, viz., expand/collapse all/soft. 
               Tree widget also implements context menu with right-click.

      Right  - A fully loaded source editor - HbQtEditor(). Source contained
               in the editor is RUN as script. Please read above various 
               actions available in the editor.

      Middle - A thin, vertical toolbar containing following actions:

        1  Open [close] Left Pane   
            Can be clicked to close or open left pane.

        2  Load Script  
            Presents a file-open dialog. When invoked first time, navigation 
            points to executable's root folder. All subsequent openings, either 
            to open or save files remember and navigate to last folder.
            Scripts of type .prg or .hb can be opened. An entry into left-pane
            Scripts tree is recorded in the "Default" section or group which 
            you can arrange to your liking by dragging and dropping in 
            required section. The contents of the script file are loaded in 
            right-pane HbQtEditor. You are free to edit / run / and save.

        3  New Script
            Clears the contents of HbQtEditor and a FUNCTION __test() is 
            deposited in the editor. Obiviously name of the buffer is displayed 
            as "new..." on the top-left element. You are free to 
            edit / run / and save ( with a valid name ).

        4  Save Scripts
            Presents a Save File dialog if it is a "new..." script. Otherwise 
            saves the script to already loaded name just like you would press
            Ctrl_S in the editor.

        5  Run Console Scripts
            Script engine is divided into two modes, console and GUI. Console 
            mode is executed in a threaded environment and hence is the safest. 
            A WVG console is fired on Windows and TRM on *nixes.            

        6  Run GUI Scripts
            This is a tricky part as HbQt cannot be executed in threaded mode.
            You would need to respect certain constructs as are employed in 
            hbqtwidgets/hbqtbrowse/HbQtBrowseDB() function. Mainly the whole 
            point involves application's and local event loop. Also you 
            can run plain vanilla scripts - no .ui integration yet. So 
            somewhat it is a limited implementation. Many of the 
            hbqtwidgets/tests/*.prg are working though, with some changes, 
            about to be committed next.

        7  Add Scripts Group
            Offers an input dialog to provide a Group name which will be added 
            as a top level node in the left-pane scripts tree. Then you are free 
            to organize it whereever you want.

        8  Restore Scripts View
            Restrores the entire environment of HbQtScripts from a 
            .hsv ( Harbour's Scripts View ) which has been saved via next action.
            Opens a File Open dialog to select a scripts. Read below what it 
            contains. When a new environment is loaded, all elements are 
            refreshed, current HbQtEditor contents are cleared, and a "new..."
            buffer is restored.

        9  Save Scripts View
            Saves the entire environment of HbQtScripts contents which include:
             a) Compiler switches
             b) Include paths
             c) The entire contents of Scripts Tree
             The environment is saved as a .hsv file in JSON format.
      
  * hbqtwidgets/hbqtwidgets.hbp
    + Added: hbqtwidgets.hbx
             hilighter.prg
             scripts.prg
             scripts.ui

  * hbdbu/dbu.prg
    + REQUEST __HB_EXTERN__

      REQUEST __HBEXTERN__HBCT__
      REQUEST __HBEXTERN__HBNF__
      REQUEST __HBEXTERN__HBTIP__
      REQUEST __HBEXTERN__HBNETIO__
      REQUEST __HBEXTERN__HBMXML__
      REQUEST __HBEXTERN__HBMEMIO__
      REQUEST __HBEXTERN__HBMZIP__
      REQUEST __HBEXTERN__HBSMS__
      REQUEST __HBEXTERN__HBTCPIO__
      REQUEST __HBEXTERN__HBZIPARC__

      REQUEST __HBEXTERN__HBQTCORE__
      REQUEST __HBEXTERN__HBQTGUI__
      REQUEST __HBEXTERN__HBXBP__
      REQUEST __HBEXTERN__HBQTWIDGETS__

    + Added: Scripts top-toolbar icon.
    % Rearranged top-toolbar icons and few changed. 
    + Added HbQtScripts. A productivity tool for programmers. A test suit 
       for HbQt developers, especially who have started to look into GUI 
       world. Please read above for the details.

  * hbdbu/dbu.ui
  * hbdbu/hbdbu.hbp
    + Added: -mt switch required for console mode scripting to be flawless.
    + Added: hbnf, hbxbp, gtqtc.hbc. and many other contrib libs.

  ; HbDBU, now onwards, can be used to test your code piece-by-piece. It 
    will be uploaded to SVN in a couple of hours, as a statically linked, 
    stand-alone application, bundelling entire Harbour core, many contribs, 
    QtCore, QtGui and statically linked OpenSSL. 

    For beginners, either on HbQt or core Harbour, this tool can prove to
    be very productive, believe me, and give it a shot.

    Enjoy !

2016-11-23 21:15 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r437)
  * hbqt/qtcore/hbqtcore.hbx
  * hbqt/qtgui/hbqtgui.hbx
    * regenerated.

  + hbqt/qtgui/qth/QTouchDevice.qth
  + hbqt/qtgui/qth/QOpenGLContext.qth
    + Added missing classes needed to link QtGui only module.

  * hbqt/qtgui/qth/QTouchEvent.qth
    - Commented-out manually written one class method which was breaking
      modularity of QtGui.

  * hbqt/qtgui/qth/QSound.qth
    % Prepared to be compiled in QtGui namespace until v 4.9.

  * hbqt/qtgui/qth/filelist.hbm
    + Added new classes.

  + hbqt/qtmultimedia/qth/QSound.qth
  * hbqt/qtmultimedia/qth/filelist.hbm
    + Added QSound.qth needed for this namespace after v 4.9.

  * hbqt/qtpositioning/hbqtpositioning.hbc
    % Fixed to be linkable in static mode.

2016-11-23 21:01 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r436)
  + hbqtwidgets/resources/align_at.png
  + hbqtwidgets/resources/b_1.png
  + hbqtwidgets/resources/b_10.png
  + hbqtwidgets/resources/b_11.png
  + hbqtwidgets/resources/b_12.png
  + hbqtwidgets/resources/b_13.png
  + hbqtwidgets/resources/b_14.png
  + hbqtwidgets/resources/b_15.png
  + hbqtwidgets/resources/b_16.png
  + hbqtwidgets/resources/b_17.png
  + hbqtwidgets/resources/b_18.png
  + hbqtwidgets/resources/b_19.png
  + hbqtwidgets/resources/b_2.png
  + hbqtwidgets/resources/b_20.png
  + hbqtwidgets/resources/b_3.png
  + hbqtwidgets/resources/b_4.png
  + hbqtwidgets/resources/b_5.png
  + hbqtwidgets/resources/b_6.png
  + hbqtwidgets/resources/b_7.png
  + hbqtwidgets/resources/b_8.png
  + hbqtwidgets/resources/b_9.png
  + hbqtwidgets/resources/blockcomment.png
  + hbqtwidgets/resources/blockindentl.png
  + hbqtwidgets/resources/blockindentr.png
  + hbqtwidgets/resources/build-run-48.png
  + hbqtwidgets/resources/build-run.png
  + hbqtwidgets/resources/console.png
  + hbqtwidgets/resources/cut.png
  + hbqtwidgets/resources/dashboard-1.png
  + hbqtwidgets/resources/dashboard-2.png
  + hbqtwidgets/resources/dashboard.png
  + hbqtwidgets/resources/dbl2sglquote.png
  + hbqtwidgets/resources/down-2.png
  + hbqtwidgets/resources/exit.png
  + hbqtwidgets/resources/help-1.png
  + hbqtwidgets/resources/invertcase.png
  + hbqtwidgets/resources/n-0.png
  + hbqtwidgets/resources/n-1.png
  + hbqtwidgets/resources/n-2.png
  + hbqtwidgets/resources/n-3.png
  + hbqtwidgets/resources/n-4.png
  + hbqtwidgets/resources/n-5.png
  + hbqtwidgets/resources/n-6.png
  + hbqtwidgets/resources/n-7.png
  + hbqtwidgets/resources/n-8.png
  + hbqtwidgets/resources/n-9.png
  + hbqtwidgets/resources/new-2.png
  + hbqtwidgets/resources/online.png
  + hbqtwidgets/resources/paste.png
  + hbqtwidgets/resources/plus-16.png
  + hbqtwidgets/resources/plus-3.png
  + hbqtwidgets/resources/redo.png
  + hbqtwidgets/resources/run-2.png
  + hbqtwidgets/resources/run-3.png
  + hbqtwidgets/resources/run-4.png
  + hbqtwidgets/resources/run-script.png
  + hbqtwidgets/resources/run.png
  + hbqtwidgets/resources/settings-down.png
  + hbqtwidgets/resources/settings-up.png
  + hbqtwidgets/resources/sgl2dblquote.png
  + hbqtwidgets/resources/stream.png
  + hbqtwidgets/resources/streamcomment.png
  + hbqtwidgets/resources/stringify.png
  + hbqtwidgets/resources/tolower.png
  + hbqtwidgets/resources/toupper.png
  + hbqtwidgets/resources/undo.png
  + hbqtwidgets/resources/up-2.png
  + hbqtwidgets/scripts.prg

  * hbqtwidgets/hbqtwidgets.qrc
    + Transferred many icons from hbide and hbdbu to hbqtwidgets.
      Idea is to keep a single resource repository so that every
      application can benefit.

2016-11-15 17:08 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r435)
  + hbqt/qtdbus
  + hbqt/qtdbus/doc
  + hbqt/qtdbus/doc/en
  + hbqt/qtdbus/hbqt_init.cpp
  + hbqt/qtdbus/hbqtdbus.ch
  + hbqt/qtdbus/hbqtdbus.hbc
  + hbqt/qtdbus/hbqtdbus.hbm
  + hbqt/qtdbus/hbqtdbus.hbp
  + hbqt/qtdbus/hbqtdbus.hbx
  + hbqt/qtdbus/hbqtdbuss.hbp
  + hbqt/qtdbus/qth
  + hbqt/qtdbus/qth/filelist.hbm
  + hbqt/qtdbus/qth/QDBusAbstractAdaptor.qth
  + hbqt/qtdbus/qth/QDBusAbstractInterface.qth
  + hbqt/qtdbus/qth/QDBusArgument.qth
  + hbqt/qtdbus/qth/QDBusConnection.qth
  + hbqt/qtdbus/qth/QDBusConnectionInterface.qth
  + hbqt/qtdbus/qth/QDBusContext.qth
  + hbqt/qtdbus/qth/QDBusError.qth
  + hbqt/qtdbus/qth/QDBusInterface.qth
  + hbqt/qtdbus/qth/QDBusMessage.qth
  + hbqt/qtdbus/qth/QDBusObjectPath.qth
  + hbqt/qtdbus/qth/QDBusPendingCall.qth
  + hbqt/qtdbus/qth/QDBusPendingCallWatcher.qth
  + hbqt/qtdbus/qth/QDBusPendingReply.qth
  + hbqt/qtdbus/qth/QDBusReply.qth
  + hbqt/qtdbus/qth/QDBusServer.qth
  + hbqt/qtdbus/qth/QDBusServiceWatcher.qth
  + hbqt/qtdbus/qth/QDBusSignature.qth
  + hbqt/qtdbus/qth/QDBusUnixFileDescriptor.qth
  + hbqt/qtdbus/qth/QDBusVariant.qth
  + hbqt/hbqtdbus.hbc
    + Added QtDBus module (Since Qt 4.2). 
       The module is valid for Unix distros and hence it is 
       not added to the default builds. You have to add it 
       in QtContribs-N.hbp manually. All classes are compiled 
       without errors ( except for a hack I had to deploy 
       in Qt's QDBusConnect.h header )( from Windows compilation
       perspective only ). So hope that these will compile 
       on unix systems without problems.

  * hbqt/hbqt_common.hbc
  * hbqt/qtcore/hbqt_bind.cpp
  * hbqt/qtcore/hbqtcore.hbc
    % Minors.

  + hbqt/qtcore/qth/QSharedMemory.qth
  * hbqt/qtcore/qth/filelist.hbm
    + Added: another very useful class QSharedMemory.
       Implementation can be viewed in hbdbu/dbu.prg.
   
  * hbqt/qtgui/hbqt_version.ch
    % Version Bump.

  * hbqt/qtgui/hbqtgui.ch
    + Added: constants for QtDBus module and QSharedMemory class.

  * hbqt/qtgui/qth/QDirModel.qth
    % Minor.

  + hbqtwidgets/resources/tree-collapse-all.png
  + hbqtwidgets/resources/tree-collapse-soft.png
  + hbqtwidgets/resources/tree-expand-all.png
  + hbqtwidgets/resources/tree-expand-soft.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added: few more images used in HbDBU interface.

  * hbqtwidgets/dashboard.prg
  * hbqtwidgets/hbqtdbu.prg
  * hbqtwidgets/misc.prg

  + hbdbu/resources/online.png
  * hbdbu/dbu.prg
  * hbdbu/dbu.qrc
  * hbdbu/dbu.ui
  * hbdbu/hbdbu.hbp
  * hbdbu/mydbu.hbp
    + Added following features in HbDBU:
      1 Tables TreeView - Added 4 icons on the top of left-pane.
         a. Collapse Soft - Collapses all "Driver" nodes.
         b. Collapse All - Collapses "Paths" nodes in addition to "Driver" nodes
         c. Expand Soft - Expands only "Driver" nodes.
         d. Expand All - Expands "paths" nodes as well.

      2 By default all nodes of tables tree are shown expanded when invoked.

      3 Right-clicking on "path" node will open FileOpen dialog with all 
         the .dbfs present in the folder. A feature request by Massimo.

    % <Save Env> button on the top-toolbar now saves settings in 
       user-defined *.dbu files. Before the settings were saved in file 
       which was used to invoke HbDBU.

    + <Rest Env> has undergone a fundamental change. This now invokes 
       another copy of HbDBU with environment picked from selected file.
       This way you can have multiple HbDBU's on screen with different 
       settings. This is a productivity feature. Before, the selected environment
       was merged with the current one.

    + Added <Online> icon on the top-toolbar which opens up the Windows only 
       interface which implements "shell.explorer.2" activex via 
       GtWVG class WvgActiveX(). The interface shows up a Harbour help 
       links on the left pane and web-browser on the right. By default 
       link for HbDBU ( http://qtcontribs.sourceforge.net ) is activated.
       The complete help for HbDBU is scheduled for next few days. Daily 
       I will be updating the site. Keep on visiting as needed.
       Also links of Harbour/Clipper/Clipper Tools ( recently revamped 
       by Viktor ) are also included. Allow scripts to run in IE for 
       flawless experience.

       This feature, in my opinion, comes handy for developers. I resorted to 
       GtWVG because Qt has discontinued QtWebkit and QWebView implementation 
       is well beyond our scope.

     + Implemented single HbDBU instance (Server) to accept multiple .dbf(s) 
        when a .dbf is double-clicked in the explorer, and extention .dbf has 
        been assigned to application HbDBU. Before, every invocation was opening 
        a separate copy of HbDBU. Class QSharedMemory() has been used to 
        implement this feature. Examine dbu.prg for details.

2016-11-08 17:55 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r434)
  * hbqt/qtbluetooth/doc/en/class_qbluetoothaddress.txt
  * hbqt/qtbluetooth/doc/en/class_qbluetoothdevicediscoveryagent.txt
  * hbqt/qtbluetooth/doc/en/class_qbluetoothdeviceinfo.txt
  * hbqt/qtbluetooth/doc/en/class_qbluetoothhostinfo.txt
  * hbqt/qtbluetooth/doc/en/class_qbluetoothlocaldevice.txt
  * hbqt/qtbluetooth/doc/en/class_qbluetoothserver.txt
  * hbqt/qtbluetooth/doc/en/class_qbluetoothservicediscoveryagent.txt
  * hbqt/qtbluetooth/doc/en/class_qbluetoothserviceinfo.txt
  * hbqt/qtbluetooth/doc/en/class_qbluetoothsocket.txt
  * hbqt/qtbluetooth/doc/en/class_qbluetoothtransfermanager.txt
  * hbqt/qtbluetooth/doc/en/class_qbluetoothtransferreply.txt
  * hbqt/qtbluetooth/doc/en/class_qbluetoothtransferrequest.txt
  * hbqt/qtbluetooth/doc/en/class_qbluetoothuuid.txt

  * hbqt/qtpositioning/doc/en/class_qgeoaddress.txt
  * hbqt/qtpositioning/doc/en/class_qgeoareamonitorinfo.txt
  * hbqt/qtpositioning/doc/en/class_qgeoareamonitorsource.txt
  * hbqt/qtpositioning/doc/en/class_qgeocircle.txt
  * hbqt/qtpositioning/doc/en/class_qgeocoordinate.txt
  * hbqt/qtpositioning/doc/en/class_qgeolocation.txt
  * hbqt/qtpositioning/doc/en/class_qgeopositioninfo.txt
  * hbqt/qtpositioning/doc/en/class_qgeopositioninfosource.txt
  * hbqt/qtpositioning/doc/en/class_qgeopositioninfosourcefactory.txt
  * hbqt/qtpositioning/doc/en/class_qgeorectangle.txt
  * hbqt/qtpositioning/doc/en/class_qgeosatelliteinfo.txt
  * hbqt/qtpositioning/doc/en/class_qgeosatelliteinfosource.txt
  * hbqt/qtpositioning/doc/en/class_qgeoshape.txt
  * hbqt/qtpositioning/doc/en/class_qnmeapositioninfosource.txt

  * hbqt/qtwebsockets/doc/en/class_qmaskgenerator.txt
  * hbqt/qtwebsockets/doc/en/class_qwebsocket.txt
  * hbqt/qtwebsockets/doc/en/class_qwebsocketcorsauthenticator.txt
  * hbqt/qtwebsockets/doc/en/class_qwebsocketserver.txt
    % Auto updated.

  * hbqt/qtgui/hbqt_version.ch
    % Version Bump.

  * hbqt/qtcore/qth/QEventLoop.qth
  * hbqt/qtgui/qth/QBoxLayout.qth
  * hbqt/qtgui/qth/QGridLayout.qth
  * hbqt/qtgui/qth/QHBoxLayout.qth
  * hbqt/qtgui/qth/QLayout.qth
  * hbqt/qtgui/qth/QToolBar.qth
  * hbqt/qtgui/qth/QVBoxLayout.qth
  * hbqt/qtgui/qth/QWidgetAction.qth
  * hbqt/qtquick/qth/QQuickWidget.qth
    ! Fixed: to be usable WITHOUT cppmm. Dynamic as well as Static builds.

  * hbqt/hbmk2_qt.hb
    + Introduced Q_NULLPTR macro instead of NULL.
       This macro is backward compatible with Qt 4.x as well but this commit 
       has it on for Qt 5.7+ versions.

  * hbqt/qtcharts/hbqtcharts.hbx
    % Missing prototypes.

  * hbqt/qtcore/hbqt_bind.cpp
    % Few debugging change plus introducing Q_NULLPTR.

  * hbqt/qtcore/hbqt_destroyer.cpp
    % Introduced VM protection.

  * hbqt/qtcore/hbqt_pointer.cpp
    + Added: commented-out plugins for QtMultimedia needed for static builds.

  * hbqt/hbqt_common.hbc
    - Changed not to use hbcppmm implementation.
       Now Qt's own overloads are requested instead.
       The protocol is function for both Dynamic and Static linking.

  * hbqt/qtcharts/hbqtcharts.hbc
  * hbqt/qtcore/hbqtcore.hbc
  * hbqt/qtmultimedia/hbqtmultimedia.hbc
  * hbqt/qtqml/hbqtqml.hbc
    + Prepared for Static builds based on Mingw 5.3 shipped with Qt 5.7.

  * hbqt/qtnetwork/qth/filelist.hbm
    - Guarded some SSL related methods not available in static builds.

  * hbqtwidgets/editor.prg
  * hbqtwidgets/getsys.prg
    * Minor.

  * hbide/actions.prg
  * hbide/debugger.prg
  * hbide/docks.prg
  * hbide/editor.prg
  * hbide/findreplace.prg
  * hbide/hbqtoolbar.prg
  * hbide/main.prg
  * hbide/projectwizard.prg
  * hbide/tools.prg
  * hbide/uisrcmanager.prg
    % Fixed to exit HbIDE promptly. Only modified source tabs are initiated.

    % Changed: Find & Replace dialog behavior - Whenever CTRL+F is used,
       the radio button <EntireFile> is checked. It means first time 
       search is initiated from begining of file.

    % Initiate QToolButton() with a parent to avoid unwanted gpf on exits.

  * qtcontribs57.hbp
    - Removed QtDesigner module.

2016-10-29 11:03 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r433)
  * hbqt/qtgui/hbqt_version.ch
    % Version Bump.

  * hbide/editor.prg
  * hbide/main.prg
  * hbqtwidgets/editor.prg
    % Changed behavior of main-toolbar icon "Print".
     Now, if some text is found selected in the source is sent to the 
     print preview instead of entire source. This is a two-phase 
     implementation: 
     1. A new editor window is opened with selected text inside.
     2. Print Preview is called automatically for the contents of such window.
     Editor window opened stays on top of the editor window whcih you need 
     to close explicitly. Until closed you can agian call Print Preview 
     by pressing Ctrl+P.

     A feature request by Massimo.

2016-10-28 22:10 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r432)
  * hbqt/qtgui/hbqt_version.ch
    % Version Bump.

  * hbqtwidgets/getsys.prg
    ! Fixed: Navigation of QGETs with Tab/Sh+Tab key with validations.
     Note that navigation with Tab keys will not work if Gets are 
     initiated directly via class - like: oGet := HbQtGet():new().
     STATIC FUNCTION OOPLayout( oMain ) of validator.prg is one such 
     example. In all other cases, tab behaves exactly like RETURN.

2016-10-28 19:07 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r431)
  * hbide/actions.prg
    % Commented out IdeREPORTS icon and menu entry - Pointed by Massimo.

  * hbide/docks.prg
    + Added QProgressBar as one of the components of HbIDE's statusbar.

  * hbide/findreplace.prg
    % Changed the behavior of search starting from current cursor position 
     instead of from begining of file, if something was typed in the search 
     test edit line. 

    - Removed "Not Found" dialog if a serach string could not been found 
       via CTRL+F. Instead, not found string is displayed in 
       "Find:" statusbar panel, in bold, red, strike-out format.

  * hbide/main.prg
    + Added DATA member - oProgBar.

  * hbide/object.prg
    + Made oProBar accessible throught-out HbIDE classes.

  * hbide/projmanager.prg
    + Implemented to show up the progessbar in statusbar when linking 
     or compilation is in progress.

  * hbqt/qtcore/hbqt_pointer.cpp
    ! Fixed: correct plugin names for static linking.

  * hbqt/qtcore/hbqtcore.hbc
    + Readied for static linking.

  * hbqt/qtgui/hbqt_errorsys.prg
    % Implemented patch provided by Luigi - not tested. Please report.

  * hbqt/qtgui/hbqt_init.cpp
    + Added __HBQTLIBRARYPATH() call before QApplication() is initiated.
     Somehow it went missing in some commit.

  * hbqt/qtgui/hbqt_version.ch
    % Version bump.

  * hbqt/qtgui/hbqtgui.ch
    + Added constants provided by Luigi.

  * hbqt/qtgui/qth/QColor.qth
  * hbqt/qtgui/qth/QListWidgetItem.qth
  * hbqt/qtgui/qth/QTextDocumentWriter.qth
  * hbqt/qtquick/qth/QQuickWidget.qth
    + Added methods introduced by Qt's next versions. Patch provided by Luigi.

  * hbqtwidgets/getsys.prg
    ! Fixed a typo resulting from copy/paste.

2016-10-20 12:23 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r430)
  * hbqt/qtgui/hbqt_version.ch
    % Version Updated.

2016-10-19 18:11 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r429)
  + qtcontribs57.hbp
    + Project file to compile Qt 5.7.

2016-10-19 17:48 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r428)
  + hbqt/qtcharts
  + hbqt/qtcharts/doc
  + hbqt/qtcharts/doc/en
  + hbqt/qtcharts/hbqt_init.cpp
  + hbqt/qtcharts/hbqtcharts.ch
  + hbqt/qtcharts/hbqtcharts.hbc
  + hbqt/qtcharts/hbqtcharts.hbm
  + hbqt/qtcharts/hbqtcharts.hbp
  + hbqt/qtcharts/hbqtcharts.hbx
  + hbqt/qtcharts/hbqtchartss.hbp
  + hbqt/qtcharts/qth
  + hbqt/qtcharts/qth/filelist.hbm
  + hbqt/qtcharts/qth/QAbstractAxis.qth
  + hbqt/qtcharts/qth/QAbstractBarSeries.qth
  + hbqt/qtcharts/qth/QAbstractSeries.qth
  + hbqt/qtcharts/qth/QAreaLegendMarker.qth
  + hbqt/qtcharts/qth/QAreaSeries.qth
  + hbqt/qtcharts/qth/QBarCategoryAxis.qth
  + hbqt/qtcharts/qth/QBarLegendMarker.qth
  + hbqt/qtcharts/qth/QBarModelMapper.qth
  + hbqt/qtcharts/qth/QBarSeries.qth
  + hbqt/qtcharts/qth/QBarSet.qth
  + hbqt/qtcharts/qth/QBoxPlotModelMapper.qth
  + hbqt/qtcharts/qth/QBoxPlotSeries.qth
  + hbqt/qtcharts/qth/QBoxSet.qth
  + hbqt/qtcharts/qth/QCategoryAxis.qth
  + hbqt/qtcharts/qth/QChart.qth
  + hbqt/qtcharts/qth/QChartView.qth
  + hbqt/qtcharts/qth/QDateTimeAxis.qth
  + hbqt/qtcharts/qth/QHBarModelMapper.qth
  + hbqt/qtcharts/qth/QHorizontalBarSeries.qth
  + hbqt/qtcharts/qth/QHorizontalPercentBarSeries.qth
  + hbqt/qtcharts/qth/QHorizontalStackedBarSeries.qth
  + hbqt/qtcharts/qth/QHPieModelMapper.qth
  + hbqt/qtcharts/qth/QHXYModelMapper.qth
  + hbqt/qtcharts/qth/QLegend.qth
  + hbqt/qtcharts/qth/QLegendMarker.qth
  + hbqt/qtcharts/qth/QLineSeries.qth
  + hbqt/qtcharts/qth/QLogValueAxis.qth
  + hbqt/qtcharts/qth/QPercentBarSeries.qth
  + hbqt/qtcharts/qth/QPieLegendMarker.qth
  + hbqt/qtcharts/qth/QPieModelMapper.qth
  + hbqt/qtcharts/qth/QPieSeries.qth
  + hbqt/qtcharts/qth/QPieSlice.qth
  + hbqt/qtcharts/qth/QPolarChart.qth
  + hbqt/qtcharts/qth/QScatterSeries.qth
  + hbqt/qtcharts/qth/QSplineSeries.qth
  + hbqt/qtcharts/qth/QStackedBarSeries.qth
  + hbqt/qtcharts/qth/QValueAxis.qth
  + hbqt/qtcharts/qth/QVBarModelMapper.qth
  + hbqt/qtcharts/qth/QVBoxPlotModelMapper.qth
  + hbqt/qtcharts/qth/QVPieModelMapper.qth
  + hbqt/qtcharts/qth/QVXYModelMapper.qth
  + hbqt/qtcharts/qth/QXYLegendMarker.qth
  + hbqt/qtcharts/qth/QXYModelMapper.qth
  + hbqt/qtcharts/qth/QXYSeries.qth
  
  + hbqt/hbqtcharts.hbc
    + Initial commit of QtCharts module introduced in Qt 5.7.
	
  * hbqt/qtgui/hbqtgui.ch
    + Many constants used throughout in QtChart module.
	
  + hbqt/tests/barchart.prg
    + QtCharts module based example application. 
	  Code is exact replica of Simple BarChart Example contained in 
	  Qt 5.7 distribution.
	  Link and run as: hbmk2 barchart hbqtcharts.hbc -run

2016-10-19 17:16 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r427)
  * debug/dbgdop.c
    % Commented-out for only ver-old xHarbour versions.
	
  * hbdbu/hbdbu.hbp
    % Minor.
	
  * hbqt/hbmk2_qt.hb
    + Added neccessary modifications to honor Qt 5.7.
    % Copyright Bumped.
	% doc/en/*.txt to have correct Qt documentation site link.
	
  * hbqt/qtcore/hbqt.h
	+ #include <QtCore/qmath.h>
  * hbqt/qtcore/hbqt_init.cpp
    + Added few more signal implementation required for new 
	  Qt 5.7 introduced modules.
  * hbqt/qtcore/hbqt_pointer.cpp
    + Some experimental code needed for static linking.
  * hbqt/qtcore/hbqtcore.hbc
    ! Fixed library name for static links.
	
  * hbqt/qtgui/hbqt_hbqgraphicsscene.cpp
    % Replaced abs() => qFabs()- Pointed out by Alex - LINUX.
  * hbqt/qtgui/hbqt_init.cpp
    + Added more signal implementation required for new 
	  Qt 5.7 introduced modules.
  * hbqt/qtgui/hbqtgui.hbc
    ! Fixed library name for static links.
	
  * hbqt/qtnetwork/hbqtnetwork.hbc
    ! Fixed library name for static links.
	
  * hbqt/qtnetwork/qth/QNetworkAccessManager.qth
  * hbqt/qtnetwork/qth/QNetworkReply.qth
  * hbqt/qtwebsockets/qth/QWebSocket.qth
  * hbqt/qtwebsockets/qth/QWebSocketServer.qth
    % Fixed for static builds.
  
  * hbqt/qzxing/CameraImageWrapper.cpp
  * hbqt/qzxing/zxing/zxing/ZXing.h
    % Fixed to be compiled for newer mingw versions.
	
  + hbqtwidgets/resources/font-minus.png
  + hbqtwidgets/resources/font-plus.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added: a couple of new resources.
	
  * hbqtwidgets/alert.prg
    % Fixes for HbQtGetSome() implementation.
  * hbqtwidgets/silverlight.prg
    % Some refinements.

2016-10-19 16:36 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r426)
  * hbide/actions.prg
  * hbide/console.prg
  * hbide/docks.prg
  * hbide/edit.prg
  * hbide/editor.prg
  * hbide/environ.prg
  * hbide/findreplace.prg
  * hbide/functions.prg
  * hbide/harbourhelp.prg
  * hbide/home.prg
  * hbide/misc.prg
  * hbide/object.prg
  * hbide/parseexpr.c
  * hbide/parts.prg
  * hbide/plugins.prg
  * hbide/projmanager.prg
  * hbide/requests.ch
  * hbide/saveload.prg
  * hbide/sources.prg
  * hbide/stylesheets.prg
  * hbide/tags.prg
  * hbide/themes.prg
  * hbqt/qscintilla/hbqscintilla.ch
  * hbqt/qscintilla/hbqt_hbqsciscintilla.cpp
  * hbqt/qscintilla/hbqt_hbqsciscintilla.h
  * hbqt/qtbluetooth/hbqtbluetooth.ch
  * hbqt/qtcore/hbqt_bind.cpp
  * hbqt/qtcore/hbqt_destroyer.cpp
  * hbqt/qtcore/hbqt_destroyer.h
  * hbqt/qtcore/hbqt_hbqevents.cpp
  * hbqt/qtcore/hbqt_hbqevents.h
  * hbqt/qtcore/hbqt_hbqslots.cpp
  * hbqt/qtcore/hbqt_hbqslots.h
  * hbqt/qtcore/hbqt_hbqstring.cpp
  * hbqt/qtcore/hbqt_hbqstring.h
  * hbqt/qtcore/hbqtcore.ch
  * hbqt/qtgui/hbqt_flickcharm.cpp
  * hbqt/qtgui/hbqt_flickcharm.h
  * hbqt/qtgui/hbqt_hbqabstractitemmodel.cpp
  * hbqt/qtgui/hbqt_hbqabstractitemmodel.h
  * hbqt/qtgui/hbqt_hbqgraphicsitem.cpp
  * hbqt/qtgui/hbqt_hbqgraphicsitem.h
  * hbqt/qtgui/hbqt_hbqgraphicsscene.h
  * hbqt/qtgui/hbqt_hbqplaintextedit.cpp
  * hbqt/qtgui/hbqt_hbqplaintextedit.h
  * hbqt/qtgui/hbqt_hbqproxystyle.cpp
  * hbqt/qtgui/hbqt_hbqproxystyle.h
  * hbqt/qtgui/hbqt_hbqsyntaxhighlighter.cpp
  * hbqt/qtgui/hbqt_hbqsyntaxhighlighter.h
  * hbqt/qtgui/hbqt_hbqtableview.cpp
  * hbqt/qtgui/hbqt_hbqtableview.h
  * hbqt/qtgui/hbqt_hbqvalidator.cpp
  * hbqt/qtgui/hbqt_hbqvalidator.h
  * hbqt/qtgui/hbqt_utils.cpp
  * hbqt/qtlocation/hbqtlocation.ch
  * hbqt/qtpositioning/hbqtpositioning.ch
  * hbqt/qtsql/hbqtsql.ch
  * hbqt/qtwebkit/hbqtwebkit.ch
  * hbqt/qtwebsockets/hbqtwebsockets.ch
  * hbqt/tests/demoqt.prg
  * hbqtwidgets/editor.prg
  * hbxbp/hbpprocess.prg
  * hbxbp/misc.prg
  * hbxbp/reports.prg
  * hbxbp/sle.prg
  * hbxbp/tests/demoxbp.prg
  * hbxbp/tests/dialogqt.prg
  * hbxbp/tests/wvtqt.prg
  * hbxbp/tests/xbpqtc.prg
    % Copyright Bump.

2016-03-10 13:52 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r425)
  * hbqt/hbmk2_qt.hb
    % Refined Qt major version detection and implementation.
       Forwarded by Luigi, thanks.
    ! Fixed: "\n" was being stripped out in translations effectively 
       denying the use of line breaks in labels, specially of QPushButtons.
    + Added: "Q_UNUSED" in the list of non performing lines in uic->c.

  * hbqt/qtcore/hbqt_bind.cpp
    % Protected code responsible for calling PRG level symbol 
       s_dynsym_DISCONNECT.
    ! Then guraded the whole above code under #if 0 as this code is 
       no longer required under the current parsing engine. 
       this fixes exception errors at application exit for Qt 4.x versions.
       HbIDE runs fine now.
 
       Thanks to Rolf for pointing it out.

  * hbqt/qtcore/hbqt_misc.prg
    - Removed public function Q_UNUSED() as this has been fixed in 
       parsing engine for .ui files.

  * hbqt/qtgui/hbqt_init.cpp
    % Guarded QEvent::PlatformPanel agains Qt's minor versions.
       Detected by Rolf, thanks.

2016-03-05 02:00 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r424)
  * hbide/actions.prg
  * hbide/editor.prg
  * hbqt/hbmk2_qt.hb
  * hbqt/qtcore/hbqt_hbqevents.cpp
  * hbqt/qtcore/hbqt_misc.prg
  * hbqt/qtcore/hbqtcore.hbc
  * hbqt/qtcore/qth/QVariantAnimation.qth
  * hbqt/qtgui/hbqt_hbqabstractitemmodel.cpp
  * hbqt/qtgui/hbqt_hbqgraphicsitem.h
  * hbqt/qtgui/hbqt_hbqgraphicsscene.cpp
  * hbqt/qtgui/hbqt_hbqgraphicsscene.h
  * hbqt/qtgui/hbqt_init.cpp
  * hbqt/qtgui/hbqtgui.hbc
  * hbqt/qtgui/qth/QApplication.qth
  * hbqt/qtgui/qth/QComboBox.qth
  * hbqt/qtgui/qth/QHeaderView.qth
  * hbqt/qtgui/qth/QPrinter.qth
  * hbqt/qtgui/qth/QScrollEvent.qth
  * hbqt/qtgui/qth/QScrollPrepareEvent.qth
  * hbqt/qtgui/qth/QSplitterHandle.qth
  * hbqt/qtgui/qth/QTabBar.qth
  * hbqt/qtgui/qth/QTabWidget.qth
  * hbqt/qtgui/qth/QTextTable.qth
  * hbqt/qtgui/qth/QTextTableCell.qth
  * hbqt/qtnetwork/hbqtnetwork.hbc
  * hbqtwidgets/hbqtbrowse.prg
  * hbqtwidgets/misc.prg
  * hbqtwidgets/tests/browgets.prg
  * hbqtwidgets/tests/composite.hbp
  * hbqtwidgets/tests/validator.prg

  + qtcontribs4.hbp
    + Added new Qt 4.x relevant Harbour project file.

    ; Brought back Qt 4.x compatibility for QtCore, QtGui and QtNetwork modules.
      NOTES:  1. Set environment HB_QT_MAJOR_VER=4.
              2. Set environment HB_USER_PRGFLAGS=-d__HB_QT_MAJOR_VER_4__
              3. Set environment variable HB_BUILD_NAME=-486 (where -486 == QtVer)

              This is the .bat used to compile for any version of Qt:

              @ECHO OFF

              SET HB_QT_MAJOR_VER=4
              SET HB_USER_PRGFLAGS=-d__HB_QT_MAJOR_VER_4__
              SET HB_BUILD_NAME=-486

              SET QT_PATH=C:\Qt486
              SET GW_PATH=C:\Qt550\Tools\mingw492_32

              SET PATH=D:\harbour\bin\win\mingw%HB_BUILD_NAME%;%GW_PATH%\bin;%QT_PATH%\bin;%PATH%

              SET HB_ARCHITECTURE=win
              SET HB_COMPILER=mingw

              SET HB_INSTALL_PREFIX=C:\harbour

              SET HB_WITH_QT=%QT_PATH%\include
              SET HB_QTPATH=%QT_PATH%\bin

              SET HB_USER_CFLAGS=-DHB_LEGACY_TYPES_ON

              SET HB_LEGACY_TYPES_ON=YES
              SET HB_BUILD_CONTRIB_DYN=no
              SET HB_TR_SYSOUT=yes

              :__eof__  Add your build relevant other settings

              Convert above to Linux Script syntax.

      Now onwards compatibility for Qt 4.x will be maintain for base 3 modules.
      HbIDE, HbDBU, and many tests in HbQt and HbQtWidgets are running 
      normally. HbIDE sometimes throughs exception at exit. Every other 
      test app works flawlessly.
      
      Enjoy

2016-13-02 13:59 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r423)
  * hbqt/qtgui/hbqtgui.ch
    + Added: few QTextLength_* constants.

  * hbqt/qtgui/qth/QComboBox.qth
    + Added: currentData() method introduced in Qt 5.2.

  * hbqtwidgets/getsys.prg
    ! Fixed to set buffer data if a list box is clicked with mouse.

2015-11-26 12:50 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r422)
  * hbqt/qtgui/hbqtgui.ch
    + Added: QTextFormat_* and QTextFrameFormat_* constants.

2015-11-26 12:10 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r421)
  + hbqt/qtgui/qth/QTextTable.qth
  + hbqt/qtgui/qth/QTextTableCell.qth
  + hbqt/qtgui/qth/QTextTableCellFormat.qth
  * hbqt/qtgui/qth/filelist.hbm
    + Added: QTextTable* classes.

  * hbqt/qtcore/hbqtcore.ch
    + Added: QLocale_AnyLanguage.
  * hbqt/qtgui/hbqtgui.ch
    + Added: QStandardPath_* contants introduced in latest Qt version(s).

2015-11-13 15:20 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r420)
  * hbqt/qtcore/qth/QDateTime.qth
    ! Fixed: wrong parameter index.

  + hbqt/qtcore/qth/QJsonArray.qth
  + hbqt/qtcore/qth/QJsonDocument.qth
  + hbqt/qtcore/qth/QJsonObject.qth
  + hbqt/qtcore/qth/QJsonParseError.qth
  + hbqt/qtcore/qth/QJsonValue.qth
  * hbqt/qtcore/qth/filelist.hbm
    + Added: new QJson* classes.

  * hbqt/hbmk2_qt.hb
    % Applied patch provided by Francesco.
      Tested on Windows and it does not break anything. Hope on *nixes
      it will work as intended.

  * hbqt/hbqt_common.hbc
  * hbqt/hbqt_common.hbm
    + Applied patches from Luigi and Francesco, all relevant to *nixes.
       Please verify.

  * hbqt/qtgui/hbqtgui.ch
    + Added QCalenderWidget related constants.
    + Added: QJson* related constants.

  * hbqt/qzxing/hbqt_qabstractvideosurface.h
    ! Fixed: QtMultiMedia => QtMultimedia, a case sensitivity issue on nixes.

  * hbqtwidgets/hbqtbrowse.prg
    ! Fixed: calculation of column heading width in pixels.
    ! Fixed: HbQtBrowse:manageMouseRelease( oMouseEvent ) where a button press 
       has been called wrongly.

  ; All above modifications are requested or forwarded by our esteemed users. 
     I have tested them just casually. Please report back if you find anomalies.

2015-09-08 15:13 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r419)
  * hbide/sources.prg
    % Changed to present .PRG as default source files instead of *.* in 
       "Source Selection" dialog.
  * hbqtwidgets/editor.prg
    ! Fixed to maintain the indent if ENTER is pressed at the begining 
       of the line.

2015-08-04 16:22 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r418)
  * hbqt/hbmk2_qt.hb
    ! Reverted an unconscious change which broke direct object inheritance.

2015-07-31 16:05 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r417)
  + hbqtqmlparts

  + hbqtqmlparts/resources
  + hbqtqmlparts/resources/png
  + hbqtqmlparts/resources/png/left-32.png
  + hbqtqmlparts/resources/png/refresh-32.png
  + hbqtqmlparts/resources/png/right-32.png
  + hbqtqmlparts/resources/png/stop-32.png
  + hbqtqmlparts/resources/qml
  + hbqtqmlparts/resources/qml/BarcodeReader.qml
  + hbqtqmlparts/resources/qml/WebView.qml
  + hbqtqmlparts/resources/wav
  + hbqtqmlparts/resources/wav/barcode-beep.wav
  + hbqtqmlparts/resources/wav/camera-flash.wav

  + hbqtqmlparts/misc.prg
  + hbqtqmlparts/qmlbridge.prg
  + hbqtqmlparts/barcodereader.prg
  + hbqtqmlparts/webview.prg

  + hbqtqmlparts/hbqtqmlparts.hbc
  + hbqtqmlparts/hbqtqmlparts.hbp
  + hbqtqmlparts/hbqtqmlparts.hbx
  + hbqtqmlparts/hbqtqmlparts.qrc

  + hbqtqmlparts/tests
  + hbqtqmlparts/tests/demobarcodereader.prg
  + hbqtqmlparts/tests/demowebview.prg
  + hbqtqmlparts/tests/hbmk.hbm

  + qtcontribs.hbp
    + Added: hbqtqmlparts/hbqtqmlparts.hbp

    Initial commit of Harbour engine for QML manipulation.

    QML is the next-generation offering by Qt which facilitates to develop 
    modern-looking, javaScript based applications. QML is also the core 
    language adopted by Ubuntu mobile plaforms and its concept of 
    one-os-fit-all-devices shift. So seems QML is set to become the 
    protocol of choice for so many applications.

    Harbour's implementation of Qt, i.e. HbQt, is essentially a widget 
    based implementation. It took me a while to turn to QML because 
    of the necessity to have barcode reading inside my mobile offerings.
    I remained reluctant to give QML a try for a long time because of the 
    complexity how Signal/Slot mechanism is implemented in Harbour.
    But when I took initiative, I found that it is simpler than my fear.
    Bottom line is : we can start using QML to some extent alsong-with 
    and within our existing widget based apps.

    CLASS HbQtQmlBridge() provides the building blocks to stream-line 
    the complexity of signal/slots, set/get properties, execute methods, etc.
    
       CLASS HbQtQmlBridge()

       METHOD init( oParent )
       METHOD create( oParent )

       METHOD setQml( cQml )                                -> lSuccess
       METHOD show()                                        -> NIL
       METHOD setProperty( cProperty, xValue )              -> lSuccess
       METHOD setChildProperty( cChild, cProperty, xValue ) -> lSuccess
       METHOD getProperty( cProperty )                      -> oQVariant | NIL
       METHOD getChildProperty( cChild, cProperty )         -> oQVariant | NIL
       METHOD invokeMethod( cMethod, ... )                  -> oQVariant | NIL
       METHOD connect( cSignal, bBlock )                    -> lSuccess
       METHOD connectChild( cChild, cSignal, bBlock )       -> lSuccess

       :create() only initiates a QQuickWidget(), set some of its 
         properties, connects it to error handeling slots and 
         lays it in a best-judged layout on its parent.

       :setQml( cQml ) is where all the action happens.
          This is the only place where we could know if a QML 
          document has been loaded or not. All subsequest operations 
          are executable only if we succeed here. Be noted that QML 
          engine is a scripting engine and is based on JavaScript 
          heavily.

    Lets disect CLASS HbQtBarcodeReader() and BarcodeReader.qml in 
    relevant context only. HbQtBarcodeReader() is developed to provide 
    one-line calling methodology in mind and has many other constructs
    you are already familiar with.

    METHOD HbQtBarcodeReader:create( oParent )    
       ...
       ...
       // register C++ classes in order to access them inside QML
       // immediately before those are about to be Used
       //
       HBQAbstractVideoSurface():registerQmlTypes()
       QZXing():registerQmlTypes()

      ::oQmlBridge := HbQtQmlBridge():new():create( ::oQmlContainerWidget )

      // provide the QML document location needed
      //
      IF ::oQmlBridge:setQml( "qrc:/hbqtqml/resources/qml/BarcodeReader.qml" )
         ::stopCamera()

         #ifndef __ANDROID__
            // because QVideoProbe() is only available for Android
            // we need render the frame ourselves, so this connection
            //
            ::oQmlBridge:connectChild( "videosurface", "imageAvailable(QImage)", {| oImage | ::dispImage( oImage ) } )
         #endif
         // we could have connected the "qzxing" child also for the same effect
         // but we decided to receive signal via QML document as it implements 
         // more constructs.
         //
         ::oQmlBridge:connect( "tagFound(QString)", {| cTag | ::manageBarcodeFound( cTag ) } )

         __hbqtAppRefresh()
      ENDIF
      ...
      ...
      RETURN self   

   
    BarcodeReader.qml [ only relevant parts ]:
    =========================================

    Rectangle {
        id         : cameraUI
        objectName : "camerainterface"     // name to access the object
                                           // as this is the root object
                                           // it can be accessed directly. 
    
        property bool stopScanningFrames   // can be set/get via :setProperty
    
        signal imageCaptured( string image )
        signal tagFound( string tag )      // signal we will receive via :connect
    
        function startScanning() {
           stopScanningFrames = false;
        }
        function stopScanning() {
           stopScanningFrames = true;
        }
        function stopCamera() {            // method we will invoke via :invokeMethod
            cameraUI.stopScanning();
            camera.stop();
        }
        function startCamera() {
            camera.start();
            cameraUI.startScanning();
            myVideoSurface.decoder = decoder;
            myVideoSurface.source  = camera;
        }
    
        Camera {
            id: camera
            objectName: "camera"           // can be accessed as QObject
                                           // from PRG QObject can only be 
                                           // exploited via :connect()
        }
    
        VideoOutput {
            id               : viewfinder
            objectName       : "viewfinder"
            source           : Qt.platform.os == "android" ? camera : myVideoSurface
        }
    
        QZXing{
            id         : decoder
            objectName : "qzxing"
            onTagFound : {
                if( ! cameraUI.stopScanningFrames )
                {
                    cameraUI.stopScanningFrames = true;
                    playSoundCameraFlash.play();
                    cameraUI.tagFound( tag ); // emit the signal which we :connect()ed
                }
            }
        }
    
        HBQAbstractVideoSurface{
            id         : myVideoSurface
            objectName : "videosurface"   // will connect via :connectChild()
        }
    
        SoundEffect {
            id      : playSoundCameraFlash
            source  : "qrc:/hbqtqml/resources/wav/barcode-beep.wav"
        }
    }
    
    A convinient function, one-liner, can be fired to scan a barcode as:
    __hbqtActivateBarcodeReader( {|cBarcode| LetMePushIntoField( cBarcode ) } )

    I hope this class will flourish with passage of time as we will gain 
    more experience into QML and allied technology. I am impressed with 
    results and plan to share with you whatever meaningful I could muster.

    Enjoy and stay tuned!

2015-07-31 15:14 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r416)
  * hbide/projmanager.prg
    % Changed: the behavior of opening "Output Console".
       In case of any errors in project building Output Console is opened.
       At all other times no action is taken. It means if console is 
       already opened or kept opened after an error, it will remain 
       visible. A request by Daniel Du Pre.

2015-07-31 13:28 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r415)
  + hbqtwidgets/resources/brw-addcolumn.png
  + hbqtwidgets/resources/brw-goto.png
  + hbqtwidgets/resources/brw-index.png
  + hbqtwidgets/resources/brw-tables.png
  + hbqtwidgets/resources/vz-child.png
  + hbqtwidgets/resources/vz-expand.png
  + hbqtwidgets/resources/vz-parent.png
  + hbqtwidgets/resources/web.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added more images.

  * hbqtwidgets/hbqtstd.ch
    + #define __VZOBJ_PARENT

  * hbqtwidgets/alert.prg
    % Enhancements for mobile platforms.

  * hbqtwidgets/dashboard.prg
    % Minor.

  * hbqtwidgets/hbqtbrowse.prg
    ! Fixed: editing window transulency.
    ! Fixed: to behave properly on mobile platforms.
    + Enhanced: modeless editing protocol.

  * hbqtwidgets/misc.prg
    + __hbqtIsAndroid() -> lOnAndroid 
    + __hbqtIsMobile() -> lOnMobile
    + __hbqtAppRefresh() -> NIL
      Hides and Shows App Windget.
    + __hbqtLayoutWidgetInParent( oWidget, oParent )
    + __hbqtLog( xLog ), __hbqtShowLog(), __hbqtClearLog()
      A General purpose logging mechanism based on __hbqtAppWidget().
      Mostly useful on mobile platforms where debugging is a nightmare.
    + __hbqtRegisterForOrientationChange( bBlock )
      __hbqtBroadcastOrientationChanged( nOrientation )
      Actually based on resize event of __hbqtAppWidget() which calls the 
      bBlock whenever resizing takes place. Mostly useful for mobile platforms.

  * hbqtwidgets/silverlight.prg
  * hbqtwidgets/slidinglist.prg
  * hbqtwidgets/toolbarex.prg
  * hbqtwidgets/treeview.prg
  * hbqtwidgets/visualitems.prg
  * hbqtwidgets/visualizer.prg
    + Many visual enhancements.

  * hbqtwidgets/hbqtwidgets.hbp
    + {android}-d__ANDROID

2015-07-30 16:50 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r414)
  * hbqt/hbmk2_qt.hb
    % Changed: hb_regexMatch() -> hb_regexHas().
    ! Fixed: a nasty bug ( coutesy Francek ).

  * hbqt/qtcore/hbqt_bind.cpp
    + __HBQT_FINDCHILDOBJECT( oQObjectDerivedObject, cChild )
    % Some tracing enhancements.

  * hbqt/qtcore/qth/QMetaObject.qth
    ! Streamlined static function ::invokeMethod().
       It was necessary to have this method working for QML implementation.

  * hbqt/qtcore/qth/QObject.qth
    + Added: more Qt 5.5 introduced methods.

  * hbqt/qtgui/hbqt_init.cpp
    + Added: code to manage QImage referenced slots.

  * hbqt/qtgui/qth/QWidget.qth
    % Removed and added wrongly brought signals.
       This had no impact on compiling process.

  * hbqt/qtmultimedia/qth/QCamera.qth
  * hbqt/qtquick/qth/QQuickWidget.qth
    % Flagged to be compiled as non-destroyable by Harbour object.

  * hbqt/qzxing/hbqt_hbqzxing.cpp
  * hbqt/qzxing/hbqt_hbqzxing.h
  + hbqt/qzxing/hbqt_qabstractvideosurface.cpp
  + hbqt/qzxing/hbqt_qabstractvideosurface.h
  + hbqt/qzxing/hbqt_qquickpainteditem.cpp
  + hbqt/qzxing/hbqt_qquickpainteditem.h
  * hbqt/qzxing/hbqtzxing.hbm
  * hbqt/qzxing/imagehandler.cpp
  * hbqt/qzxing/qth/filelist.hbm
  + hbqt/qzxing/qth/HBQAbstractVideoSurface.qth
  * hbqt/qzxing/qth/QZXing.qth
  * hbqt/qzxing/zxing/zxing/qrcode/decoder/QRDecodedBitStreamParser.cpp
    ! Restructed QZing to correctly scan barcodes from an image.
    + Added: class HBQAbstractVideoSurface() to manage video frames 
       from QML based Camera Type and QWidget based QCamera API's.
       Gave me tough times but at the end it was nailed down.

2015-07-02 08:41 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r413)
  * hbqt/qtqml/qth/QJSValue.qth
    ! Miss from the previous commit. 
       Qt 5.5 fixed a bug in Qt 5.4.

2015-06-30 13:47 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r412)
  + hbqt/qtlocation
  + hbqt/qtlocation/doc
  + hbqt/qtlocation/doc/en
  + hbqt/qtlocation/hbqt_init.cpp
  + hbqt/qtlocation/hbqtlocation.ch
  + hbqt/qtlocation/hbqtlocation.hbc
  + hbqt/qtlocation/hbqtlocation.hbm
  + hbqt/qtlocation/hbqtlocation.hbp
  + hbqt/qtlocation/hbqtlocation.hbx
  + hbqt/qtlocation/hbqtlocations.hbp
  + hbqt/qtlocation/qth
  + hbqt/qtlocation/qth/filelist.hbm
  + hbqt/qtlocation/qth/QGeoCodeReply.qth
  + hbqt/qtlocation/qth/QGeoCodingManager.qth
  + hbqt/qtlocation/qth/QGeoCodingManagerEngine.qth
  + hbqt/qtlocation/qth/QGeoManeuver.qth
  + hbqt/qtlocation/qth/QGeoRoute.qth
  + hbqt/qtlocation/qth/QGeoRouteReply.qth
  + hbqt/qtlocation/qth/QGeoRouteRequest.qth
  + hbqt/qtlocation/qth/QGeoRouteSegment.qth
  + hbqt/qtlocation/qth/QGeoRoutingManager.qth
  + hbqt/qtlocation/qth/QGeoRoutingManagerEngine.qth
  + hbqt/qtlocation/qth/QGeoServiceProvider.qth
  + hbqt/qtlocation/qth/QGeoServiceProviderFactory.qth
  + hbqt/qtlocation/qth/QPlace.qth
  + hbqt/qtlocation/qth/QPlaceAttribute.qth
  + hbqt/qtlocation/qth/QPlaceCategory.qth
  + hbqt/qtlocation/qth/QPlaceContactDetail.qth
  + hbqt/qtlocation/qth/QPlaceContent.qth
  + hbqt/qtlocation/qth/QPlaceContentReply.qth
  + hbqt/qtlocation/qth/QPlaceContentRequest.qth
  + hbqt/qtlocation/qth/QPlaceDetailsReply.qth
  + hbqt/qtlocation/qth/QPlaceEditorial.qth
  + hbqt/qtlocation/qth/QPlaceIcon.qth
  + hbqt/qtlocation/qth/QPlaceIdReply.qth
  + hbqt/qtlocation/qth/QPlaceImage.qth
  + hbqt/qtlocation/qth/QPlaceManager.qth
  + hbqt/qtlocation/qth/QPlaceManagerEngine.qth
  + hbqt/qtlocation/qth/QPlaceMatchReply.qth
  + hbqt/qtlocation/qth/QPlaceMatchRequest.qth
  + hbqt/qtlocation/qth/QPlaceProposedSearchResult.qth
  + hbqt/qtlocation/qth/QPlaceRatings.qth
  + hbqt/qtlocation/qth/QPlaceReply.qth
  + hbqt/qtlocation/qth/QPlaceResult.qth
  + hbqt/qtlocation/qth/QPlaceReview.qth
  + hbqt/qtlocation/qth/QPlaceSearchReply.qth
  + hbqt/qtlocation/qth/QPlaceSearchRequest.qth
  + hbqt/qtlocation/qth/QPlaceSearchResult.qth
  + hbqt/qtlocation/qth/QPlaceSearchSuggestionReply.qth
  + hbqt/qtlocation/qth/QPlaceSupplier.qth
  + hbqt/qtlocation/qth/QPlaceUser.qth
    + Added: Qt 5.5 published QtLocation library exposing locations API.
       This library is used in combination with QtPositioning.

  * qtcontribs.hbp
    + Added: hbqtlocation.hbp 

  * hbqt/hbmk2_qt.hb
    + Added: QObject derived class identifiers for QtLocation.

  * hbqt/qtcore/hbqt.h
    + Added: #include <QtCore/QObject>
       Some headers seem boken in Qt 5.5.

  * hbqt/qtcore/hbqt_init.cpp
    + Added: QString$QString, pointera$int$QString callbacks.
       Needed for QtLocation defined signals.

  * hbqt/qtgui/hbqtgui.ch
    + Added: constants exposed in QtLocation classes.

2015-06-16 16:51 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r411)
  * hbide/actions.prg
  * hbide/changelog.prg
  * hbide/console.prg
  * hbide/dbumgr.prg
  * hbide/debugger.prg
  * hbide/dict.prg
  * hbide/docks.prg
  * hbide/docwriter.prg
  * hbide/edit.prg
  * hbide/editor.prg
  * hbide/environ.prg
  * hbide/findreplace.prg
  * hbide/format.prg
  * hbide/functions.prg
  * hbide/harbourhelp.prg
  * hbide/hbqtoolbar.prg
  * hbide/home.prg
  * hbide/main.prg
  * hbide/misc.prg
  * hbide/object.prg
  * hbide/parts.prg
  * hbide/plugins.prg
  * hbide/projectwizard.prg
  * hbide/projmanager.prg
  * hbide/saveload.prg
  * hbide/shortcuts.prg
  * hbide/skeletons.prg
  * hbide/sources.prg
  * hbide/stylesheets.prg
  * hbide/tags.prg
  * hbide/themes.prg
  * hbide/tools.prg
  * hbide/uisrcmanager.prg
  * hbide/wizard.prg
    % Copyright year bump.

    % Formatting to some sources

    ! Fixed: reading .hbd files. Now Harbour Help is displayed properly.

    % Changed: the behavior of Functions List to start with "Natural Order"
       instead of "Sorted Order"

    ! few more minor fixes.

2015-05-27 17:40 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r410)
  * hbqt/hbmk2_qt.hb
    ! Fixed: greedy regular expression. Was breaking compilation of sone .uis. 

  * hbqt/qtcore/hbqt_misc.prg
    % Optimizations.

  * hbqt/qtcore/qth/QRect.qth
  * hbqt/qtcore/qth/QRectF.qth
    + Added: new methods introduced in recent Qt versions.

  * hbqt/qtgui/hbqtgui.ch
    + Added: one more constant.

  + hbqtwidgets/resources/add.png
  + hbqtwidgets/resources/brw-bottom.png
  + hbqtwidgets/resources/brw-down.png
  + hbqtwidgets/resources/brw-far-left.png
  + hbqtwidgets/resources/brw-far-right.png
  + hbqtwidgets/resources/brw-field.png
  + hbqtwidgets/resources/brw-index.png
  + hbqtwidgets/resources/brw-left.png
  + hbqtwidgets/resources/brw-page-down.png
  + hbqtwidgets/resources/brw-page-up.png
  + hbqtwidgets/resources/brw-right.png
  + hbqtwidgets/resources/brw-search.png
  + hbqtwidgets/resources/brw-top.png
  + hbqtwidgets/resources/brw-up.png
  + hbqtwidgets/resources/checkbox-checked-1.png
  + hbqtwidgets/resources/checkbox-checked-g.png
  + hbqtwidgets/resources/checkbox-checked.png
  + hbqtwidgets/resources/checkbox-unchecked-1.png
  + hbqtwidgets/resources/checkbox-unchecked-g.png
  + hbqtwidgets/resources/checkbox-unchecked.png
  + hbqtwidgets/resources/eye-close-48.png
  + hbqtwidgets/resources/eye-close.png
  + hbqtwidgets/resources/eye-open-48.png
  + hbqtwidgets/resources/eye-open.png
  + hbqtwidgets/resources/left-close.png
  + hbqtwidgets/resources/left-open.png
  + hbqtwidgets/resources/module.png
  + hbqtwidgets/resources/right-close.png
  + hbqtwidgets/resources/right-open.png
  + hbqtwidgets/resources/select-1.png
  + hbqtwidgets/resources/vz-chat-2.png
  + hbqtwidgets/resources/vz-chat.png
  + hbqtwidgets/resources/vz-clock.png
  + hbqtwidgets/resources/vz-collapse.png
  + hbqtwidgets/resources/vz-data.png
  + hbqtwidgets/resources/vz-filter.png
  + hbqtwidgets/resources/vz-items.png
  + hbqtwidgets/resources/vz-layerchange.png
  + hbqtwidgets/resources/vz-layers.png
  + hbqtwidgets/resources/vz-maps.png
  + hbqtwidgets/resources/vz-menu.png
  + hbqtwidgets/resources/vz-more.png
  + hbqtwidgets/resources/vz-mover.png
  + hbqtwidgets/resources/vz-navigate.png
  + hbqtwidgets/resources/vz-properties.png
  + hbqtwidgets/resources/vz-resizer.png
  + hbqtwidgets/resources/vz-states.png
  + hbqtwidgets/resources/vz-threaded.png
  + hbqtwidgets/resources/vz-topic.png
    + Added: some more images.

  * hbqtwidgets/hbqtwidgets.qrc
    + Added: entries to above images.

  * hbqtwidgets/hbqtstd.ch
    + Added another constant to manage layers in Visualizer.

  * hbqtwidgets/alert.prg
  * hbqtwidgets/getlist.prg
  * hbqtwidgets/getsys.prg
  * hbqtwidgets/hbqtbrowse.prg
  * hbqtwidgets/hbqtcolumn.prg
  + hbqtwidgets/messages.prg
  * hbqtwidgets/misc.prg
  * hbqtwidgets/properties.prg
  * hbqtwidgets/silverlight.prg
  * hbqtwidgets/slidinglist.prg
  * hbqtwidgets/toolbarex.prg
  * hbqtwidgets/visualitems.prg
  * hbqtwidgets/visualizer.prg

  * hbqtwidgets/visualizer.ui
  + hbqtwidgets/messages.ui

  * hbqtwidgets/hbqtwidgets.hbp
   
    This commit is a sum total of many enhancements and new features mainly 
    targetting mobile platforms. Notably, HbQtBrowser has undergone tons of 
    improvements along-side HbQt Get System. HbQtBrowse now implements modeless 
    cell editing taking use of HbQtSilverLight object. This is specially useful
    for mobile apps where modal event loops are not handelled well.
    Now all of the HbQtWidget objects are desktop + mobile compliant.

2015-03-24 09:16 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r409)
  * hbqt/qtgui/qth/QCompleter.qth
    + Added: methods introduced in Qt5.2.

  * hbqt/hbmk2_qt.hb
    % Changed: Rewritten .ui parser code by Francek Prijatelj.
       A greately improved parser which fixes many left-overs and other issues.
       Tested on HbIDE, HbDBU, many tests and my applications. It is 
       backwardly compatible but still needs to be improved upon 
       signal/slots, mostly, by switching on/off by a define.

       Please give a big hand to Francek. I personally pay a big thank-you.

2015-03-02 16:11 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r408)
  + libs/openssl-1.0.2/iphone-os
  + libs/openssl-1.0.2/iphone-os/libcrypto.a
  + libs/openssl-1.0.2/iphone-os/libssl.a
    + Added miss from the previous commit.

2015-03-02 16:10 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r407)
  * debug/hwgdebug.hbp
    % Fixed: build path.

  * hbqt/qtgui/qth/QGraphicsItemGroup.qth
    + Added: Static methods.

  + libs
  + libs/openssl-1.0.2
  + libs/openssl-1.0.2/android-armv7
  + libs/openssl-1.0.2/android-armv7/libcrypto.a
  + libs/openssl-1.0.2/android-armv7/libssl.a
  + libs/openssl-1.0.2/mingw491_32
  + libs/openssl-1.0.2/mingw491_32/libcrypto.a
  + libs/openssl-1.0.2/mingw491_32/libssl.a
  + libs/openssl-1.0.2/mac-osx
  + libs/openssl-1.0.2/mac-osx/libcrypto.a
  + libs/openssl-1.0.2/mac-osx/libssl.a
    + Added: Latest OpenSSL binaries linked statically for various platforms.
       iOS binary is a fat one containg all flavours for iPhone Simulator,
       iPhone -arm86, -arm7v, -x86_64, etc.

       The reason to have these binaries in the SVN is that not everybody 
       has the expertise to build them on their systems because of many 
       depenendancies must be installed on the machine. In the past I 
       struggled to obtain the static libraries without success. I thank 
       Przemek for many pointers to this direction.

2015-02-20 16:50 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r406)
  * hbqt/qtcore/qth/QVariant.qth
    + Uncommented method: "const char * typeName () const"

  * hbqtwidgets/editor.prg
    % Simplifications.

  * hbide/setup.ui
    + Added: <General><Editing Area><Split Instances Vertical Prime?>

  * hbide/docwriter.prg
  * hbide/editor.prg
  * hbide/findreplace.prg
  * hbide/main.prg
  * hbide/misc.prg
  * hbide/projmanager.prg
  * hbide/saveload.prg
  * hbide/sources.prg
  * hbide/tools.prg
    % Mainly simplification.

    + Redesigned: editing instance "SPLIT" protocol.
       Splitting an editing instance can be configured in two ways:
        HORIZONTAL Prime [ Default ]
          or
        VERTICAL Prime [ via <Setup><HbIDE Setup><General><Editing Area>
                                 <Split Instances Vertical Prime?> ]

       Horizontal Prime :    |   |   |
                             |   |   |
                             -----
                             |   |   |
                             |   |   |


       Vertical Prime        |   |   |
                             |   |   |
                             ---------
                             |       |
                             |       |

2015-02-16 20:59 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r405)
  * hbqt/hbmk2_qt.hb
    % Changed: to use stdout and/or stderr while catching result of 
       external process executed to detect the Qt version.
       
  * hbqt/qtcore/qth/QByteArray.qth
    % Changed: const char * constData()/data() returns data in proper length 
       by changing hb_retc(...) to hb_retclen(..., p->size()).

  * hbqt/qtcore/qth/QMimeData.qth
    % Changed: ( an HbQt Extention ) 
       QVariant imageData () const 
          =>
       QImage imageData () const
       It is always tricky to manage all types in QVariant what Qt provides.
       Also as the method name implies, one expects that it will return the 
       immage associated with QMimeData. And hence this simplification.

    @Ryszard Glab
       Other big stopper was pasting images from the clipboard. Current code 
       stores QImage in QVariant variable however QVariant has no method to convert 
       it to QImage. According to the Qt documentation the only solution is casting 
       at C++ level.  

  * hbqt/qtgui/hbqt_hbqabstractitemmodel.cpp
  * hbqt/qtgui/hbqt_hbqabstractitemmodel.h
    + Added: bool setData ( const QModelIndex & index, const QVariant & value, int role = Qt::EditRole );
       It is a handy mechanism to write back the values of a field just as 
       those are retrieved via getData method.

    @Ryszard Glab
       The really big problem with current hbqt code is lack of in-place editing 
       features of QTableView. Althought QTableView can edit cells using standard 
       build-in delegates (it work if you return Flags with Qt_ItemIsEditable and 
       use Qt_EditRole to get value from cell) however there is no possibility to 
       get back edited value from the delegate editor. Please consider the 
       following patch to extend current code to return the edited value to 
       codeblock used in hb_qabstractitemmodel - it requires the the codeblock have 
       to accept additional fifth parameter.

  ; The above patch is submitted by Ryszard Glab, a big thank you.
     For those who are new to Harbour and HbQt - an introduction to Ryszard Glab.
     Ryszard is one of the pioneers in maturing Harbour since its birth until 2008.
     Below is his last commit in Harbour:
        2008-02-02 23:40 UTC+0100 Ryszard Glab (harbour//rglab.pl)
     Till date he is remembered for his in-depth knowledge about programming 
     concepts and specifically Harbour. He is finishing a big project 
     heavily based on HbQt. This patch highlights the state of HbQt to 
     the effect that now we are production ready.

     I have requested him if he could provide few screen-shots of HbQt based 
     application with short description about its end-usage. That will certainly 
     put HbQt on some higher plane. 
     
2015-02-13 17:30 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r404)
  * hbqt/qtgui/hbqt_hbqgraphicsscene.cpp
    % Changed HBQGraphicsScene's grid ruler marking text in ( value / 100 ).
       Before it was ( value / 10 ). It prevents cluttering and also 
       facilitates easy grasp of scalings.

  + hbqtwidgets/resources/prv_zoom_locate.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added a new icon to zoom visualizer scene to clicked position.
       
  * hbqtwidgets/hbqtbrowse.prg
    % Changed: HbQtBrowser's scroll behavior to pixels instead of items.
       This is a needed feature for mobile devices.

  * hbqtwidgets/visualitems.prg
  * hbqtwidgets/visualizer.prg
    % Modified to scale pixmaps only once per type of image and scene scale.
    + Added another toolbar icon to reach anywhere on the scene but preserving
       the zoom level before activation. 
         1. Zoom to the desired level.
         2. Click on the "Zoom Locate" icon.
         3. Scene will turn to fit-in-view mode.
         4. Double-click on the derired area of the scene.
         5. Scene will zoom to previous scale with clicked area anchored in center.

  * hbqtwidgets/tests/demovisualizer.prg
    ! Fixed to demonstrate above feature and to respect previous changes.

2015-02-13 12:41 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r403)
  * hbqtwidgets/editor.prg
    + Added: more methods to enahnce its usability.

  * hbqtwidgets/hbqtdbu.prg
    + Fixed a nasty bug surfacing when editing last column was finished.

  * hbqtwidgets/misc.prg
    + Added function __hbqtLiteDebug( ... ).
       The debug string build from list of parameters passed, CNLD types,
       is shown as Window's Titlebar retrieved by __hbqtAppWidget().
       This is very handy mechanism to debug something on the fly.
         __hbqtLiteDebug( "This Text", 213.13, .t., date() )

  * hbide/debugger.prg
    % Minor. A fix to manage re-availability of Editing Instance Split 
       functionality.
    
  * hbide/editor.prg
    + Re-activated editing instance's SPLIT feature with more functionality.
       Now split can be Horizontal AND/OR Vertical, both together.

  + hbqtwidgets/tests/glossybutton.prg
    + Added demo app to demonstrate QEvent_Paint implementation as a 
       separate source. The demo is submitted by Luigi, many thanks.

2015-02-11 17:14 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r402)
  * hbqt/qscintilla/hbqscintilla.hbp
    % Patch sent by Francesco.

  * hbqtwidgets/getsys.prg
    ! Fixed: SET CENTURY ON issue for QGET of type date.

2015-02-02 16:24 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r401)
  * hbqt/qscintilla/hbqscintilla.hbp
  * hbqt/qscintilla/qth/QsciCommandSet.qth
  * hbqt/qscintilla/qth/QsciStyle.qth
    % Another patch sent by Francesco.

  ; Francesco, make sure that you are working with the latest sources
     from SF. I had to repatch one you sent from older one.

2015-02-02 00:04 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r400)
  + hbqt/hbqtscintilla.hbc
    + Added .hbc stub to compile hbqscintilla lib.

  * hbqt/hbqt.hbc
    + Added: entry for hbqtqscintilla.hbc but commented out.

  * hbqt/qscintilla/qth/filelist.hbm
    - Commented out few no-longer-required classes. 

  * hbqt/qscintilla/qth/HBQsciScintilla.qth
  * hbqt/qscintilla/qth/QsciAbstractAPIs.qth
  * hbqt/qscintilla/qth/QsciAPIs.qth
  * hbqt/qscintilla/qth/QsciCommand.qth
  * hbqt/qscintilla/qth/QsciCommandSet.qth
  * hbqt/qscintilla/qth/QsciDocument.qth
  * hbqt/qscintilla/qth/QsciLexer.qth
  * hbqt/qscintilla/qth/QsciLexerCPP.qth
  * hbqt/qscintilla/qth/QsciLexerFlagship.qth
  * hbqt/qscintilla/qth/QsciScintilla.qth
  * hbqt/qscintilla/qth/QsciStyle.qth
  * hbqt/qscintilla/qth/QsciStyledText.qth

  * hbqt/qscintilla/hbqscintilla.hbc
  * hbqt/qscintilla/hbqscintilla.hbm
  * hbqt/qscintilla/hbqscintilla.hbp
  * hbqt/qscintilla/hbqt_hbqsciscintilla.h
    ! Changes to address QScintilla v2.

  ; NOTE: Above patch is submitted by Francessco Perillo via Antonio Linares.
          They intend to use and enhance QScintilla components.

  ; DISCLAIMER: I have no interest in QScintilla by now. I wrote these 
          wrappers to experiment QScintilla be embedded into HbIDE and 
          had found it to be very limited ( around 2010 ) and have no idea
          what they have implemented later, and, weather it is useful 
          to average HbQt user or not. So any commits for this library 
          has to be maintained by the respective beneficiaries.

2015-02-01 14:25 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r399)
  * hbqt/qtcore/hbqt_hbqslots.cpp
    ! Fixed: a nasty bug surfacing at some rare combination of libraries.
       A SLOT is actually defined/linked or not was not being tested.

  * hbqt/qtpositioning/doc/en/class_qgeoareamonitorinfo.txt
  * hbqt/qtpositioning/hbqt_init.cpp
    % Minor.

  * hbqt/qtpositioning/qth/QGeoAreaMonitorInfo.qth
    - Commented QVariantMap specific methods. It is acually a typedef.

  * hbqtwidgets/hbqtwidgets.hbp
    + Added: __ios__ define for .prg sources if __ios__ is defined 
       for Harbour builds.

  * hbqtwidgets/visualizer.prg
    ! Guarded QPrinter specific code against #define __ios__.
       QPrinter and family is still missing in Qt 5.4 iOS builds.

2015-01-30 14:35 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r398)
  * hbide/hbide.hbp
    - Removed: edit.prg.

  * hbide/debugger.prg
    ! Tried to fix error in debugger in certain situations.

  * hbide/main.prg
    ! Fixed: INS key was causing RTE.
       Implementation transfererred to editing instance object.

  * hbide/misc.prg
    - Transferred functions belonging to editing instance to HbQtWidgets.

  * hbide/resources/hbide-2014.png
    % Copyright bump.

  * hbqt/hbmk2_qt.hb
    + Added: UI class method :widget() which returns :oWidget.
       Useful where ::oUI:oWidget is needed. Now it can be ::oUI:widget().

  * hbqt/qtgui/hbqt_hbqplaintextedit.cpp
    ! Fixed: painting of top-most line at selection process.

  * hbqtwidgets/editor.prg
    + Transferred: HbIDE contained functions belong to editing instance.

  * hbqtwidgets/resources/hbdbu-2014.png
    % Copyright bump.

2015-01-23 17:08 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r397)
  * hbqt/qtgui/qth/filelist.hbm
  * hbqt/qtnetwork/qth/filelist.hbm
    - Excluded some sources not compilable in IOS.

2015-01-23 16:03 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r396)
  * hbqt/qscintilla/hbqscintilla.hbc
  * hbqt/qtbluetooth/hbqtbluetooth.hbc
  * hbqt/qtdeclarative/hbqtdeclarative.hbc
  * hbqt/qtdesigner/hbqtdesigner.hbc
  * hbqt/qtmultimedia/hbqtmultimedia.hbc
  * hbqt/qtmultimediawidgets/hbqtmultimediawidgets.hbc
  * hbqt/qtopengl/hbqtopengl.hbc
  * hbqt/qtpositioning/hbqtpositioning.hbc
  * hbqt/qtqml/hbqtqml.hbc
  * hbqt/qtquick/hbqtquick.hbc
  * hbqt/qtscript/hbqtscript.hbc
  * hbqt/qtsensors/hbqtsensors.hbc
  * hbqt/qtsql/hbqtsql.hbc
  * hbqt/qtsvg/hbqtsvg.hbc
  * hbqt/qtwebkit/hbqtwebkit.hbc
  * hbqt/qtwebsockets/hbqtwebsockets.hbc
  * hbqt/qtxml/hbqtxml.hbc
  * hbqt/qzxing/hbqtzxing.hbc
    - Removed "S" suffix used for static libraries.
       Better way is to use 
        HB_BUILD_NAME=-iphone | iphonesimulator | mingw-static etc.

2015-01-23 15:25 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r395)
  * hbide/main.prg
    ! Changed: <#include "hb*.hbx"> with <REQUEST __HBEXTERN__HB*__>
       Needed because some of the .hbc in <contrib> do not have 
       -incpaths=. switch.

2015-01-23 13:40 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r394)
  * hbqt/qtcore/hbqt_simulator.c
    ! Fixed to be linked for all compilers, a nasty omission.   

2015-01-23 13:22 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r393)
  + hbqt/qtcore/hbqt_simulator.c
    + Added missing source in previous commit.

2015-01-23 12:54 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r392)
  * hbide/resources/hbide-2014.png
  * hbqtwidgets/resources/hbdbu-2014.png
    % Splash image copyright bumped to 2015.

  * qtcontribs.hbp
    % Minor.

  * debug/hwgdebug.hbp
    - Excluded for ios builds.

  * hbdbu/hbdbu.hbp
    % Added ${hb_build} token.

  * hbide/findreplace.prg
    ! Fixed find/replace dialog to behave the same way on OSX.

  * hbide/editor.prg
    ! Fixed to behave excatly the same way on OSX as on Windows.

  * hbide/plugins.prg
    + Enhanced to through eleborate error message for 
       "Run as Script" feature of HbIDE. 

  * hbide/projmanager.prg
    + "Run as Script" feature enhanced to supply "-n", "-I*"
        switches to the build engine. -I switch contains #include file
        paths defined in <Setup><HbIDE Setup><Projects><Include Paths>. 

  * hbide/hbide.hbp
    % Tuned to be built as a lib on ios.

  * hbnetioqt/hbnetioq.hbp
    % Added ${hb_build} token.
 
  * hbqt/qtcore/hbqtcore.hbc
  * hbqt/qtgui/hbqtgui.hbc
  * hbqt/qtnetwork/hbqtnetwork.hbc
    - Removed "s" from static libs definitions. 
       Was breaking because hbmk2 does not create a lib 
       with "s" suffix even if HB_STATIC_QT is defined.

  * hbqt/hbqt_common.hbm
    + Added ${hb_build} 

  * hbqt/qtcore/hbqtcore.hbm
    + Added hbqt_simulator.c

  * hbqt/qtbluetooth/hbqtbluetooth.hbp
  * hbqt/qtdesigner/hbqtdesigner.hbp
  * hbqt/qtopengl/hbqtopengl.hbp
  * hbqt/qtquick/hbqtquick.hbp
  * hbqt/qtwebkit/hbqtwebkit.hbp
  * hbqt/qzxing/hbqtzxing.hbp
    ! Guarded not to be compiled for {__ios__}.

  + hbqt/qtcore/hbqt_simulator.c
    + Added: conditionally compilable source containing 
       missing functions for iOS builds, mainly for 
       iPhoneSimulator platform.

  * hbqt/qtgui/hbqt_hbqplaintextedit.cpp
    ! Fixed a nasty bug persistent since begining where 
       some pointers were not initialized before use.
       It resolves a key issue with HbQtEditor() 
       implementation.

  * hbqt/qtgui/hbqtgui.ch
    + Added Qt_Qt_Application* constants introduced in 
       newer versions of Qt. 

  * hbqt/qtgui/hbqt_hbqplaintextedit.h
  * hbqt/qtgui/hbqt_hbqgraphicsitem.h
    - Removed unused variables.

  * hbqt/qtgui/qth/QPrinterInfo.qth
  * hbqt/qtgui/qth/QPrinter.qth
  * hbqt/qtgui/qth/QTextDocument.qth
  * hbqt/qtgui/qth/QTextEdit.qth
  * hbqt/qtgui/qth/QPlainTextEdit.qth
  * hbqt/qtgui/qth/QPrintPreviewWidget.qth
  * hbqt/qtgui/qth/QPrintPreviewDialog.qth
  * hbqt/qtnetwork/qth/QNetworkAccessManager.qth
  * hbqt/qtnetwork/qth/QNetworkReply.qth
  * hbqt/qtwebsockets/qth/QWebSocketServer.qth
  * hbqt/qtwebsockets/qth/QWebSocket.qth
    + Added conditional inculsion of some methods belonging 
      to QPrinter & family guarded against HB_BUILD_IOS.
      Qt in v5.4 has an issue with these symbols for iOS.

  * hbqtwidgets/hbqtwidgets.hbp
    % Changes to honor builds-by-name.

  + hbqtwidgets/resources/back-icon.png
  + hbqtwidgets/resources/forward-icon.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added above images.
  * hbqtwidgets/editor.prg
  * hbqtwidgets/misc.prg
    ! Fixed to work with OSX.

  * hbxbp/dialog.prg
  * hbxbp/generic.prg
    % Cosmetic.

  * hbxbp/hbxbp.hbp
    % Changes to honor builds-by-name.

  ; This commit maily focus on OSX and IOS builds and is being 
    committed from MAC. How it will fare on Windows is yet to 
    be tested. So please be patient and report any regression.
    Also one more commit is required for ios builds but those 
    files need more investigation and integration.

2015-01-13 12:13 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r391)
  * hbdbu/hbdbu.hbp
    ! Missed from ... Damm, ageing process is begining to manifest.

2015-01-13 08:48 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r390)
  * hbqt/qtgui/qth/QLineEdit.qth
  * hbqtwidgets/hbqtwidgets.hbp
  + hbqtwidgets/resources/select.png
  + hbqtwidgets/resources/table-2.png
  + hbqtwidgets/resources/table-3.png
    ! Misses from previous commit.
      Was in a hurry to complete something on MAC and did not 
      realized I did not compile everything on Windows. Sorry for the 
      carelessness.

2015-01-12 19:06 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r389)
  * hbide/changelog.prg
  * hbide/editor.prg
  * hbide/harbourhelp.prg
  * hbide/hbide.hbp
  * hbide/hbqtoolbar.prg
  * hbide/main.prg
  * hbide/saveload.prg
  * hbide/shortcuts.prg
  * hbide/shortcuts.ui
  * hbide/themes.prg
  * hbide/uisrcmanager.prg
  * hbide/qtcore.txt
  * hbide/qtgui.txt
  * hbide/qtnetwork.txt
    % Many small changes mostly belonging to synchronize HbQtEditor separation.

  * hbqt/qtgui/hbqt_version.ch
  * hbqt/qtgui/hbqtgui.ch
  * hbqt/qtgui/qth/QLineEdit.qth
  * hbqt/qtmultimediawidgets/hbqtmultimediawidgets.hbm
  * hbqt/qtnetwork/qth/filelist.hbm
  * hbqt/qtpositioning/doc/en/class_qgeoareamonitorsource.txt
  * hbqt/qtpositioning/doc/en/class_qgeopositioninfosource.txt
  * hbqt/qtpositioning/qth/QGeoAreaMonitorSource.qth
  * hbqt/qtpositioning/qth/QGeoPositionInfoSource.qth
  * hbqt/qtpositioning/qth/QGeoSatelliteInfoSource.qth
  * hbqt/qtwebkit/hbqtwebkit.hbc
  * hbqtwidgets/editor.prg
  * hbqtwidgets/getlist.prg
  * hbqtwidgets/getsys.prg
  * hbqtwidgets/hbqtbrowse.prg
  * hbqtwidgets/hbqtstd.ch
  * hbqtwidgets/hbqtwidgets.qrc
  * hbqtwidgets/misc.prg
  * hbqtwidgets/properties.prg
  + hbqtwidgets/resources/sort-ascending.png
  + hbqtwidgets/resources/sort-descending.png
  * hbqtwidgets/silverlight.prg
  * hbqtwidgets/slidinglist.prg
  * hbqtwidgets/tests/browgets.prg
  * hbqtwidgets/toolbarex.prg
  * hbqtwidgets/visualitems.prg
  * hbqtwidgets/visualizer.prg
  * hbqtwidgets/visualizer.ui
    % Many-many changes.
      Will document all at some next commits. In a hurry right now but needs commit.

2014-12-06 18:15 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r388)
  * hbqt/qtcore/hbqt_hbqevents.cpp
    + Added code to fire QEvent::Paint.
       This is a very significant implementation, do not ignore it.
       QEvent_Paint brings on-widget drawing capabilities to PRG world.
       This can be the the base for XBase++'s OWNERDRAW create time clause.
       It opens up many interesting ways to redesign the whole interface.
       There is a difference between this and all other events in that 
       the arguments sent to the conncted block are two instead of one.
         .
         oButton := QPushButton( "Cancel" )
         oButton:connect( QEvent_Paint, {| oEvent, oPainter | ;
                          __paintTheButton( oEvent, oPainter, oButton ) }
         ...
         FUNCTION __paintTheButton( oEvent, oPainter, oButton )
            oPinter:fillRect( oEvent:rect(), QColor( Qt_blue ) )
            ...
            RETURN .T.  //  I M P O R T A N T

  * hbqt/qtcore/hbqt_pointer.cpp
    + Added: function HBQT_DEBUG( cDebugString )
       Facilitates to view Qt's own Qt Creator debugger window.
       Useful for Android builds.

  * hbide/projectpropertiesex.ui
    + FaceLift: added few toolbuttons to be exploied via HbQtEditor().

  * hbide/projmanager.prg
    + Project Properties dialog is now capable of real-time editing
       almost equal to any other HbIDE editing instance, thanks to 
       HbQtEditor implementation.

  * hbide/docks.prg
  * hbide/main.prg
  * hbide/saveload.prg
  * hbide/shortcuts.prg
  * hbide/editor.prg
    % Changed: All objects of type IdeEdit() with HbQtEditor. Read below.
       This is a heavy change, very heavy, so regression is possible,
       please report.

  * hbide/edit.prg
    % Deprecated: will be removed in future after HbQtEditor is flagged 
       to be stable.

  * hbqtwidgets/resources/delete-line.png
  * hbqtwidgets/resources/duplicate-line.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added: few more icons 

  * hbqtwidgets/hbqtstd.ch
    + Added: more contstants usable with new classes.

  * hbqtwidgets/hbqtwidgets.hbp
    + Added: editor.prg 

  * hbqtwidgets/visualizer.prg
    + Added: method hide().

  * hbqtwidgets/misc.prg
    + Added: many functions called in HbQteditor().

  * hbqtwidgets/editor.prg
    + Added: CLASS HbQtEditor.
       It is the replica of HbIDE's editing instnce but with a significant 
       change that now it can be linked with any application like a COM
       object. This has been a very tiring experience but at the same time 
       extremely rewarding.

       When development of HbIDE started, vision was not mature enough to 
       foresee the re-usability of components. HbIDE's all components kept 
       on interwoven madly. HbDBU was developed later which enforced the 
       re-usability pattern. Luckily, now we are in a position to experience 
       the same with another big component, HbQtEditor. 

       The component is mature now. I am using HbIDE as of current but not 
       tested heavily. Normal operations seems to be working fine, so we 
       can start using it. Still a good amount of thoughts are needed for 
       API calls which is still, in my opinion, not done with. You need to 
       wait a little more to deploy it in your apps.

  * hbqtwidgets/tests/validator.prg
    + Added; code to demonstrate how to use QEvent_Paint signal. 

2014-12-05 11:45 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r387)
  * hbqt/qtgui/qth/QPageLayout.qth
    + Included: method :setPageSize().

2014-11-30 23:28 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r386)
  * hbqt/qtcore/hbqt_misc.prg
    ! Fixed: missing :: in a class variable.

2014-11-30 16:21 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r385)
  * hbqt/qtgui/qth/QGraphicsScene.qth
    ! Fixed: a nasty bug where :addItem() was re-flagged to [*X=1*]. 
       It must been [*D=1*] as QGraphicsScene acquire ownership of the item.

  * hbqtwidgets/visualitems.prg
    % Minor.

2014-11-30 12:26 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r384)
  * hbxbp/reports.prg
    ! Fixed: QPrinter specific API changes calls.

  * debug/hwgdebug.hbp
    - Commented out GTK specific flags.
    + Introduced hbmk2 specific -workdir flag.
       Both changes pointed to by Luigi, many thanks.

  * hbide/edit.prg
    ! Potentially fixed GPF when tabs to spaces formatting was applied.

  * hbqt/qtcore/hbqt_misc.prg
    ! Fixed: not to use HbQtWidgets specific constructs.
       Pointed out by Luigi, thanks.

  * hbqt/qtgui/qth/HBQGraphicsScene.qth
    +- Some methods.

  * hbqt/qtgui/hbqt_hbqgraphicsscene.cpp
  * hbqt/qtgui/hbqt_hbqgraphicsscene.h
    ! Fixed: #include  <QtMultiMedia/QSoundEffect> =>  <QtMultimedia/QSoundEffect>.
       Detected by Luigi, many thanks.
    +- Some methods.

  * hbqt/qtgui/hbqtgui.ch
    % Minor.

  * hbqtwidgets/hbqtwidgets.hbp
    + Added: silverlight.prg.

  * hbqtwidgets/hbqtstd.ch
    + Added: more constants used in latest HbQtWidget classes.

  + hbqtwidgets/silverlight.prg
    + Added: CLASS HbQtSilverLight. 
       A class akin to MS silver-light effects and usage to some extent.
       USAGE: 
	 oSLight := HbQtSilverLight():new():create( xContent, oBackground, lAnimate, aOpacity, oWidget )
            OR
         WITH OBJECT oSLight := HbQtSilverLight():new():create()
            :setContent( xContent )                 // DEFAULT is empty string
            :setBackground( QColor( 200,200,200 ) ) // DEFAULT is QColor( 50,50,50 )
            :setAnimation( .T. )                    // DEFAULT is TRUE
            :setAnimationOpacity( { 100, 200 } )    // DEFAULT is { 127, 200 }
            :setParent( oWidget )                   // DEFAULT is __hbqtAppWidget()
         ENDWITH 
         
         // then whenever you need to invoke it, mostly inside a lengthy process...
         //
         oSLight:activate( [ "Some Hints About Lengthy Process" ], ;
                           [ oNewBackground ], ;
                           [ lAnimate ], ;
                           [ {nStartOpacity,nEndOpacity} ], ;
                           [ oParentWidget ] )
         // overriding almost all the elements with every next call to activate.
         // previous settings remain in effect until changed.

         ...... application code for lengthy process. 

         oSLight:deactivate()

       NOTES:  If <xContent> is of type string, then it can be formatted as richtext. 
               a subset of 

  * hbqtwidgets/misc.prg
    + Added: FUNCTION __hbqtAppWidget( oAppWidget ).
       A set/get function which is used throughout the HbQtWidgets where application's 
       main window is a requirement, i.e., HbQtSlidingList() and HbQtSilverLight()
       pulls the parent information via this function.
       This function should be called immediately after constucting the main window
       of the application like:
         oWnd := QMainWindow()
         __hbqtAppWidget( oWnd )
            OR
         oUI := hbqtui_myui()
         __hbqtAppWidget( oUI:oWidget )
         
    + Added: FUNCTION HbQtActivateSilverLight( <lActivate>, [<xContent>], [<oBackground>], ;
                                                   [<lAnimate>], [<aOpacity>], [<oParent>] )
       A general purpose implementation of HbQtSilverLight which can be invoked with 
       this function passing parameters to fine-tune it per requirements.

         lActivate   Mandatory   TRUE switches on, FALSE switches off.

         xContent    Optional    cText | QPixmap | QPicture | QMovie. Default is "Please Wait...".
         oBackground Optional    QColor. Default is QColor( 50,50,50 ).
         lAnimate    Optional    Logical. Default is TRUE.
         aOpacity    Optional    Array. Default is { 127, 200 }.
         oParent     Optional    QWidget derived widget. Default is __hbqtAppWidget().
                                 If oParent could not be found, function does nothing.

       USAGE:    
         
         HbQtActivateSilverLight( .T., "A Lengthy Process, Please Wait..." )
         DO WHILE lLengthyProcess
            QApplication():processEvents()      // keep the application responsive needed for 
                                                // HbQtSilverLight to animate.
            ...                                 // application code
         ENDDO
         HbQtActivateSilverLight( .F. )

  * hbqtwidgets/properties.prg
  * hbqtwidgets/slidinglist.prg
  * hbqtwidgets/toolbarex.prg
  * hbqtwidgets/visualitems.prg
  * hbqtwidgets/visualizer.prg
    % Many many changes in the API of new classes.
       API is still not stable, so please do not use them for production.

  * hbqtwidgets/hbqtbrowse.prg
    ! Fixed: browse printing methods to respect latest Qt API.

  * hbqtwidgets/tests/demovisualizer.prg
    + Added: code to demnstrate above changes. 
       To experience HbQtSilverLight implementation, drop a Text object onto the 
       canvas, select it, expand <Fonts> tree node on the right-side <Properties>,
       click on <family><Value> node. SilverLight will start animating until 
       fonts info is pulled, and immediately afterwards <Available Fonts> 
       HbQtSlidingList() will appear. This effect is meterialized with 
       HbQtActivateSilverScreen() function with default parameters.

2014-11-28 18:07 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r383)
  * hbqtwidgets/charts.prg
  * hbqtwidgets/dashboard.prg
    ! Fixed: memory leak on DahBoard object of type Chart.

2014-11-24 14:47 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r382)
  * hbqt/hbmk2_qt.hb
    ! Fixed: closing #ifdef QT_VERSION in .qth inserted method code.

  * hbqt/qtcore/hbqt.h
    + Added prototype 
       HB_EXPORT void hbqt_bindSwapQtObject( PHB_ITEM pSrcObject, PHB_ITEM pSwpObject );

  * hbqt/qtcore/hbqt_bind.cpp
    + Added: void hbqt_bindSwapQtObject( PHB_ITEM pSrcObject, PHB_ITEM pSwpObject ).
       This allows to build descendant class out of parent class which are 
       only possible via Qt's static_cast() function. For example, QGesture() 
       derived classes which are only casted by static_cast() function. The 
       implementation is manifested in three methods added to QGesture.qth, viz., 
       __toPanGesture(), __toPinchGesture() and family.

       WITH OBJECT ::oGraphicsView := ::oUI:graphicsView
          :grabGesture( Qt_PinchGesture )
          :connect( QEvent_Gesture, ;
             {|oEvent|
                LOCAL nChangeFlags, nScale
                LOCAL oGesture := oEvent:gesture( Qt_PinchGesture )
                IF ! Empty( oGesture )
                   oGesture := oGesture:__toPinchGesture()  // IMPLEMENTATION MANIFEST 
                   nChangeFlags := oGesture:changeFlags()
                   IF hb_bitAnd( nChangeFlags, QPinchGesture_ScaleFactorChanged ) != 0
                      nScale := oGesture:scaleFactor()
                      IF nScale < 2 .AND. nScale > 0.5
                         ::oGraphicsView:scale( nScale, nScale )
                      ENDIF
                   ENDIF
                   RETURN .T.
                ENDIF
                RETURN .T.
             } )
       ENDWITH


  * hbqt/qtcore/hbqt_misc.prg
    + Added a class HbQtTouchPoint. [ Under Development ]. It is not meant to be 
       initiated by PRG code. The clss will be exploted from within QTouchEvent()
       and will hold the long list of variables a touch point offers.

  * hbqt/qtgui/hbqt_hbqgraphicsitem.cpp
  * hbqt/qtgui/hbqt_hbqgraphicsitem.h
  * hbqt/qtgui/hbqt_hbqgraphicsscene.cpp
    % Changes overall, mainly to offer more versatality to manage Qt Graphics Framework.

  * hbqt/qtgui/hbqt_init.cpp
    + Updated registration of events introduced lately by Qt via
        hbqt_events_register_createobj( nEvent, ... ).

  * hbqt/qtgui/hbqtgui.ch
    + Added more constants needed for newly added classes.

  * hbqt/qtgui/qth/HBQGraphicsItem.qth
    + Added HbQt specific method QGraphicsPixmapItem * toPixmapItem() returning a 
       QGraphicsPixmapItem from HBQGraphicsItem().

  * hbqt/qtgui/qth/QGesture.qth
    + Added HbQt specific methods __toPanGesture(), etc., swapping the QGesture()
       class object with QPanGesture() object. QGesture() object is destroyed 
       by HbQt engine. The dangling Harbour object stays within scope if not 
       ressigned. So oGesture has to be ressigned as 
         oGesture := oGesture:__toPanGesture | __toPinchGesture() | etc.
    
  + hbqt/qtgui/qth/QInputMethodQueryEvent.qth
  + hbqt/qtgui/qth/QOpenGLBuffer.qth
  + hbqt/qtgui/qth/QOpenGLWidget.qth
  + hbqt/qtgui/qth/QScrollEvent.qth
  + hbqt/qtgui/qth/QScrollPrepareEvent.qth
  + hbqt/qtgui/qth/QTouchEvent.qth
  * hbqt/qtgui/qth/filelist.hbm
    + Added: above new classes needed to explore many more possibilities.

  * hbqtwidgets/hbqtstd.ch
    + Addded some constants to be consumed by new HbQt classes.

  * hbqtwidgets/hbqtwidgets.hbp
  * hbqtwidgets/misc.prg
  * hbqtwidgets/properties.prg
  * hbqtwidgets/visualitems.prg
  * hbqtwidgets/visualizer.prg
  * hbqtwidgets/visualizer.ui
    % Many, many changes in implementation.
       API is not stable yet. I have many features on the drawing-board.
       So far now keep on playing with demovisualizer.prg.

  + hbqtwidgets/slidinglist.prg
    + Added:  CLASS HbQtSlidingsManager
               Responsible to manage SlidingLists.

              CLASS HbQtSlidingList
               A QListWidget with special features allowing it to 
               be sliding from left or right edges of parent window.
               This implementation is similar to mobile application 
               showing up a list of options when finger is swiped 
               from outside of the left or right side of the mobile 
               device into to application window. Currently, this 
               implementation is good for left-to-right or right-to-left
               movements. Top-to-bottom and Bottopm-to-top implementation
               is also thought of.

               You can experience it by maximizing the demovisualizer.exe 
               then swiping-in the left or right edges with left-mouse-pressed, 
               which is equivalent to finger-swipe on mobile devices.

  * hbqtwidgets/tests/demovisualizer.prg
    + Slightly modified to honor latest changes in HbQtVisualizer

2014-11-21 12:57 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r381)
  * hbqt/qtbluetooth/hbqtbluetooth.hbc
  * hbqt/qtcore/hbqtcore.hbc
  * hbqt/qtdeclarative/hbqtdeclarative.hbc
  * hbqt/qtdesigner/hbqtdesigner.hbc
  * hbqt/qtgui/hbqtgui.hbc
  * hbqt/qtmultimedia/hbqtmultimedia.hbc
  * hbqt/qtmultimediawidgets/hbqtmultimediawidgets.hbc
  * hbqt/qtnetwork/hbqtnetwork.hbc
  * hbqt/qtopengl/hbqtopengl.hbc
  * hbqt/qtpositioning/hbqtpositioning.hbc
  * hbqt/qtqml/hbqtqml.hbc
  * hbqt/qtquick/hbqtquick.hbc
  * hbqt/qtscript/hbqtscript.hbc
  * hbqt/qtsensors/hbqtsensors.hbc
  * hbqt/qtsql/hbqtsql.hbc
  * hbqt/qtsvg/hbqtsvg.hbc
  * hbqt/qtwebkit/hbqtwebkit.hbc
  * hbqt/qtwebsockets/hbqtwebsockets.hbc
  * hbqt/qtxml/hbqtxml.hbc
  * hbqt/qzxing/hbqtzxing.hbc
  * hbqt/hbmk2_qt.hb
    % Removed: Qt4 build dependancies. HbQt no longer is supports it.

2014-11-19 15:36 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r380)
  * hbqt/tests/qt_in_gt.prg
    % Changed: QWidget() => QPlainTextEdit().
       It makes the demo more comprehensive as user can do something in it.

  + hbqt/tests/gt_in_qt.prg
    + Added: another app to demonstrate how to execute a GT window
       from within a HbQt window. Both windows remain active and can 
       be switched back and forth. Note, only one GT window can remain 
       active at a time in ST applications.

2014-11-19 13:52 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r379)
  * hbqt/qtcore/qth/QCoreApplication.qth
    ! Disabled: QApplication():quit() method. It does nothing now.

  * hbqt/qtgui/hbqt_init.cpp
    ! Adopted: GtQTC code belonging to QApplication() initialization.
       This is Przemek's tip, thanks.
       It makes it possible to call HbQt components from GtQTC based 
       console applications and vice-versa.

    ; W A R N I N G - Incompatible. Any application using 
                      QApplication():quit() should be fixed to use 
                      other methods.

2014-11-18 18:14 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r378)
  * hbqtwidgets/dashboard.prg
    + Introduced a hack where QMdiArea was not behaving properly.
       May be regression of Qt version change, but not sure.
  * hbqtwidgets/getsys.prg
    ! Fixed: :preValidate() implementation was broken under certain circumstances.

2014-11-15 14:08 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r377)
  * hbqt/qtgui/qth/QWidget.qth
    ! Guarded Accessibility methods against #ifndef QT_NO_ACCESSIBILITY.

  * hbqt/hbmk2_qt.hb
    + Added construct to honor "#ifdef" statements per method basis.

2014-11-15 13:38 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r376)
  * debug/debugger.prg
    % Commented-out one not-used static function.

  * hbnetioqt/netiosrq.prg
    ! Fixed to be compiled and running with current QtContribs.

  * hbqt/qtgui/qth/QWidget.qth
    + Reintroduced some commented-out methods, not tested on Linux.

  * hbxbp/browse.prg
    ! Fixed depricated Qt methods.

  * hbxbp/window.prg
    ! Shifted method setStyleSheet from PRTECTED section to PUBLIC.

2014-11-14 14:06 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r375)
  * hbide/edit.prg
    ! Fixed: CTRL and ALT parts of Qt_Key_Tab were not being distinguished.

  * hbqt/qtcore/hbqt_bind.cpp
    ! Removed: some code clubbed under #if 0.

  * hbqt/qtcore/qth/QVariant.qth
    + Expanded: constructor taking care of Integer, Double or LongLong 
       numeric values. Patch provided by Francek, thanks.

  * hbqt/qtgui/hbqtgui.ch
    + Added: QScreen specific contstants.

  * hbqt/qtgui/qth/HBQGraphicsItem.qth
  * hbqt/qtgui/qth/QComboBox.qth
  * hbqt/qtgui/qth/QGraphicsItem.qth
  * hbqt/qtgui/qth/QGraphicsObject.qth
  * hbqt/qtgui/qth/QListWidgetItem.qth
  * hbqt/qtgui/qth/QTreeWidgetItem.qth
    + Additions of new methods etc.

  * hbqt/qtgui/hbqt_hbqgraphicsitem.cpp
  * hbqt/qtgui/hbqt_hbqgraphicsitem.h
  * hbqt/qtgui/hbqt_hbqgraphicsscene.cpp
  * hbqt/qtgui/hbqt_hbqgraphicsscene.h
    + Structural changes and code reorganization.

  + hbqtwidgets/resources/arrow-bottom-left.png
  + hbqtwidgets/resources/arrow-bottom-right.png
  + hbqtwidgets/resources/arrow-contract.png
  + hbqtwidgets/resources/arrow-down.png
  + hbqtwidgets/resources/arrow-expand.png
  + hbqtwidgets/resources/arrow-left-1.png
  + hbqtwidgets/resources/arrow-lft.png
  + hbqtwidgets/resources/arrow-rgt.png
  + hbqtwidgets/resources/arrow-right-1.png
  + hbqtwidgets/resources/arrow-top-left.png
  + hbqtwidgets/resources/arrow-top-right.png
  + hbqtwidgets/resources/arrow-up.png
  + hbqtwidgets/resources/branch-closed.png
  + hbqtwidgets/resources/branch-open.png
  + hbqtwidgets/resources/communication.png
  + hbqtwidgets/resources/del-state-1.png
  + hbqtwidgets/resources/delete-state-1.png
  + hbqtwidgets/resources/delete-state.png
  + hbqtwidgets/resources/delete.png
  + hbqtwidgets/resources/edit-object.png
  + hbqtwidgets/resources/grid-1.png
  + hbqtwidgets/resources/grid-4.png
  + hbqtwidgets/resources/harbour-b.png
  + hbqtwidgets/resources/leftanglearrow-1.png
  + hbqtwidgets/resources/leftanglearrow.png
  + hbqtwidgets/resources/lock.png
  + hbqtwidgets/resources/menu-1.png
  + hbqtwidgets/resources/mover.png
  + hbqtwidgets/resources/panel-1.png
  + hbqtwidgets/resources/preview-1.png
  + hbqtwidgets/resources/prv_objects-1.png
  + hbqtwidgets/resources/resize.png
  + hbqtwidgets/resources/rightanglearrow-1.png
  + hbqtwidgets/resources/rightanglearrow.png
  + hbqtwidgets/resources/rotate-1.png
  + hbqtwidgets/resources/rotate-3.png
  + hbqtwidgets/resources/rotate-image.png
  + hbqtwidgets/resources/rotate-marker.png
  + hbqtwidgets/resources/rotatel-3.png
  + hbqtwidgets/resources/save-4.png
  + hbqtwidgets/resources/save-5.png
  + hbqtwidgets/resources/text-object.png
  + hbqtwidgets/resources/z-barcode.png
  + hbqtwidgets/resources/z-diamond.png
  + hbqtwidgets/resources/z-ellipse.png
  + hbqtwidgets/resources/z-linedl.png
  + hbqtwidgets/resources/z-linedr.png
  + hbqtwidgets/resources/z-lineh.png
  + hbqtwidgets/resources/z-linev.png
  + hbqtwidgets/resources/z-rectangle.png
  + hbqtwidgets/resources/z-roundedrect.png
  + hbqtwidgets/resources/z-triangle.png
  + hbqtwidgets/resources/z-triangleb.png
  + hbqtwidgets/resources/z-trianglel.png
  + hbqtwidgets/resources/z-triangler.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added many more images.

  * hbqtwidgets/alert.prg
    % Minor.

  * hbqtwidgets/hbqtstd.ch
    + Added: __STATE_AREA_* constants used in HbQtVisualizer.

  * hbqtwidgets/misc.prg
    + Added many general urpose functions used in HbQtVisualizer framework.

  * hbqtwidgets/previewer.prg
  * hbqtwidgets/properties.prg
  * hbqtwidgets/toolbarex.prg
  * hbqtwidgets/visualitems.prg
  * hbqtwidgets/visualizer.prg
  * hbqtwidgets/visualizer.ui
    + Many, many changes, difficult to summarize.

  + hbqtwidgets/tests/demovisualizer.prg
    + Added code to supply parameters to HbQtVisualizer framework from the 
       application which demonstrate how this framework can be exploited 
       for variety of purposes.

  ; WARNING : HbQtVisualizer Framework is undergoing a substantial 
              uplift. A lot has been done, but a lot more needs to be done
              before it should be used in production environment. This 
              development is triggedred by my company's needs to carry 
              a variety of tasks through it, especially to manage IT 
              inventory scattered in different locations. This framework 
              will mature to a large extent, stay tuned.

              Today's commit is done because I was loosing grip of changes
              after every successful feature implemention only and also 
              because now it is on a level you can play with it.

2014-10-27 16:58 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r374)
  * hbqt/qtgui/qth/QWidget.qth
    + Added few more methods introduced in later then 4.5 Qt versions.
    + Commented out few others which I could not compile on earlier years.

2014-10-21 14:08 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r373)
  * hbide/main.prg
    % Minor.

  * hbqt/qtcore/hbqt_bind.cpp
    + Applied new patch provided by Francesco.

  * hbqt/qtgui/hbqt_hbqgraphicsscene.cpp
  * hbqt/qtgui/hbqt_hbqgraphicsscene.h
    + Added more actions for the double-click and context menu handelling.

  * hbqt/qzxing/hbqtzxing.hbm
  * hbqt/qzxing/QZXing_global.h
  * hbqt/qzxing/zxing/zxing/common/detector/MonochromeRectangleDetector.cpp
  * hbqt/qzxing/zxing/zxing/datamatrix/detector/DataMatrixDetector.cpp
  * hbqt/qzxing/zxing/zxing/oned/Code128Reader.cpp
  * hbqt/qzxing/zxing/zxing/oned/Code39Reader.cpp
  * hbqt/qzxing/zxing/zxing/oned/OneDReader.cpp
  * hbqt/qzxing/zxing/zxing/pdf417/detector/PDF417Detector.cpp
  * hbqt/qzxing/zxing/zxing/qrcode/detector/QRDetector.cpp
  + hbqt/qzxing/zxing_vc13_patch.h
    + Applied patch provided by Francek which let it compile on 
       MSVC 13 and above.

  * hbqtwidgets/visualizer.prg

  * hbxbp/reports.prg
    ! Separated to run under HbXBP protocol.
       Scheduled to be depricated once HbQtVisualizer() is matured.

  * hbxbp/toolbar.prg
    ! Fixed to honor icon draggings.

  * qtcontribs.hbp
    ! Nornmalized per latest fix in hbmk2 where '-stop' was not working.

  * debug/hwgdebug.hbp
    ! Made not to be compilable under Android.

2014-10-21 00:08 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r372)
  * hbqt/qzxing/hbqtzxing.hbm
    + Applied patch provided by Francek (Untested).

2014-10-20 12:47 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r371)
  * hbqt/qzxing/hbqtzxing.hbm
    + Added {msvc}-cflag=-EHsc 
       Forwarded by Ronaldo, thanks.

  * hbqt/qzxing/zxing/win32/zxing/win_iconv.c
    ! Pacified warnings.

  * hbqtwidgets/visualizer.prg
    + Exposed Visualizer's splitter via HbQtVisualizer:splitter().
                           top toolbar via HbQtVisualizer:toolbarTop()
                           left toolbar via HbQtVisualizer:toolbarObjects()

  * hbqtwidgets/tests/demovisualizer.prg
    + added code to demonstrate how a style sheet be applied to entire 
       application to scale objects on different devices and apply 
       visuals. 

2014-10-19 16:00 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r370)
  + hbqtwidgets/resources/app_side_contract.png
  + hbqtwidgets/resources/app_side_expand.png
  + hbqtwidgets/resources/application_side_contract.png
  + hbqtwidgets/resources/application_side_expand.png
  + hbqtwidgets/resources/down-1.png
  + hbqtwidgets/resources/menu.png
  + hbqtwidgets/resources/prv_barcode.png
  + hbqtwidgets/resources/prv_charts.png
  + hbqtwidgets/resources/prv_fit-best.png
  + hbqtwidgets/resources/prv_fit-width.png
  + hbqtwidgets/resources/prv_gradient.png
  + hbqtwidgets/resources/prv_grid.png
  + hbqtwidgets/resources/prv_image.png
  + hbqtwidgets/resources/prv_landscape.png
  + hbqtwidgets/resources/prv_left-4.png
  + hbqtwidgets/resources/prv_leftall-4.png
  + hbqtwidgets/resources/prv_objects.png
  + hbqtwidgets/resources/prv_page-setup.png
  + hbqtwidgets/resources/prv_page_double.png
  + hbqtwidgets/resources/prv_page_four.png
  + hbqtwidgets/resources/prv_page_one.png
  + hbqtwidgets/resources/prv_portrait.png
  + hbqtwidgets/resources/prv_printer-1.png
  + hbqtwidgets/resources/prv_printer.png
  + hbqtwidgets/resources/prv_printpreview.png
  + hbqtwidgets/resources/prv_right-4.png
  + hbqtwidgets/resources/prv_rightall-4.png
  + hbqtwidgets/resources/prv_save-1.png
  + hbqtwidgets/resources/prv_save-doc.png
  + hbqtwidgets/resources/prv_text.png
  + hbqtwidgets/resources/prv_undo.png
  + hbqtwidgets/resources/prv_zoom-1.png
  + hbqtwidgets/resources/prv_zoom-in-1.png
  + hbqtwidgets/resources/prv_zoom-in.png
  + hbqtwidgets/resources/prv_zoom-original.png
  + hbqtwidgets/resources/prv_zoom-out-1.png
  + hbqtwidgets/resources/prv_zoom-out.png
  + hbqtwidgets/resources/splitter-h.png
  + hbqtwidgets/resources/splitter-v.png
  + hbqtwidgets/resources/up-1.png

  * hbqtwidgets/hbqtwidgets.qrc
    + Added more images as above.
    
  * hbqtwidgets/hbqtstd.ch
    + Added more constants to manage classes explained below.

  * hbqtwidgets/misc.prg
  + hbqtwidgets/toolbarex.prg
  + hbqtwidgets/visualitems.prg
  + hbqtwidgets/visualizer.prg
  + hbqtwidgets/previewer.prg
  + hbqtwidgets/properties.prg

  + hbqtwidgets/visualizer.ui

  * hbqtwidgets/hbqtwidgets.hbp
    + Added more sources and uis as above.

    This commit implements following classes extremely useful for 
    desktop as-well-as mobile business applications. Now onwards 
    the primary focus will reamin on the development of re-usable 
    and platform independent components for faster development-to-market
    experience. All these classes I have pulled from my production 
    applications and re-tuned to be useable as COM objects.

    Some of these classes are still in development but I am committing 
    them as is to keep track of the changes as well as in anticipation 
    of your feedback.

    1. CLASS HbQtScrollableToolbar  [ Status - Usable ]
        This class implements a scrollable toolbar which can contain 
        n number of buttons and is usable on any type of device. Toolbar 
        also shows up left-right visual indicators if buttons scroll 
        past the either-side. The look can be controlled by provided 
        methods. Height and width of the buttons, of icons and the 
        gap between buttons is also adjustable. Both, horizontal 
        and vertical orinetations are supported. Toolbars expect 
        QHBoxLayout | QVBoxLayout as its parents.

    2. CLASS HbQtPrintPreview        [ Status - Usable ]
        This class extends the QPrintPreviewWidget with all the eliments
        embedded, as per QPrintPreviewDialog(), but as a components 
        ready to be consumed by a QHBoxLayout or QVBoxLayout. QDilogs
        fare badly on mobile environments so I had a need to have it 
        as a widget with additional elements. Still a couple of methods,
        for real-extended use, are still on my drawing-board. Stay tuned.

    3. CLASS HbQtPropertiesManager   [ Status - Under Development ]
       CLASS HbQtPropertySheet
       CLASS HbQtProperty
        This group of classes is responsible to manage the PropertySheet 
        interface similar like Qt Creator and all other visual tools.
        But here this component may be used for a variety of business 
        needs. For example, implimenting the data-entry screens based 
        on PropertySheet. I am sensing how big usage this interface 
        can provide so every care will be taken to honor Clipper variable
        types. 

    4. CLASS HbQtVisualizer         [ Status - Under Development ]
       CLASS HbQtVisualItems
        These classes implement a COM like embeddable components to manage 
        a variety of business needs VISUALLY. It is the same code base 
        I started as IdeReports which is a part of HbIDE ( though totally 
        non-functional ) via HbXBP engine. Now it is in the process of 
        heavy changes and different vision of usability than it was 
        thought-of at origin. Because it is a MUST requirement for my 
        production development, I hope it will reach its maturity soon.

  + hbqtwidgets/tests/demovisualizer.prg
    + Demo application demonstrating all above components in action.

2014-10-19 13:18 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r369)
  * hbqt/qtcore/hbqt.h
    % Moved MSVC related defines before Harbour headers.

  * hbqt/qtcore/hbqt_bind.cpp
    % Guarded recent changes in object destructors for Qt 5.3.2 or less.
       HbIDE under Qt 5.4 was screwed up by these changes.

  * hbqt/qtgui/hbqt_errorsys.prg
    % Error message box background made explicitly white. On Android 
       messages got unreadable somehow.

  * hbqt/qtgui/hbqt_hbqgraphicsitem.cpp
  * hbqt/qtgui/hbqt_hbqgraphicsitem.h
  * hbqt/qtgui/hbqt_hbqgraphicsscene.cpp
  * hbqt/qtgui/hbqt_hbqgraphicsscene.h
  * hbqt/qtgui/qth/HBQGraphicsItem.qth
  * hbqt/qtgui/qth/HBQGraphicsScene.qth
  * hbqt/qtgui/qth/QGraphicsScene.qth
  * hbqt/qtgui/qth/QGraphicsSceneMouseEvent.qth
    ! Changes to exploit Qt 5x defined constucts.

  * hbqt/qtgui/qth/QPageLayout.qth
    + Matured constuctor.

  * hbqt/qtgui/qth/QPixmap.qth
    + Uncommented method - bool loadFromData().

  * hbqt/qtgui/qth/QPrinter.qth
    % Replaced methods per Qt 5x documentation.

  * hbqt/qtgui/qth/QSplitter.qth
    + Uncommented method QSplitterHandle handle().
    + Added: method hbSetSizes( aSizes ) as HbQt cannot implement 
       passing arguments via a QList< T >.

2014-10-19 12:58 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r368)
  + hbqt/qtcore/qth/QCommandLineOption.qth
  + hbqt/qtcore/qth/QCommandLineParser.qth
  + hbqt/qtcore/qth/QRegularExpression.qth
  + hbqt/qtcore/qth/QRegularExpressionMatch.qth
  + hbqt/qtcore/qth/QRegularExpressionMatchIterator.qth
  * hbqt/qtcore/qth/filelist.hbm
    + Added: above classes.

  + hbqt/qtgui/qth/QSplitterHandle.qth
  * hbqt/qtgui/qth/filelist.hbm
    + Added: above classes.

  * hbqt/qtgui/hbqtgui.ch
    + Added more constants referenced in above classes.

2014-10-03 16:46 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r367)
  * hbide/editor.prg
    ! Fixed: RTE on clicking on <Apply All> in <Themes Editor>.
       Repoted by Itamar, thanks.

  * hbqtwidgets/hbqtbrowse.prg
    ! Fixed: ( a kind of, regression may surface in other form ), RTE when 
       parent containing the HbQtBrowse object has not been initiated 
       somehow. Reported by Massimo, thanks.

2014-10-03 15:03 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r366)
  * hbqt/hbmk2_qt.hb
    % Cosmetic change:  HBQTUI_PAD_30 => HBQTUI_PAD_35.

  * hbqt/qtcore/hbqt_bind.cpp
    + included patch from Francesco which deletes the SIGNALs physically.
       Tested for all demo apps and HbIDE and has not found any issues.
       This fix seems to be fixing the issue with destructors shown by 
       Luigi.

2014-10-02 16:50 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r365)
  * hbqt/hbmk2_qt.hb
    + Improved patch to define SIGNAL/SLOTS at design time, supplied by Francek.

  * hbide/main.prg
  * hbide/actions.prg
    + Added: main-toolbar icon <SaveState> to update hbide.ini and settings.ide
       with current state of HbIDE. The action is exactly the same which 
       is taken at normal exit of HbIDE. It is useful to save state of HbIDE
       intermediately after adding/removing sources/projects, by reorgnizing 
       various components/widgets. It saves you time in case a RTE is generated
       and HbIDE is terminated without saving the latest state.         

  * hbide/edit.prg
    % Changed: Goto Line <CTRL+G> action now positions the cursor in the mid of
       editing instance window.

  * hbide/projmanager.prg
    % Changed: <Opening an Existing Project> now opens the File Open dialog 
       at the last folder visited.

  * hbide/debugger.prg
    ! Fixed: correctly measure the browsers rows when 
       <Tiled>|<Cascaded>|<FullScreen> actions are carried. Before some rows,
       depending upon the resized coordinates, were displayed unsynchronized.

    % Changed: the way <Watches> were being saved in the .wch files. Now 
       watches entries are embedded under <WATCHES>/</WATCHES> block.
       This opens up to use a single file to store many other info. 

2014-09-27 13:42 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r364)
  * hbqt/hbmk2_qt.hb
    ! Fixed: to honor correctly :setStyleSheet() and parsing of Q*Gradient()
       calls in .ui. Patch submitted by Francek, thanks.

2014-09-27 11:35 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r363)
  * hbqt/qtgui/hbqt_version.ch
    % Version bump to r363.

  * hbqtwidgets/getsys.prg
    ! Fixed: to display changed variable if WHEN clasuse returns FLASE.
       Reported by Dusan Majkic, thanks.

2014-09-26 01:55 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r362)
  * hbqt/qtgui/hbqt_version.ch
    % Version bump to r362.

  * hbqtwidgets/hbqtbrowse.prg
    % Changed the 2nd argument to callback in :navigationBlock to send 
       { nX,nY } mapped to window where the clicks originated instead of 
       global nX,nY position. It simplifies a lot of operations.

  * debug/dbgconnect.prg
  * debug/dbgdop.c
    ! Fixed to be compiled with xHarbour.

  * debug/debugger.prg
    + Added: additional fields in SendAreas() where more info is added 
       about the tables, like order, fullpath, indexpath, index info.
       comprising 

  + hbide/debugger2.ui
    + Added MDI compliant debugger interface. 
  * hbide/hbide.hbp
    + Added debugger2.ui.

  * hbide/debugger.prg
  * hbide/saveload.prg
    + Implemented MDI interface to display/exploit debug elements taking 
       use of HbQtBrowse() as the prime component. Besides offering seemless
       freedom to organize and view debug elements, this new protocol is 
       extremely fast as near as console-mode implementation.

       WHY THIS CHANGE: My employers "Curacao" deploys extremely big and 
                        complex application for its business operations 
                        in-development since 1987 gradually ported to 
                        xHarbour from Clipper. This is fondly called "AR".
                        AR is written in the then prevailing coding style 
                        which is termed as "sephaghatti" with hundreds, 
                        nay thousands, of public and private variables 
                        embedded inside macros. When I executed it via 
                        IdeDebugger, it took ages to refresh after every 
                        STEP, just rendering IdeDebugger useless and hence 
                        unacceptable to the management. I explored the 
                        bottlenecks and soon discovered that populating 
                        QTableWidget()'s items was killing it. Communication
                        of debugger and application was just in-time.
                        At one BP debugger UI took many minutes to populate
                        2577 public variables... Simply too much.

       AND THE OUTCOME: After switching to HbQtBrowse() the exchange is 
                        instant. No time-lag. And happily management has 
                        accepted HbIDE and hence IdeDebugger to be deployed 
                        for all fellow developers, at least for debugging 
                        purposes. 

      OTHER BENEFITS: 1 Complete freedome to organize the various elements 
                        to suit the taste and/or need by aspect of debugging.
    
                      2 Feature to Save/Load such organized unlimited "views"
                        even in the same session.

                      3 Drilling-down any multi-dimentional ragged arrays 
                        to last element and view it all-together.

                      4 Preview and Print indivisual elements for future 
                        reference or for cross verification.

      ; Attached image ( separately ) with QtContribs group message will 
        help grasp the true essense of this new interface.
  
2014-09-20 17:25 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r361)
  * hbqt/qtgui/hbqt_version.ch
    % Version bump to r361.

  * hbide/debugger.prg
    ! Fixed regression not to crash while clicking on <Sets> label.

  * hbide/main.prg
    ! Fixed to close the debuuger ig one has been active at the time 
       HbIDE is <Exit>ed.

2014-09-19 17:25 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r360)
  * hbqt/qtgui/hbqt_version.ch
    % Version bump to r360.

  * debug/dbgconnect.prg
  * debug/dbgdop.c
  * debug/debugger.prg
    + Added more constructs to honor HbIDE implementation.
    % Changed behavior of some components how these should interact with HbIDE.
    + Added code to supprt xHarbour projects.

  * debug/hwgdebug.hbp
    + Added commented-out switch to turn-on for very old xHatbour builds.

  + hbide/resources/clipboard.png
    + Added new image.

  * hbide/hbide.qrc
    + Added: clipboard.png.

  * hbide/debugger.ui
    % Scheduled to be removed from build.

  * hbide/debugger1.ui
    + Added: few more control to have better debugging experience.
    - Deleted: switching between two ui's. Original ui is deprecated.

  * hbide/debugger.prg
  * hbide/editor.prg
  * hbide/projmanager.prg
    + Implemented: to pull only the components currently being viewed inside 
       user-interface. For example, if current tab is <WorkAreas> then only 
       workareas related info will be requested from the application. Navigating
       the tabs will pull related info. The info will be pulled once only 
       for each tab until application is suspended after another STOP. 
       In that case all info will be deleted and fresh info downloaded for 
       the tab in view.

       The above implementation has boosted-up the debugging speed per GUI 
       context where populating controls are a big overhead. Also it help 
       to remain responsive in very large applications written in sephagetti 
       style with hundereds of public/private variables hanging around all the
       time. This has increased HbIDE's acceptance many fold.

    + Added: <Download All> button at the right-side corner of main tabs.
       This can be clicked to download info for all components in all tabs.
       But probably you may seldom need to click it in real sessions.

    + Added: <Copy Strucure> icon on the right-side corner of 
       <Record Inspector> component which is clubbed in <WorkAreas> tab.
       This copies to the clipboard something like this:
          LOCAL aStruct := { { "FIRST"   , "C",   20,  0 },;
                             { "LAST"    , "C",   20,  0 },;
                             { "HIREDATE", "D",    8,  0 },;
                             { "MARRIED" , "L",    1,  0 },;
                             { "AGE"     , "N",    2,  0 },;
                             { "SALARY"  , "N",    6,  2 },;
                             { "NOTES"   , "C",   70,  0 } }
       The intent is to provide a mechanism where structure info could be 
       consumed as a variable directly in the source code.

    + Implemented: to change value of vriables.
       Double-click on <Value> column in miscallaneous variables tab.
       If the variable is of type C,D,N,L, then ui will allow to edit it. The 
       changed value will be applied instantly in the application. Resumed 
       execution will honor its value. Note that variables of type character 
       are always displayed inside double-quotes. You must not overwrite 
       them when editing.

    + Implemented: a way to send any information from within the application
       to be published in HbIDE's <Output Console> similar like any debugging 
       tool. You can call it <IdeTrace>. We will refer it by this name onwards.
       It is on top of the debugger protocol. It is a very powerful mechanism
       to measure the performance of your code based on inserting it at 
       crucial points in source code. As <Output Console> prefixes every message 
       with time in seconds, which can become the basis of judging the 
       performance of your code. You will add something like this lines:
          #ifdef __HBIDE_DEBUG__
             IdeTrace( { "This is real-time push!", "This is another push!!" } )
          #endif
          #ifdef __HBIDE_DEBUG__
             IdeTrace( xVariable )
          #endif
          #ifdef __HBIDE_DEBUG__
             IdeTrace( "Customer info is missing" )
             IdeTrace( { 6030, "Nevada Ave", ctod( "" ), .T. } )
          #endif
       Any type of variable is accepted, either an array of variables or literals.
       You need not to #define __HBIDE_DEBUG__, HbIDE's build system automatically
       defines it for debug builds. You can keep above debug points intact 
       for all types of builds.
 
       Backdrop: as you know I had zero knowledge how Harbour debugger works,
                 I struggled at times to understand how the flow of request/response 
                 behaves. For this I had to devise a mechanism where I could know
                 what is happening at the back-end. After it got implemented, 
                 I realized how powerful it could be. Not only for debugging info,
                 but also for measuring performance between two execution points.
                 This simulates Qt creator's debugger protocol to an extent. 
                 
2014-09-15 12:38 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r359)
  * hbqt/qtgui/hbqt_version.ch
    % Version bump to r359.

  * hbqt/qtgui/hbqt_hbqplaintextedit.cpp
    ! Fixed: not to set BreakPoint if line is empty or starts with "/" or "*".
    % Changed: the icon painted over line-number of line set for break-point.
       
  * debug/debugger.prg
    ! Fixed: regression where HbOrderInfo( DBOI_FULLPATH ) is returning NIL 
       instead of empty string if index-file path could not been determined.
       I believe this happens for certain RDDs. I tested DBFCDX which returns
       index-file path as empty string in this situation. Needs to be reported 
       to harbour-devel. Reported by Ash, thanks.

2014-09-14 21:43 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r358)
  * hbqt/qtgui/hbqt_version.ch
    % Version bump to r358.

  * hbdbu/dbu.prg
  * hbqtwidgets/hbqtdbu.prg
    + Implemented to consume HbDBu specific table-info string in the format:
        Main,C:\harbour\tests\test.dbf,TEST,DBFCDX,0,500,2,0 0 300 504,21,1,,,,
            =>
        View TableName Alias Driver Order Record ... 
      on the command line needed to fire the component via debugger's 
      WorkAreas table (Read Below).

  * debug/debugger.prg
    + implemented to return more information about the work areas. 

  * hbide/debugger.prg
  * hbide/projmanager.prg
    ! Fixed: two regressions reported by Itamar, thanks.

    + Implemented tooltip on <Alias> field of <WorkAreas> table depicting 
      some more information about this workarea:
       1. TABLE_PATH  - c:\harbour\tests\test.dbf
       2. INDEX_PATH  - c:\harbour\tests\test.cdx
       3. ORD_TAG_EXP - 1 : LAST : test->last
       4. <INDEXES>
          [ 1 : LAST ] test->last
          ...
          ...
          </INDEXES>

    + Implemented opening the selected workarea in <WorkAreas> in either 
      IdeDBU or HbDBU. The feature can be activated from context-menu presented
      by right-clicking on <Alias> field of selected work-area.

2014-09-14 12:43 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r357)
  * hbqt/qtgui/hbqt_version.ch
    % Version bump to r357.

  * debug/dbgconnect.prg
    % Minor.

  * hbide/debugger.prg
  * hbide/misc.prg
  * hbide/projmanager.prg
    + Implemented: Text lines dumped in <Output Console> are now prefixed 
       with Seconds() with 3 decimal places. The ideas is to have a 
       generic profiler which serves two purposes:
        1. Identified each line with a number useful to ask support 
           questions in context of this identifier.
        2. To measure the time taken in between two actions.

    + Restructured the whole engine how debugger and application communicates.
       In console mode debugger mechanism there is only one way ( at a time )
       to transfer control from debugger to application or vice-versa.
       But in a GUI debugger it is not possible. The actions are initiated 
       independently by the debugger and application which are suseptible to 
       dead-lock type situations more often. I have tried to overcome 
       this problem and have been successful greatly. Ultimately, you will 
       be the better judge to tell how good it is behaving.

       This exercise has resulted in a faster execution also.

2014-09-12 15:06 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r356)
  * hbqt/qtgui/hbqt_version.ch
    % Version bump to r356.

  * hbqt/qtgui/hbqt_hbqplaintextedit.cpp

  * hbide/edit.prg
  * hbide/hbqtoolbar.prg
  * hbide/main.prg
    ! Fixed: behavior of Qt_Key_Backspace which got applied even after 
       active selection. Pointed to by Fernando.

    ! Fixed: behavior of Qt_Key_Tab which was tabbing the entire selection 
       inclusing the last row also ( stream-selection ). In reality, 
       last row must never be affected. Pointed-to and justified by 
       Fernando Athayde.

    ! Fixed: hovering of mouse-cursor over Selection-Text Toolbar was 
       showing the editor beem cursor instead of arrow cursor.
       Again brought to notice by Fernando Athayde. Many thanks.

2014-09-11 23:33 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r355)
  * hbqt/qtgui/hbqt_version.ch
    % Version bump to r355.

  * debug/dbgconnect.prg
    + Added code which will be useful for next generation debugger.
       After each response written in response file, handle is closed 
       and opened again. This action initiates date-stamp change 
       on the response file which in turn is being "watched" by the 
       debugger. For now it facilitates to log so many things in 
       "Output Console".
       
  * hbide/debugger.ui
  * hbide/debugger1.ui
    + Added button <btnExpand> in the title area of <Object Inspector>.
       Clicking on this button automatically drill-down the elements of 
       type array, formats them, and finally presents the drilled values
       of entire array ( from the point click is initiated ) in a 
       stay-on-top simpel editor, just like code-fragments, syntax highlighted
       and ready to be sent to printing preview. 
       Expand operation can be performed on the variable of type object also.
       In this case only array members will be expanded along-with variables 
       and methods list.
       WARNING: large arrays may take longer period, so use it with caution.

  * hbide/debugger.prg
  * hbide/editor.prg
  * hbide/main.prg
    % Changed: debugger info copied to clipboard via <Clipboard> button will 
       fire a stay-on-top widget containing the debug info. This is the same 
       editor deployed for <btnExpand> output as above. The only difference 
       is in the highlighter theme which is different in both cases.

    ! Fixed: to honor the break-points in real-world scenario. Till now 
       BPs were initiated only from editing instances hosting the source 
       contained in the project. It had a severe side-effect. A project 
       may contain sub-projects or mere libraries were sources contained
       in those libraries cannot be determined prehand and it rendered the 
       whole process ineffective.

       Now clicking on line-number area on any editing instance tried to set 
       BP on current project being debugger. If the source name is matched 
       inside debug info retained by the application, it is entertained, 
       otherwise discarded. So the onus to determine a valid BP is transferred 
       to Harbour debug engine.
     
2014-09-10 12:02 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r354)
  * hbqt/qtgui/hbqt_version.ch
    % Version bump to r354.

  * hbide/edit.prg
    ! Fixed: Qt's undocumented behavior where Shift+Enter was inserting a 
       new line out of HbQT's engine. Discovered by Juan, thanks.

  * hbqtwidgets/hbqtdbu.prg
    ! Fixed: opening a corrupted table in HbDBU, which in-turn is reflected
       in HbIDE DBU, was causing RTE after issueing warning about the 
       corruption. Discovered by Juan, many thanks.

2014-09-09 18:22 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r353)
  * hbqt/qtgui/hbqt_version.ch
    % Version bump to r353.

  * hbide/debugger.ui
  * hbide/debugger1.ui
    + Added: button <btnObjBack>.

  * debug/debugger.prg
    % Minor.

  * hbide/debugger.prg
    + Implemented: drill-down of arrays and objects vai <Object|Array Inspector>
       and returning one level up upwards. First level is when object inspector 
       is invoked from <Variables> tabs. Drill-down then is achieved by double-
       clicking on an array or object entry in <Object Inspector> table. 
       Returning to one-level-up is achieved by clicking on <Back> button made 
       active along title-bar of <Object Inspector> widget.
  
2014-09-09 00:31 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r352)
  * hbqt/qtgui/hbqt_version.ch
    % Version bump to r352.

  * hbide/debugger.ui
  * hbide/debugger1.ui
    + Added: buttons <NextR [F6]> and <Trace [F8]> and shulled others.

  * debug/dbgconnect.prg
  * debug/debugger.prg
    ! Fixed: Fearse() calls which invariably erase the files on Linux even 
       if file is in use by other process. I cannot get this logic, anybody ?

    % Reformatted to make it more readable and understandable.

  * hbide/debugger.prg
  * hbide/edit.prg
  * hbide/projmanager.prg
    + Added and shuffled commands with corresponding buttons, like this:
       F5 Go, F6 NextR, F7 ToCurs, F8 Step, F10 Trace
    
2014-09-07 11:56 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r351)
  * hbqt/qtgui/hbqt_version.ch
    % Version bump to r351.

  * debug/dbgconnect.prg
    % Initialization of debugger is changed to honor only one-way, that is, 
       when fired from within HbIDE. Originally HwgDebugger is designed to 
       to be fired either-way, application-to-debugger or debugger-to-app.
       This fixes race conditions in certain situations.

  * hbide/debugger.ui
  * hbide/debugger1.ui
    + added <SwitchUI_1|2> pushbuttons to activate either of the two 
       interfaces developed in recent days. It is a handy feature to switch 
       to the view most suitable for a particular purpose. The only point 
       of note is that interface resfresh completely only on next BP or STEP.

  * hbide/debugger.prg
  * hbide/edit.prg
  * hbide/projmanager.prg
    + Implemented: <F5 GO>, <F10 STEP> and <F8 TOCURS> keyboard navigation.
       Requested by Maurizio.

    ! Fixed not to show the highlighted row where debugger is stopped 
      at initialization which was causing great confusion. 

    + Implemented: separation of location of different components of a project;
       1. Sources - keep sources as and where you already have.
       2. Project - keep project file .hbp anywhere you want.
       3. Executable - keep executable anywhere required per production setup.
       4. Run Executable - from folder as per your production/development setup.

       So, if you have scenario like this ( per my company )
          Source Folder    - h:\DevAR\dev, h:\DevAR\dev\*source-sub-folders
          Project Folder   - h:\DevAR\dev
          Execuable Folder - h:\DevAR\exes ( contains all dlls required )
          Exe Run Folder   - r:\artest     ( executable must be run from here )

       Then, HbIDE's debugger implimentation now supports it. How:
       .
       1. Build your project .hbp as usual as you would do for a normal project.
       2. Open <Project Properties> dialog.
       3. Enter folder path from where executable should start in <Start In> 
          field. In above example it would be "r:\artest".
       4. Enter parameters needed to execute ( if any ) in <Launch Parameters>
          field. We do not have to pass with out executable in above example.
       5. Click on <Build Debugg and Launch> from <MainMenu><Build>.

       Probably, this will cover <Dos 3> error reported by Maurizio.
       Please test and let me know it debugger is working as intended or 
       something more is needed. I want to close HbIDE Debugger topic.

2014-09-04 21:16 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r350)
  * hbide/misc.prg
    ! Fixed regression introduced in last commit. 
       Thanks Itamar for reporting quickly.

2014-09-04 16:34 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r349)
  * hbqt/qtgui/hbqt_version.ch
    % Version bump to r349.

  * hbqt/qtgui/hbqt_hbqplaintextedit.cpp
  * hbqt/qtgui/hbqt_hbqplaintextedit.h
  * hbqt/qtgui/qth/HBQPlainTextEdit.qth
    + Added method void hbSetDebbedLine( int line ).
       Used to highlight the line in editing source where debugger is stopped.

  * hbide/debugger.ui
  * hbide/debugger1.ui
    + Added: another tabWidget based debugger interface.
       By default new interface is active. In case you want to bring back the 
       old interface, set "hbide_debugger_old=1" environmental variable prior 
       to executing HbIDE.

  * hbide/hbide.hbp
    + Added: debugger1.ui

  * hbide/debugger.prg
  * hbide/main.prg
  * hbide/projmanager.prg
    + Implemented: hightlighting the source lin in editing instance where 
       debugger is stopped at any given point of time. Requested by Francek.

    % The line where debugger is stopped is now always scrolled to center 
       of the editing instance vertically.
    
    + Implemented: expanding the wild cards used in source entries in .hbp 
       which gets reflected in project node in "Projects Tree".
       So if an entry like :  c:\dev_source\vouch\*.prg is encountered then 
       all the .prg(s) deposited in "c:\dev_source\vouch" folder will be 
       added to the project tree. Requested by Francek.

    + Initialization of debugger where it calls the debugged application is 
       now done in a detached process. It may ( not sure ) solve problem 
       reported by Maurizio where custom error handler crashes the application.

    + Many small improvements leading to better debug session.

2014-09-04 00:37 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r348)
  * hbqt/qtgui/hbqt_version.ch
    % Version bump to r348.

  * hbide/debugger.ui
  * hbide/debugger.prg
  * hbide/saveload.prg
  * hbide/setup.ui
    + Implemented: provision to provide source paths which will be used to 
       locate source files inside HbIDE debugger if path to such source 
       could not been located through project file .hbp. Please note that 
       order of such path entries is very much relevant to this protocol.
       HOWTO:
        1. Open <MainMenu><Setup><HbIDE Setup><Projects>.
        2. Click on <Add> button contained in <Source Paths> groupbox.
        3. Navigate to the desired folder in folder selection dialog.
        4. Click "Open". 
        5. Keep a watch on order of folder selection. Sources will be 
           opened from first path they are contained in.
        6. Add as many entries as needed.
        7. To be sure that HbIDE remembers these settings, exit and 
           execute it again.

       Play with the debugger. Please report back if you find bugs or 
       if you need any other feature not there yet.

2014-09-03 22:42 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r347)
  * hbqt/qtgui/hbqt_version.ch
    % Version bump to r347.

  * hbide/debugger.prg
  * hbide/debugger.ui
    + Implimented: copy the debug information contained in various tables 
       onto clipboard. The info is formatted delimited by comma making it 
       compatible with MS Excel. The action can be initiated via clicking 
       on the newly added <Copy to Clipboard> button on top of debugger dock.
       An image displaying how pasting clipboard in notepad will appear is 
       also uplaoded on message at QtContrib group.

2014-09-03 16:56 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r346)
  * hbqt/qtgui/hbqt_version.ch
    % Version bump to r346.

  * hbide/actions.prg
  * hbide/debugger.prg
  * hbide/debugger.ui
  * hbide/projmanager.prg
    - Removed: postpending "_d" with the ${hb_targetname}. It has side-effects
      difficult to manage. For example the project will never be able to 
      resolve sub-projects or library names, etc. Switching from debug to 
      production executable, make a small change in some of your sources 
      so that project is linked again. Thi is the only overhead which I 
      thought of avoiding but ended up in other problems.

    + Implemented: following actions for Watches:
       1. Paste  : adds a new watch by pasting selected text in active 
                   editing instance. It equals to clicking on <Add> icon 
                   and then manually inputting the expression. 
       2. Add    : as usual adds a new record in Watches browser awaiting 
                   input for expression.
       3. Save   : saves the list of Watch expressions into a disk file 
                   with ".wch" extention and prefixed by project name plus 
                   "_". Suppose you provide "first" as the name of the 
                   file in File Selection dialog then saved file will be 
                   like: debuggedProjectName_first.wch. You can have as many 
                   sets as you like. If you select an exiting file then that 
                   will be overwritten with visible expressions.
       4. Restore: restores expressions off the saved .wch files as above.
                   Two options are provided while restoring; 
                   a. Merge loaded expression with existing ones.
                   b. Clear existing expressions and load from file.
       5. Delete : as usual deletes the current selected expression.
       6. Clear  : remove all expressions from the Watches list.

2014-09-02 19:02 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r345)
  * hbqt/qtgui/hbqt_version.ch
    % Version bump to r345.

  * hbide/actions.prg
  * hbide/debugger.prg
  * hbide/docks.prg
  * hbide/hbqtoolbar.prg
  * hbide/main.prg
  * hbide/projmanager.prg
    % Facelift to selected-text toolbar.

    + Implemented: debugger protocol in HbIDE's main-stream build engine.
      POINTS TO NOTE
      --------------
      1. You will always construct a project normally as per 
         production standards.    
      2. You will never add any debug related switches in the .hbp project file.
      3. You will only select <Build Debug and Launch> family of options
         either from the <MainMenu><Build> or via context-menu of project 
         node in <Projects Tree>.
      4. HbIDE will post-pend the built executable with "_d" for debug builds.
      5. HbIDE will create a "debug" sub-folder in the folder pointed-to 
         by -workdir switch. If no such switch is detedted in .hbp then
         ".hbmk/${hb_plat}/${hb_comp}/debug" will be used.
      6. You will never be asked to open the "HbIDE Debugger" dock yourself.
         Any debug built will open it automatically. The debugger interface 
         will close itself once <Exit> is clicked.
      7. HbIDE manages all the complexities of production and debug builds 
         transparently and auomatically without any conflics.

      WHAT ELSE ? Just enjoy.

2014-09-02 12:27 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r344)
  * hbide/debugger.prg
  * hbide/docks.prg
  * hbide/editor.prg
  * hbide/environ.prg
  * hbide/misc.prg
  * hbide/projmanager.prg
    ! Fixed: crashing of selected-text toolbar crashing HbIDE.
       The bug was introduced recently and belonged to the way toolbar 
       was being parented.

    ! Fixed: (hopefully) Saving a project via <Save> button of 
       "Project Properties" dialog where new entries were being prefixed
       by "3rd=" protocol. If you still encounter it please send me the 
       relevant .hbp to investigate further.

    ! Fixed: to handle toggling of break-points inside editing instance 
       while debugger is active.

    % Started: building blocks of embedding debugger in HbIDE's normal 
       build process. Preliminary results are encouraging, stay tuned.

2014-08-31 20:20 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r343)
  * hbide/debugger.prg
  * hbide/projmanager.prg
    ! Fixed: running multiple sessions of same executable.
       Though I am not convinced what I did is the right way. Alex ?

2014-08-31 10:00 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r342)
  * qtcontribs.hbp
    + Added: debug/hwgdebug.hbp

  + debug
  + debug/dbgconnect.prg
  + debug/dbgdop.c
  + debug/debugger.prg
  + debug/hwgdebug.hbp
    + Added: Alexander Kresin's <alex@kresin.ru> application-side debugger 
       library. Many thanks Kresin. You fittingly separated the rectangular 
       and non-rectangular code of Harbour's native debugger.
       I added some missing features which were added to Harbour debugger, 
       probably, later than Kresin wrote his library.

  + hbide/debugger.prg
  + hbide/debugger.ui
  + hbide/resources/debugger.png
    + Added: Alex <alexeyzapolskiy@gmail.com> written HbIDE specific bridge 
       for HWGDebug defined protocol. It was a mammoth work. Thanks Alex.

  * hbide/actions.prg
  * hbide/docks.prg
  * hbide/editor.prg
  * hbide/hbide.hbp
  * hbide/hbide.qrc
  * hbide/main.prg
  * hbide/object.prg
  * hbide/projmanager.prg
  * hbide/saveload.prg
  * hbide/shortcuts.prg
    + Debbuger specific code parts. Mostly by Alex.

  * hbqt/qtgui/hbqt_version.ch
    % Version bump.

  * hbqt/qtgui/hbqtgui.ch
    + Added: few more constants.
  
  * hbqt/qtcore/hbqt.h
    + Added: MSVC specific defines. Proveded by M.Ronaldo, thanks.

  * hbqt/qtgui/qth/HBQPlainTextEdit.qth
  * hbqt/qtgui/hbqt_hbqplaintextedit.cpp
  * hbqt/qtgui/hbqt_hbqplaintextedit.h
    + Added: methods essential to integrate debugger protocol. 
       Courtesy: Alex. I just changed the identifiers to confirm to 
       HbIDE laid rules.
    
    Harbour's debugger is brought to HbIDE by Alex based on Kresin's
    communication layer which separates the user-interface from its core.
    This separation makes it possible to embbed this protocol in any 
    GUI/Console environment and for any type of Harbour/xHarbour 
    compiled application.

    PREREQUITES: ( for this version only. In future theme may change. )
      1. Compile QtContribs (recompile not needed). It will build 
         hwgdebug library and will deposit in the folder with rest of 
         the libraries.

      2. Spread sources belonging to the debugged project on same View.
         Only those sources where you want to put the break-points needs 
         to be visible on the active view.

      3. Put the break-points by clicking on a line on Line-Numbers area
         of editing instance. Such click will toggle the break-point.
         The source line will turn RED if a break-point is installed.

      4. To be on the safer side, exit HbIDE and execute it again.
         All break-points you initiated in previous run will re-appear.

      5. Only build the project. Do not launch. Click on the "Debugger" 
         icon on the main toolbar. A left-hand side docking debugger widget 
         will appear. Resize it to suit your preferences.

      6. Click on "Build" menu on the main menu-bar then click on 
         "Launch Debug". Application will be fired and will stop execution 
         on first break-boint it will encounter. Debugger interface will
         show up data in its many widgets. Rest you all know how to operate
         the debugger. 

      7. Here are some instructions specific to HbIDE interface:
         a. Double-click on any work-area entry will refresh "Current Record"
            displaying record information of clicked work-area.

         b. Double-click on any entry in "Variables" table will refresh the 
            "Object Inspector" widget containing relevant information of 
            clicked variable. Only variables of type (O)bject or (A)rray 
            can be inspected this way. Currently array can be inspected 
            for primary elements only. Sub-arrays values cannot be inspected.

         c. Click on "Add" button to intiate a new "Watch" and then 
            double-click in "Expression" field. Punch-in or copy a Harbour
            expression and press <Enter>. Its current value will be 
            reflected in "Value" field. You can add as many "Watches" 
            as you like. To delete a watch first select the entry and then 
            click on "Delete" button. Watches are not saved in current vesrion.

    ASSUMPTION: ( for current version only )
      1. Project file (.hbp), sources (.prg.c.cpp.hb), executable ({win}.exe)
         must reside in same folder.
  
      2. Project file (.hbp) must contain following entries:
           -b
           -lhwgdebug
           -lhbdebug

      3. Possessing some knowledge about Harbour debugger can greatly help
         you to understand the basics of debugger but certainly is not 
         neccessary.

    Many more enhancements are planned for the final version. This is just the 
    begining. The most important enhancement should be to implement it 
    transparently inside <Build and Launch> mechanism without the need to 
    add debugger specific switches inside .hbp. For this to happen a hbmk2 
    provided macro "hb_debug" or similar is required to be used in -workdir 
    switch. If you happen to know if this macro is available in hbmk2, please 
    let me know. 
       
2014-08-17 22:18 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r341)
  * hbqtwidgets/dashboard.prg
    ! Fixed: a regression after recent fixes in HbQt where clicking  
       X on certain dashboard objects was producing RTE.
       Pointed by Itamar, thanks.

2014-08-17 13:04 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r340)
  * hbide/docks.prg
    ! Fixed placement of selected-text-context-toolbar within the 
       viewport of editing instance with some rational jumping 
       above the cursor row if current row in selection is at the 
       bottom of the viewport. 

  * hbqt/hbmk2_qt.hb
    % Using hash instead of array to hold QObject derived classes.  
       It may cause a marginal compilation speed improvement.

2014-08-16 11:21 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r339)
  * hbide/edit.prg
    ! Fixed (hopefully) font issue on Linux for editing instances.
      Reported by Juan. Please report if it fixes the issue.

2014-08-16 00:55 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r338)
  * hbide/saveload.prg
    ! Fixed <Setup>HbIDE Setup><Misc><PointSize> edited directly was 
      not setting the font to editied value. Pointed by Juan, thanks.

2014-08-13 18:53 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r337)
  + hbqt/tests/qt_in_gt.prg
    Added demo to execute HbQt based modal dialogs.
    This demo facilitates you to consider porting different parts of 
    your console application to the GUI world. Many parts of the 
    console application qualify for GUI interface without sacrificing 
    the our beloved data entry architecture.

2014-08-13 13:53 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r336)
  * hbqtwidgets/hbqtbrowse.prg
    ! Fixed: recent regression caused by updating QHeaderView() class.

2014-08-13 12:57 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r335)
  * hbqt/qtgui/qth/QFileDialog.qth
    % Minor.

  * hbqt/qtgui/qth/QHeaderView.qth
    + Updated the whole class with Qt 5.3 methods.

2014-08-12 13:17 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r334)
  * hbqt/tests/demoqt.prg
    ! Fixed CPU usage, QFileDialog() and other dialogs calls.
       Pointed by Itamar, thanks.

2014-08-09 10:27 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r333)
  + hbqt/tests/sensors.hbp
  + hbqt/tests/sensors.prg
  + hbqt/tests/sensors.ui
    + Added application demonstrating usage of QtSensors module.
       It is exact replica of Qt's own example. On desktop it might not 
       be useful but on mobile platforms it has great usage.

2014-08-09 10:20 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r332)
  * hbqt/hbmk2_qt.hb
  * hbqt/qtsensors/hbqtsensors.hbp
  * hbqt/qtsensors/hbqtsensors.hbx
  * hbqt/qtsensors/qth/filelist.hbm
  + hbqt/qtsensors/qth/QSensorBackend.qth
  + hbqt/qtsensors/qth/QSensorBackendFactory.qth
  + hbqt/qtsensors/qth/QSensorChangesInterface.qth
  + hbqt/qtsensors/qth/QSensorGesture.qth
  + hbqt/qtsensors/qth/QSensorGestureManager.qth
  + hbqt/qtsensors/qth/QSensorGesturePluginInterface.qth
  + hbqt/qtsensors/qth/QSensorGestureRecognizer.qth
  + hbqt/qtsensors/qth/QSensorManager.qth
  + hbqt/qtsensors/qth/QSensorPluginInterface.qth
    + Addded remaining classes from QtSensors module. The suit is complete now.

2014-08-08 18:42 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r331)
  + hbqt/hbqtsensors.hbc
    + Missing entry in previous commit.

  * qtcontribs.hbp
    + Added QtSensors module to compile hbqtsensors library.

2014-08-08 17:57 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r330)
  * hbqt/hbmk2_qt.hb
    + Added new QObject derived classes.

  * hbqt/qtgui/hbqt_init.cpp
    + Added one more signal.

  * hbqt/qtgui/hbqtgui.ch
    + Added constants related to QtSensors module.

  * hbqt/qtgui/qth/QGridLayout.qth
  * hbqt/qtgui/qth/QScroller.qth
  * hbqt/qtgui/qth/QSpacerItem.qth
    + Added left-out public function members.

  + hbqt/qtsensors
  + hbqt/qtsensors/doc
  + hbqt/qtsensors/doc/en
  + hbqt/qtsensors/hbqt_init.cpp
  + hbqt/qtsensors/hbqtsensors.ch
  + hbqt/qtsensors/hbqtsensors.hbc
  + hbqt/qtsensors/hbqtsensors.hbm
  + hbqt/qtsensors/hbqtsensors.hbp
  + hbqt/qtsensors/hbqtsensors.hbx
  + hbqt/qtsensors/hbqtsensorss.hbp
  + hbqt/qtsensors/qth
  + hbqt/qtsensors/qth/filelist.hbm
  + hbqt/qtsensors/qth/QAccelerometer.qth
  + hbqt/qtsensors/qth/QAccelerometerFilter.qth
  + hbqt/qtsensors/qth/QAccelerometerReading.qth
  + hbqt/qtsensors/qth/QAltimeter.qth
  + hbqt/qtsensors/qth/QAltimeterFilter.qth
  + hbqt/qtsensors/qth/QAltimeterReading.qth
  + hbqt/qtsensors/qth/QAmbientLightFilter.qth
  + hbqt/qtsensors/qth/QAmbientLightReading.qth
  + hbqt/qtsensors/qth/QAmbientLightSensor.qth
  + hbqt/qtsensors/qth/QAmbientTemperatureFilter.qth
  + hbqt/qtsensors/qth/QAmbientTemperatureReading.qth
  + hbqt/qtsensors/qth/QAmbientTemperatureSensor.qth
  + hbqt/qtsensors/qth/QCompass.qth
  + hbqt/qtsensors/qth/QCompassFilter.qth
  + hbqt/qtsensors/qth/QCompassReading.qth
  + hbqt/qtsensors/qth/QGyroscope.qth
  + hbqt/qtsensors/qth/QGyroscopeFilter.qth
  + hbqt/qtsensors/qth/QGyroscopeReading.qth
  + hbqt/qtsensors/qth/QHolsterFilter.qth
  + hbqt/qtsensors/qth/QHolsterReading.qth
  + hbqt/qtsensors/qth/QHolsterSensor.qth
  + hbqt/qtsensors/qth/QIRProximityFilter.qth
  + hbqt/qtsensors/qth/QIRProximityReading.qth
  + hbqt/qtsensors/qth/QIRProximitySensor.qth
  + hbqt/qtsensors/qth/QLightFilter.qth
  + hbqt/qtsensors/qth/QLightReading.qth
  + hbqt/qtsensors/qth/QLightSensor.qth
  + hbqt/qtsensors/qth/QMagnetometer.qth
  + hbqt/qtsensors/qth/QMagnetometerFilter.qth
  + hbqt/qtsensors/qth/QMagnetometerReading.qth
  + hbqt/qtsensors/qth/QOrientationFilter.qth
  + hbqt/qtsensors/qth/QOrientationReading.qth
  + hbqt/qtsensors/qth/QOrientationSensor.qth
  + hbqt/qtsensors/qth/QPressureFilter.qth
  + hbqt/qtsensors/qth/QPressureReading.qth
  + hbqt/qtsensors/qth/QPressureSensor.qth
  + hbqt/qtsensors/qth/QProximityFilter.qth
  + hbqt/qtsensors/qth/QProximityReading.qth
  + hbqt/qtsensors/qth/QProximitySensor.qth
  + hbqt/qtsensors/qth/QRotationFilter.qth
  + hbqt/qtsensors/qth/QRotationReading.qth
  + hbqt/qtsensors/qth/QRotationSensor.qth
  + hbqt/qtsensors/qth/QSensor.qth
  + hbqt/qtsensors/qth/QSensorFilter.qth
  + hbqt/qtsensors/qth/QSensorReading.qth
  + hbqt/qtsensors/qth/QTapFilter.qth
  + hbqt/qtsensors/qth/QTapReading.qth
  + hbqt/qtsensors/qth/QTapSensor.qth
  + hbqt/qtsensors/qth/QTiltFilter.qth
  + hbqt/qtsensors/qth/QTiltReading.qth
  + hbqt/qtsensors/qth/QTiltSensor.qth
    + Added QtSensors module which was introcuced in Qt 5.1.

2014-08-04 08:23 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r329)
  * hbide/misc.prg
  * hbide/projmanager.prg
  * hbide/saveload.prg
    ! Fixed to render the same look and feel of .ui dialogs.
       A regression caused by Qt Creator's :setStyleSheet() handelling 
       in Qt 5x.

2014-08-02 18:10 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r328)
  * hbide/docks.prg
  * hbide/edit.prg
  * hbide/editor.prg
  * hbide/main.prg
  * hbide/misc.prg
  * hbide/projmanager.prg
  * hbide/saveload.prg
  * hbide/sources.prg
    + Added a futuristic argument in save/load of sources protocol.

    + Implemented a sub-menu in context-menu of "Prohject Tree" which 
       offers to "Compile and Launch with..." one of the selected 
       environment. The action is equivalent to merging two actions 
       1. Select an Environment
       2. Build and Launch
       from the same context menu. 

    ; It is a productivity feature. It is usefule, rather extremely useful, 
      where one develops applications with multiple compilers and versions.
      For me it is useful for Android based applications which I have to
      compile for desktop also (mostly) to see if all components are working,
      and when satisfied, compile for Android. This feature facilitates to 
      stay with one environment for all projects and allows me to select 
      other environment for selected projects.

2014-08-02 13:54 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r327)
  * hbqt/qtgui/hbqt_hbqsyntaxhighlighter.cpp
  * hbqt/qtgui/hbqt_hbqsyntaxhighlighter.h
  * hbqt/qtgui/qth/HBQSyntaxHighlighter.qth
    + Added method void hbClear().

  * hbide/selectsources.ui
    % Minor.

  * hbide/actions.prg
  * hbide/console.prg
  * hbide/edit.prg
  * hbide/editor.prg
  * hbide/themes.prg
    % Editing instance context menu option "Apply Theme" => "Change Theme".

    ! Fixed "Change Theme" correctly applying the changed theme highlighting.

    + Implemented availability of "Themes" list as context-menu options in 
       context menu of editing instance under "Change Theme" sub-menu. 
       Before another interface (not very intuitive) was presented 
       to select a theme.

    + Implemented jumping to last editing position with CTRL+L.
       So far CTRL+L was returning to last viewing position after clicks 
       to Functions List tree. This was limiting functionality and is available
       as is. It is logical that one always needs to return to position he 
       left as editing before navigating to other parts of the source by 
       arrow keys, scrollbar actions, or search operations.
  
    ! Fixed not to generate RTE when CUIEditor is invoked. This interface 
       was working fine absolutely. There seems to be some changes how 
       Inkey( 0 ) behaves in Harbour. Probably it is not releasing CPU 
       time-slices any more, but I am not sure. In a combined CUI and GUI 
       application Inkey( 0 ) may force GUI components to freeze.
       I need to ask Przemek for analysis on this part. I just changed 
       Inkey( 0 ) to Inkey() and everything worked.

    % Changed HbIDE main toolbar size to confirm to device pixels than 
       absolute pixels per changes in other toolbars. The effect is evident in 
       latest very high resolution monitors like "Retina Displays".

2014-08-01 07:55 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r326)
  * hbide/actions.prg
    ! Attempted: HbIDE toolbars to have uniform size on any device.
       Reported by Massimo, thanks. Please respond after recompile.

  * hbide/edit.prg
    ! Fixed: a regression where double clicking on quoted text was 
       generating RTE.

  * hbide/editor.prg
    % Try to apply re-highlighting if theme is changed, but no success so far.

  * hbide/main.prg
    % Minor.

  * hbide/themes.prg
    ! Fixed: regression where applying a new theme was GPFfing.
       Reported by with proc trail by Juan, thanks.

  * hbqtwidgets/alert.prg
    % Changed: third parameter <cColorNorm> now accepts color string with 
       normal and highlighted parts like : "W+/R,W/N". The second part is 
       used to draw the buttons. It gives Alert() a modern look and feel.

2014-07-31 09:01 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r325)
  * hbqt/qtgui/qth/QStandardItem.qth
  * hbqt/qtgui/qth/QStandardItemModel.qth
    ! Fixed: constructors. 
       Pointed by Luigi, thanks.

2014-07-29 14:46 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r324)
  * hbide/editor.prg
  * hbqtwidgets/hbqtdbu.prg
    ! Fixed: regression where typing "test->" was generating RTE.
       Reported by Juan, thanks.

    ; JUST TO REFRESH - if you are writing some code based on a table fields,
                        and that table is open in IdeDBU, then fields list 
                        list will be presented to choose one from after 
                        typing first letter of a field after aliased 
                        expression, like -  TEST->f.

2014-07-29 14:20 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r323)
  * hbqt/qtgui/hbqtgui.ch
    + Added: missing QNetwork*_* constants.

2014-07-29 00:47 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r322)
  * hbqt/qtgui/hbqt_flickcharm.cpp
    % Pacified recently introduced warnings.

  * hbide/setup.ui
    + Added: <HbIDE Setup><Projects><Include Paths to Open Header Files> 
       Groupbox containing a listbox and add,delete buttons.

  * hbide/actions.prg
  * hbide/edit.prg
  * hbide/editor.prg
  * hbide/functions.prg
  * hbide/main.prg
  * hbide/saveload.prg
    + Implemented: Opening of #included files directly from within the 
       editing instance. The file is opened in a always-on-top widget 
       and is supported by "Evening Glamour" theme. The window has two 
       actions only besides standard editing menu (cut|copy|paste):
        1. CTRL+P  Print Preview
        2. CTRL_S  Save

    ; HOW TO CONFIGURE
       1. Open <Setup><HbIDE Setup><Projects>.
       2. In <Include Paths to Open Header Files> groupbox, click on <Add>.
       3. Select a folder containing header files with .ch and/or .h ext.
       4. Add as many folders you might have for your projects.
       5. Keep in mind the order of the provided folders. A header 
          is searched sequentially and is opened from first location 
          it is found.
       6. Once first editing window is opened, resize an position where 
          it does not hide editing tabbed area of HbIDE. Next window 
          window will inherit the size and position of previous window.
          You can close it when not required. Next invokation of same 
          header will show the closed instance exactly on same position 
          where it was before. Note that this info is not saved with 
          HbIDE settings. You will rearrange the first invoked window 
          again.
       7. Click <Close> when finished.

    ; HOW TO INVOKE
       1. Double-Click on the filename part of the header line.
          #include "hbqtgui.ch" - click somewhere inside "hbqtgui".
       2. See a tiny window appearing on top of HbIDE interface.
          Rearrange and resize per desktop territory. 

          That's it.   

    ; This is a very useful and productive feature from a developers 
      point-of-view. At times I ever wished to have this feature to save 
      many actions to search where the header is deposited.

    + Enhanced: how keywords in dictionaries were being loaded and managed.
       This has improved the opening of files and editing flow many-fold.

2014-07-27 20:46 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r321)
  * hbqtwidgets/hbqtdbu.prg
    ! Fixed: a bug being result of the latest developments in HbQt.
       The GPF was produced when a browser instance was closed via 
       X button click in certain circumstanced. Mere rearrangement of 
       source lines fixed this issue.

    + Added: toolbar actions and implementation:
      1. Save Environment    - Saves the state of splitters, panels, tables
                               etc. in the default "hbide.dbu" file.
      2. Save Environment As - Asks for a filename with .dbu extention
                               and saves above values therein.
      3. Merge Environment   - Asks to select a .dbu file and merges the 
                               environment with existing state.

      This feature is very useful to embed HbDBU as a COM interface into 
      your application. Now This is implemented in HbIDE, read below.

  + hbqtwidgets/resources/echeck.png
  + hbqtwidgets/resources/freeze-left.png
  + hbqtwidgets/resources/freeze-right.png
  + hbqtwidgets/resources/rest-env.png
  + hbqtwidgets/resources/save-env.png

  * hbqtwidgets/hbqtwidgets.qrc
    + Added: above images.

  * hbide/hbide.hbp
    + Added: dbumgr.prg

  * hbdbu/dbu.prg
    % Minor.

  * hbide/setup.ui
    + Added: Page <Projects>.

  * hbide/actions.prg
  + hbide/dbumgr.prg
  * hbide/docks.prg
  * hbide/edit.prg
  * hbide/editor.prg
  * hbide/environ.prg
  * hbide/main.prg
  * hbide/projmanager.prg
  * hbide/saveload.prg
    + New Features
      ------------
      1. Return to last viewing / editing position with CTRL+L if naviaging 
         via clicks in <Functions List>. Feature requested by Alex. 
         I wanted to enhance it to return last position with all navigational
         keys like UP | DOWN | PAGEUP | PAGEDN | SCROOLBAR ACTIONS |ETC
         but faced some issue. Will revisit it later.

      2. Column-Selection protocol is enhaced with a formatting feature
         where text on the LEFT or RIGHT of selection marker can be 
         aligned up the selection-marker.
         HOW TO:
          1. Switch on the column-selection via <Toggle Selection Mode> icon.
          2. Place cursor on a column which will attract the alignment.
          3. Select rows by Shift+Down Arrow which are subject to have aligned.
             Make sure that you do not select any other columns and the 
             selection block is visible as a thin vertical line. Let us
             call it as "selection-marker".
          4. On the Selected-Text-Toolbar, which will popup as soon as you 
             start selection process, click the last icon <Align At>.
          5. In the resulting input dialog, type "\L" or "\R" without quotes.
          6. If you typed \L then all text to the right of selection-marker 
             will align-left to its postion. If you typed \R then all the text 
             on the left of selection marker will align-right to marker
             positionn.
          ;  The feature is very handy in formatting source where some parts 
             or many rows needs to be aligned at a certain position.

          ;  Already available features from this interface ( just to refresh )
             \[0-9]   -   Regular Expression.
             \nn      -   Where <nn> represents the column position.

      3. Opening a context menu with right-click on the tabs in editors 
         interface, requested by Jayadev. Currently this offers 
         <Save>, <Close> and <Print> options. let me know what else can 
         be added here.
             
      4. <Build and Launch> now supports extended protocol to launch the 
         executable in addition to existing protocol. The extended protocol 
         facilitates to setup the current envirnment settings before 
         launching the application. Current "Environment" means the entry
         shown in "Env:" section of HbIDE's statusbar. This effectively 
         means all the SETs defined in the hbide.env#<env:> section are 
         set via shell command and then application is fired. It is equivalent 
         to running a batch file on command prompt which also calls the 
         application. 

         This feature facilitates you to SET the environment variables 
         from outside the application. From a developers point of view 
         it allows you to compile a single application, in a single session
         of HbIDE, for multiple compilers and versions. I use this feature 
         extensively for HbQt based applications against Qt 4x and 5x.

         HOW TO:

         1. Open and navigate to <Main Menu><Setup><HbIDE Setup><Projects>.
         2. Check the Extended <Build and Launch> checkbox.
         3. <Compile and Launch> some project.
         4. Give attention to a console window appearing for a fraction of 
            a second and then disappearing, just prior to compiled app
            is launched.

         ;  The only drawback of this feature is the appearnce of console
            window but enhances your productivity many-fold.

    ! Fixes
      -----
      1. Adding | Modifying a new source entry in Project file .hbp via 
         <Project Properies> dialog was not reflecting the changes in 
         <Project Tree> immediately. Pointed out by Jayadev.

    % Changes 
      -------
      1. Background color of <Selected Text Toolbar> to have a more sobbering 
         but distinct look so that it is not lost in the background text
         and is prominently visible.

      2. Positioning of <Selected Text Toolbar> has been reworked to 
         facilitate better experience.

      3. IdeDBU, HbIDE contained component, is switched to, and in 
         synchronization with, HbDBU. The saved environment files (.dbu) 
         are shareable. Infact the fully functional HbQtDbu is embedded 
         in HbIDE as like a COM interface. This demonstrates the usefulness 
         and versatility of HbQtDbu which you can embbed in your 
         applications also.

2014-07-26 23:40 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r320)
  * hbqt/qtcore/hbqt_init.cpp
    ! Fixed: Signal based on QModelIndex, QModelIndex, silly typo.

  * hbqt/qtgui/qth/QTabWidget.qth
    + Added: QTabBar * tabBar() const.

2014-07-24 18:25 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r319)
  * hbqt/qtcore/qth/filelist.hbm
  + hbqt/qtcore/qth/QParallelAnimationGroup.qth
  + hbqt/qtcore/qth/QPauseAnimation.qth
  + hbqt/qtcore/qth/QSequentialAnimationGroup.qth
  * hbqt/qtcore/qth/QVariantAnimation.qth

  * hbqt/qtgui/qth/QLayout.qth

  * hbqt/qtsql/qth/filelist.hbm
  * hbqt/qtsql/qth/QSqlDatabase.qth
  * hbqt/qtsql/qth/QSqlDriver.qth
  + hbqt/qtsql/qth/QSqlDriverCreator.qth
  + hbqt/qtsql/qth/QSqlDriverCreatorBase.qth
  + hbqt/qtsql/qth/QSqlDriverPlugin.qth
  * hbqt/qtsql/qth/QSqlError.qth
  * hbqt/qtsql/qth/QSqlField.qth
  * hbqt/qtsql/qth/QSqlIndex.qth
  * hbqt/qtsql/qth/QSqlQuery.qth
  * hbqt/qtsql/qth/QSqlQueryModel.qth
  * hbqt/qtsql/qth/QSqlRecord.qth
  + hbqt/qtsql/qth/QSqlRelation.qth
  + hbqt/qtsql/qth/QSqlRelationalDelegate.qth
  * hbqt/qtsql/qth/QSqlRelationalTableModel.qth
  * hbqt/qtsql/qth/QSqlResult.qth
  * hbqt/qtsql/qth/QSqlTableModel.qth
    + Added: some more classes and completed constructors for QtSql
       implemented classes.

    ; Thanks to Alex who has show the group that how QtSql modules can 
      be used for production. Please note that you have to recompile 
      Sql drivers client libraries yourselves, as demonstrated by Alex.
      This is beyond the scope of HbQt to include those drivers in the 
      repository. This was the main reason I never gave enough attention 
      to QSql classes constructors. 

2014-07-15 11:30 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r318)
  * hbqt/qtcore/hbqt_misc.prg
    + Added: method isConnected( cnEvent )
       Requested by Luigi.

2014-07-08 11:20 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r317)
  * hbqt/hbmk2_qt.hb
    + Added: QGuiApplication and QInputMethod as QObject derived classes.

  * hbqt/qtgui/hbqtgui.ch
    + Added: QInputMethod_* constants.

  * hbqt/qtgui/qth/filelist.hbm
    + Added: QGuiApplication, QInputMethod and QStyleHints classes.

  * hbqt/qtgui/qth/QApplication.qth
    ! Changed: inheritance from QCoreApplication => QGuiApplication.

  + hbqt/qtgui/qth/QGuiApplication.qth
  + hbqt/qtgui/qth/QInputMethod.qth
  + hbqt/qtgui/qth/QStyleHints.qth
    + Added: Qt 5x introduced classes.

  ; WARNING: now onwards Qt 4x support is dropped altogether.

2014-07-06 01:50 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r316)
  + hbqt/qzxing
  + hbqt/qzxing/CameraImageWrapper.cpp
  + hbqt/qzxing/CameraImageWrapper.h
  + hbqt/qzxing/COPYING
  + hbqt/qzxing/doc
  + hbqt/qzxing/doc/en
  + hbqt/qzxing/hbqt_hbqzxing.cpp
  + hbqt/qzxing/hbqt_hbqzxing.h
  + hbqt/qzxing/hbqt_init.cpp
  + hbqt/qzxing/hbqtzxing.ch
  + hbqt/qzxing/hbqtzxing.hbc
  + hbqt/qzxing/hbqtzxing.hbm
  + hbqt/qzxing/hbqtzxing.hbp
  + hbqt/qzxing/hbqtzxing.hbx
  + hbqt/qzxing/hbqtzxings.hbp
  + hbqt/qzxing/imagehandler.cpp
  + hbqt/qzxing/imagehandler.h
  + hbqt/qzxing/NOTICE
  + hbqt/qzxing/qth
  + hbqt/qzxing/qth/filelist.hbm
  + hbqt/qzxing/qth/QZXing.qth
  + hbqt/qzxing/QZXing_global.h
  + hbqt/qzxing/zxing
  + hbqt/qzxing/zxing/bigint
  + hbqt/qzxing/zxing/bigint/BigInteger.cc
  + hbqt/qzxing/zxing/bigint/BigInteger.hh
  + hbqt/qzxing/zxing/bigint/BigIntegerAlgorithms.cc
  + hbqt/qzxing/zxing/bigint/BigIntegerAlgorithms.hh
  + hbqt/qzxing/zxing/bigint/BigIntegerLibrary.hh
  + hbqt/qzxing/zxing/bigint/BigIntegerUtils.cc
  + hbqt/qzxing/zxing/bigint/BigIntegerUtils.hh
  + hbqt/qzxing/zxing/bigint/BigUnsigned.cc
  + hbqt/qzxing/zxing/bigint/BigUnsigned.hh
  + hbqt/qzxing/zxing/bigint/BigUnsignedInABase.cc
  + hbqt/qzxing/zxing/bigint/BigUnsignedInABase.hh
  + hbqt/qzxing/zxing/bigint/ChangeLog
  + hbqt/qzxing/zxing/bigint/NumberlikeArray.hh
  + hbqt/qzxing/zxing/bigint/README
  + hbqt/qzxing/zxing/win32
  + hbqt/qzxing/zxing/win32/zxing
  + hbqt/qzxing/zxing/win32/zxing/iconv.h
  + hbqt/qzxing/zxing/win32/zxing/msvc
  + hbqt/qzxing/zxing/win32/zxing/msvc/stdint.h
  + hbqt/qzxing/zxing/win32/zxing/win_iconv.c
  + hbqt/qzxing/zxing/zxing
  + hbqt/qzxing/zxing/zxing/aztec
  + hbqt/qzxing/zxing/zxing/aztec/AztecDetectorResult.cpp
  + hbqt/qzxing/zxing/zxing/aztec/AztecDetectorResult.h
  + hbqt/qzxing/zxing/zxing/aztec/AztecReader.cpp
  + hbqt/qzxing/zxing/zxing/aztec/AztecReader.h
  + hbqt/qzxing/zxing/zxing/aztec/decoder
  + hbqt/qzxing/zxing/zxing/aztec/decoder/AztecDecoder.cpp
  + hbqt/qzxing/zxing/zxing/aztec/decoder/Decoder.h
  + hbqt/qzxing/zxing/zxing/aztec/detector
  + hbqt/qzxing/zxing/zxing/aztec/detector/AztecDetector.cpp
  + hbqt/qzxing/zxing/zxing/aztec/detector/Detector.h
  + hbqt/qzxing/zxing/zxing/BarcodeFormat.cpp
  + hbqt/qzxing/zxing/zxing/BarcodeFormat.h
  + hbqt/qzxing/zxing/zxing/Binarizer.cpp
  + hbqt/qzxing/zxing/zxing/Binarizer.h
  + hbqt/qzxing/zxing/zxing/BinaryBitmap.cpp
  + hbqt/qzxing/zxing/zxing/BinaryBitmap.h
  + hbqt/qzxing/zxing/zxing/ChecksumException.cpp
  + hbqt/qzxing/zxing/zxing/ChecksumException.h
  + hbqt/qzxing/zxing/zxing/common
  + hbqt/qzxing/zxing/zxing/common/Array.h
  + hbqt/qzxing/zxing/zxing/common/BitArray.cpp
  + hbqt/qzxing/zxing/zxing/common/BitArray.h
  + hbqt/qzxing/zxing/zxing/common/BitArrayIO.cpp
  + hbqt/qzxing/zxing/zxing/common/BitMatrix.cpp
  + hbqt/qzxing/zxing/zxing/common/BitMatrix.h
  + hbqt/qzxing/zxing/zxing/common/BitSource.cpp
  + hbqt/qzxing/zxing/zxing/common/BitSource.h
  + hbqt/qzxing/zxing/zxing/common/CharacterSetECI.cpp
  + hbqt/qzxing/zxing/zxing/common/CharacterSetECI.h
  + hbqt/qzxing/zxing/zxing/common/Counted.h
  + hbqt/qzxing/zxing/zxing/common/DecoderResult.cpp
  + hbqt/qzxing/zxing/zxing/common/DecoderResult.h
  + hbqt/qzxing/zxing/zxing/common/detector
  + hbqt/qzxing/zxing/zxing/common/detector/JavaMath.h
  + hbqt/qzxing/zxing/zxing/common/detector/MathUtils.h
  + hbqt/qzxing/zxing/zxing/common/detector/MonochromeRectangleDetector.cpp
  + hbqt/qzxing/zxing/zxing/common/detector/MonochromeRectangleDetector.h
  + hbqt/qzxing/zxing/zxing/common/detector/WhiteRectangleDetector.cpp
  + hbqt/qzxing/zxing/zxing/common/detector/WhiteRectangleDetector.h
  + hbqt/qzxing/zxing/zxing/common/DetectorResult.cpp
  + hbqt/qzxing/zxing/zxing/common/DetectorResult.h
  + hbqt/qzxing/zxing/zxing/common/GlobalHistogramBinarizer.cpp
  + hbqt/qzxing/zxing/zxing/common/GlobalHistogramBinarizer.h
  + hbqt/qzxing/zxing/zxing/common/GreyscaleLuminanceSource.cpp
  + hbqt/qzxing/zxing/zxing/common/GreyscaleLuminanceSource.h
  + hbqt/qzxing/zxing/zxing/common/GreyscaleRotatedLuminanceSource.cpp
  + hbqt/qzxing/zxing/zxing/common/GreyscaleRotatedLuminanceSource.h
  + hbqt/qzxing/zxing/zxing/common/GridSampler.cpp
  + hbqt/qzxing/zxing/zxing/common/GridSampler.h
  + hbqt/qzxing/zxing/zxing/common/HybridBinarizer.cpp
  + hbqt/qzxing/zxing/zxing/common/HybridBinarizer.h
  + hbqt/qzxing/zxing/zxing/common/IllegalArgumentException.cpp
  + hbqt/qzxing/zxing/zxing/common/IllegalArgumentException.h
  + hbqt/qzxing/zxing/zxing/common/PerspectiveTransform.cpp
  + hbqt/qzxing/zxing/zxing/common/PerspectiveTransform.h
  + hbqt/qzxing/zxing/zxing/common/Point.h
  + hbqt/qzxing/zxing/zxing/common/reedsolomon
  + hbqt/qzxing/zxing/zxing/common/reedsolomon/GenericGF.cpp
  + hbqt/qzxing/zxing/zxing/common/reedsolomon/GenericGF.h
  + hbqt/qzxing/zxing/zxing/common/reedsolomon/GenericGFPoly.cpp
  + hbqt/qzxing/zxing/zxing/common/reedsolomon/GenericGFPoly.h
  + hbqt/qzxing/zxing/zxing/common/reedsolomon/ReedSolomonDecoder.cpp
  + hbqt/qzxing/zxing/zxing/common/reedsolomon/ReedSolomonDecoder.h
  + hbqt/qzxing/zxing/zxing/common/reedsolomon/ReedSolomonException.cpp
  + hbqt/qzxing/zxing/zxing/common/reedsolomon/ReedSolomonException.h
  + hbqt/qzxing/zxing/zxing/common/Str.cpp
  + hbqt/qzxing/zxing/zxing/common/Str.h
  + hbqt/qzxing/zxing/zxing/common/StringUtils.cpp
  + hbqt/qzxing/zxing/zxing/common/StringUtils.h
  + hbqt/qzxing/zxing/zxing/datamatrix
  + hbqt/qzxing/zxing/zxing/datamatrix/DataMatrixReader.cpp
  + hbqt/qzxing/zxing/zxing/datamatrix/DataMatrixReader.h
  + hbqt/qzxing/zxing/zxing/datamatrix/DataMatrixVersion.cpp
  + hbqt/qzxing/zxing/zxing/datamatrix/decoder
  + hbqt/qzxing/zxing/zxing/datamatrix/decoder/BitMatrixParser.h
  + hbqt/qzxing/zxing/zxing/datamatrix/decoder/DataBlock.h
  + hbqt/qzxing/zxing/zxing/datamatrix/decoder/DataMatrixBitMatrixParser.cpp
  + hbqt/qzxing/zxing/zxing/datamatrix/decoder/DataMatrixDataBlock.cpp
  + hbqt/qzxing/zxing/zxing/datamatrix/decoder/DataMatrixDecodedBitStreamParser.cpp
  + hbqt/qzxing/zxing/zxing/datamatrix/decoder/DataMatrixDecoder.cpp
  + hbqt/qzxing/zxing/zxing/datamatrix/decoder/DecodedBitStreamParser.h
  + hbqt/qzxing/zxing/zxing/datamatrix/decoder/Decoder.h
  + hbqt/qzxing/zxing/zxing/datamatrix/detector
  + hbqt/qzxing/zxing/zxing/datamatrix/detector/CornerPoint.h
  + hbqt/qzxing/zxing/zxing/datamatrix/detector/DataMatrixCornerPoint.cpp
  + hbqt/qzxing/zxing/zxing/datamatrix/detector/DataMatrixDetector.cpp
  + hbqt/qzxing/zxing/zxing/datamatrix/detector/DataMatrixDetectorException.cpp
  + hbqt/qzxing/zxing/zxing/datamatrix/detector/Detector.h
  + hbqt/qzxing/zxing/zxing/datamatrix/detector/DetectorException.h
  + hbqt/qzxing/zxing/zxing/datamatrix/Version.h
  + hbqt/qzxing/zxing/zxing/DecodeHints.cpp
  + hbqt/qzxing/zxing/zxing/DecodeHints.h
  + hbqt/qzxing/zxing/zxing/Exception.cpp
  + hbqt/qzxing/zxing/zxing/Exception.h
  + hbqt/qzxing/zxing/zxing/FormatException.cpp
  + hbqt/qzxing/zxing/zxing/FormatException.h
  + hbqt/qzxing/zxing/zxing/IllegalStateException.h
  + hbqt/qzxing/zxing/zxing/InvertedLuminanceSource.cpp
  + hbqt/qzxing/zxing/zxing/InvertedLuminanceSource.h
  + hbqt/qzxing/zxing/zxing/LuminanceSource.cpp
  + hbqt/qzxing/zxing/zxing/LuminanceSource.h
  + hbqt/qzxing/zxing/zxing/multi
  + hbqt/qzxing/zxing/zxing/multi/ByQuadrantReader.cpp
  + hbqt/qzxing/zxing/zxing/multi/ByQuadrantReader.h
  + hbqt/qzxing/zxing/zxing/multi/GenericMultipleBarcodeReader.cpp
  + hbqt/qzxing/zxing/zxing/multi/GenericMultipleBarcodeReader.h
  + hbqt/qzxing/zxing/zxing/multi/MultipleBarcodeReader.cpp
  + hbqt/qzxing/zxing/zxing/multi/MultipleBarcodeReader.h
  + hbqt/qzxing/zxing/zxing/multi/qrcode
  + hbqt/qzxing/zxing/zxing/multi/qrcode/detector
  + hbqt/qzxing/zxing/zxing/multi/qrcode/detector/MultiDetector.cpp
  + hbqt/qzxing/zxing/zxing/multi/qrcode/detector/MultiDetector.h
  + hbqt/qzxing/zxing/zxing/multi/qrcode/detector/MultiFinderPatternFinder.cpp
  + hbqt/qzxing/zxing/zxing/multi/qrcode/detector/MultiFinderPatternFinder.h
  + hbqt/qzxing/zxing/zxing/multi/qrcode/detector/tmp
  + hbqt/qzxing/zxing/zxing/multi/qrcode/QRCodeMultiReader.cpp
  + hbqt/qzxing/zxing/zxing/multi/qrcode/QRCodeMultiReader.h
  + hbqt/qzxing/zxing/zxing/MultiFormatReader.cpp
  + hbqt/qzxing/zxing/zxing/MultiFormatReader.h
  + hbqt/qzxing/zxing/zxing/NotFoundException.h
  + hbqt/qzxing/zxing/zxing/oned
  + hbqt/qzxing/zxing/zxing/oned/CodaBarReader.cpp
  + hbqt/qzxing/zxing/zxing/oned/CodaBarReader.h
  + hbqt/qzxing/zxing/zxing/oned/Code128Reader.cpp
  + hbqt/qzxing/zxing/zxing/oned/Code128Reader.h
  + hbqt/qzxing/zxing/zxing/oned/Code39Reader.cpp
  + hbqt/qzxing/zxing/zxing/oned/Code39Reader.h
  + hbqt/qzxing/zxing/zxing/oned/Code93Reader.cpp
  + hbqt/qzxing/zxing/zxing/oned/Code93Reader.h
  + hbqt/qzxing/zxing/zxing/oned/EAN13Reader.cpp
  + hbqt/qzxing/zxing/zxing/oned/EAN13Reader.h
  + hbqt/qzxing/zxing/zxing/oned/EAN8Reader.cpp
  + hbqt/qzxing/zxing/zxing/oned/EAN8Reader.h
  + hbqt/qzxing/zxing/zxing/oned/ITFReader.cpp
  + hbqt/qzxing/zxing/zxing/oned/ITFReader.h
  + hbqt/qzxing/zxing/zxing/oned/MultiFormatOneDReader.cpp
  + hbqt/qzxing/zxing/zxing/oned/MultiFormatOneDReader.h
  + hbqt/qzxing/zxing/zxing/oned/MultiFormatUPCEANReader.cpp
  + hbqt/qzxing/zxing/zxing/oned/MultiFormatUPCEANReader.h
  + hbqt/qzxing/zxing/zxing/oned/OneDReader.cpp
  + hbqt/qzxing/zxing/zxing/oned/OneDReader.h
  + hbqt/qzxing/zxing/zxing/oned/OneDResultPoint.cpp
  + hbqt/qzxing/zxing/zxing/oned/OneDResultPoint.h
  + hbqt/qzxing/zxing/zxing/oned/UPCAReader.cpp
  + hbqt/qzxing/zxing/zxing/oned/UPCAReader.h
  + hbqt/qzxing/zxing/zxing/oned/UPCEANReader.cpp
  + hbqt/qzxing/zxing/zxing/oned/UPCEANReader.h
  + hbqt/qzxing/zxing/zxing/oned/UPCEReader.cpp
  + hbqt/qzxing/zxing/zxing/oned/UPCEReader.h
  + hbqt/qzxing/zxing/zxing/pdf417
  + hbqt/qzxing/zxing/zxing/pdf417/decoder
  + hbqt/qzxing/zxing/zxing/pdf417/decoder/BitMatrixParser.h
  + hbqt/qzxing/zxing/zxing/pdf417/decoder/DecodedBitStreamParser.h
  + hbqt/qzxing/zxing/zxing/pdf417/decoder/Decoder.h
  + hbqt/qzxing/zxing/zxing/pdf417/decoder/ec
  + hbqt/qzxing/zxing/zxing/pdf417/decoder/ec/ErrorCorrection.cpp
  + hbqt/qzxing/zxing/zxing/pdf417/decoder/ec/ErrorCorrection.h
  + hbqt/qzxing/zxing/zxing/pdf417/decoder/ec/ModulusGF.cpp
  + hbqt/qzxing/zxing/zxing/pdf417/decoder/ec/ModulusGF.h
  + hbqt/qzxing/zxing/zxing/pdf417/decoder/ec/ModulusPoly.cpp
  + hbqt/qzxing/zxing/zxing/pdf417/decoder/ec/ModulusPoly.h
  + hbqt/qzxing/zxing/zxing/pdf417/decoder/PDF417BitMatrixParser.cpp
  + hbqt/qzxing/zxing/zxing/pdf417/decoder/PDF417DecodedBitStreamParser.cpp
  + hbqt/qzxing/zxing/zxing/pdf417/decoder/PDF417Decoder.cpp
  + hbqt/qzxing/zxing/zxing/pdf417/detector
  + hbqt/qzxing/zxing/zxing/pdf417/detector/Detector.h
  + hbqt/qzxing/zxing/zxing/pdf417/detector/LinesSampler.cpp
  + hbqt/qzxing/zxing/zxing/pdf417/detector/LinesSampler.h
  + hbqt/qzxing/zxing/zxing/pdf417/detector/PDF417Detector.cpp
  + hbqt/qzxing/zxing/zxing/pdf417/PDF417Reader.cpp
  + hbqt/qzxing/zxing/zxing/pdf417/PDF417Reader.h
  + hbqt/qzxing/zxing/zxing/qrcode
  + hbqt/qzxing/zxing/zxing/qrcode/decoder
  + hbqt/qzxing/zxing/zxing/qrcode/decoder/BitMatrixParser.h
  + hbqt/qzxing/zxing/zxing/qrcode/decoder/DataBlock.h
  + hbqt/qzxing/zxing/zxing/qrcode/decoder/DataMask.h
  + hbqt/qzxing/zxing/zxing/qrcode/decoder/DecodedBitStreamParser.h
  + hbqt/qzxing/zxing/zxing/qrcode/decoder/Decoder.h
  + hbqt/qzxing/zxing/zxing/qrcode/decoder/Mode.h
  + hbqt/qzxing/zxing/zxing/qrcode/decoder/QRBitMatrixParser.cpp
  + hbqt/qzxing/zxing/zxing/qrcode/decoder/QRDataBlock.cpp
  + hbqt/qzxing/zxing/zxing/qrcode/decoder/QRDataMask.cpp
  + hbqt/qzxing/zxing/zxing/qrcode/decoder/QRDecodedBitStreamParser.cpp
  + hbqt/qzxing/zxing/zxing/qrcode/decoder/QRDecoder.cpp
  + hbqt/qzxing/zxing/zxing/qrcode/decoder/QRMode.cpp
  + hbqt/qzxing/zxing/zxing/qrcode/detector
  + hbqt/qzxing/zxing/zxing/qrcode/detector/AlignmentPattern.h
  + hbqt/qzxing/zxing/zxing/qrcode/detector/AlignmentPatternFinder.h
  + hbqt/qzxing/zxing/zxing/qrcode/detector/Detector.h
  + hbqt/qzxing/zxing/zxing/qrcode/detector/FinderPattern.h
  + hbqt/qzxing/zxing/zxing/qrcode/detector/FinderPatternFinder.h
  + hbqt/qzxing/zxing/zxing/qrcode/detector/FinderPatternInfo.h
  + hbqt/qzxing/zxing/zxing/qrcode/detector/QRAlignmentPattern.cpp
  + hbqt/qzxing/zxing/zxing/qrcode/detector/QRAlignmentPatternFinder.cpp
  + hbqt/qzxing/zxing/zxing/qrcode/detector/QRDetector.cpp
  + hbqt/qzxing/zxing/zxing/qrcode/detector/QRFinderPattern.cpp
  + hbqt/qzxing/zxing/zxing/qrcode/detector/QRFinderPatternFinder.cpp
  + hbqt/qzxing/zxing/zxing/qrcode/detector/QRFinderPatternInfo.cpp
  + hbqt/qzxing/zxing/zxing/qrcode/ErrorCorrectionLevel.h
  + hbqt/qzxing/zxing/zxing/qrcode/FormatInformation.h
  + hbqt/qzxing/zxing/zxing/qrcode/QRCodeReader.cpp
  + hbqt/qzxing/zxing/zxing/qrcode/QRCodeReader.h
  + hbqt/qzxing/zxing/zxing/qrcode/QRErrorCorrectionLevel.cpp
  + hbqt/qzxing/zxing/zxing/qrcode/QRFormatInformation.cpp
  + hbqt/qzxing/zxing/zxing/qrcode/QRVersion.cpp
  + hbqt/qzxing/zxing/zxing/qrcode/Version.h
  + hbqt/qzxing/zxing/zxing/Reader.cpp
  + hbqt/qzxing/zxing/zxing/Reader.h
  + hbqt/qzxing/zxing/zxing/ReaderException.h
  + hbqt/qzxing/zxing/zxing/Result.cpp
  + hbqt/qzxing/zxing/zxing/Result.h
  + hbqt/qzxing/zxing/zxing/ResultIO.cpp
  + hbqt/qzxing/zxing/zxing/ResultPoint.cpp
  + hbqt/qzxing/zxing/zxing/ResultPoint.h
  + hbqt/qzxing/zxing/zxing/ResultPointCallback.cpp
  + hbqt/qzxing/zxing/zxing/ResultPointCallback.h
  + hbqt/qzxing/zxing/zxing/ZXing.h

  + hbqt/hbqtzxing.hbc
    + Added: QZXing Library.
    
  * qtcontribs.hbp
    + Added: hbqtzxing.hbp 

  * hbqt/qtgui/hbqtgui.ch
    + Added: constants for QListView_*.

  * hbqt/qtgui/qth/QScroller.qth
    % Minor.

    This commit brings Qt complient QZXing Library, based on ZXing Library, 
    to Harbour. This library enables you to scan Linear and 2D barcodes.
    Barcode detection is immensely useful in business applications. I have 
    changed only a few lines of code needed to port the code to Harbour 
    build system. I also have changed the names of two files which was 
    necessary to build the lib per Harbour specs. Rest everything is the 
    same as per its original repository.

    I have tried to remain compliant with its licensing issues by having 
    two files COPYING and NOTICE in the root folder. Please overlook me if 
    I have done it right.

    A comprehensive demo code will be committed in few days, just polishing 
    few finer points. The library is useful both for desktop and mobile 
    applications. For Android we have to wait until QtMultimediaWidgets 
    module is fully supported for this platform.

2014-07-05 13:34 UTC+0200 Viktor Szakats (vszakats users.noreply.github.com)
  + hbnetioqt/harb_os2.ico
  + hbnetioqt/harb_win.ico
  * hbnetioqt/hbnetioq.hbp
    + use local icon files instead of using arbitrary/undocumented
      icon files from Harbour source package

  * hbqt/hbmk2_qt.hb
    ! implemented required changes documented in early 2013:
         https://github.com/harbour/core/commit/acbd419e9e6d276c327a83dc2132582fb19df271

  ; TOFIX: I suggest implementing the fixes applied to this file, to
           correct the ongoing QT detection/configuration nightmare:
           https://github.com/vszakats/harbour-core/blob/master/contrib/gtqtc/hbmk2_qtmoc.hb

2014-07-02 08:34 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r314)
  * hbqt/hbmk2_qt.hb
    ! Fixed a nasty bug where parent objects were not beining initialized
       properly. This was present in only few classes so nobody noticed.

  * hbqt/qtgui/hbqt_flickcharm.cpp
    % Small enhancement.

  * hbqt/qtgui/qth/QScroller.qth
    ! Fixed: to get a real object of this type.
       oScroller := QScroller():scroller( oAbstractScrollAreaDerivedClassObject )
       oScroller:grabGesture( oAbstractScrollAreaDerivedClassObject, ;
                                    QScroller_LeftMouseButtonGesture )
      An Android example is scheduled to be comming in near future.

  * hbqt/qtquick/qth/QQuickItem.qth
    ! Fixed: proper parenting

  * hbqtwidgets/calculator.prg
    ! Fixed: K_ESC was causing a RTE, reported by Maurizio, thanks.

  * qtcontribs.hbp
    + Added: hbqtmultimediawidgets.hbp

2014-06-09 09:30 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r313)
  * hbide/actions.prg
    ! Fixed: selected-text toolbar was behaving differently in Qt 5.3.0.

  * hbqt/qtgui/hbqt_version.ch
    % Version bump.

2014-06-08 22:44 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r312)
  * hbqt/hbmk2_qt.hb
    + Added: QObject derived classes added below.
  * hbqt/qtgui/hbqtgui.ch
    + Added: constants used in classes below.

  + hbqt/hbqtqml.hbc
  + hbqt/hbqtquick.hbc
  + hbqt/qtqml
  + hbqt/qtqml/doc
  + hbqt/qtqml/doc/en
  + hbqt/qtqml/hbqt_init.cpp
  + hbqt/qtqml/hbqtqml.ch
  + hbqt/qtqml/hbqtqml.hbc
  + hbqt/qtqml/hbqtqml.hbm
  + hbqt/qtqml/hbqtqml.hbp
  + hbqt/qtqml/hbqtqml.hbx
  + hbqt/qtqml/hbqtqmls.hbp
  + hbqt/qtqml/qth
  + hbqt/qtqml/qth/filelist.hbm
  + hbqt/qtqml/qth/QJSEngine.qth
  + hbqt/qtqml/qth/QJSValue.qth
  + hbqt/qtqml/qth/QJSValueIterator.qth
  + hbqt/qtqml/qth/QQmlAbstractProfilerAdapter.qth
  + hbqt/qtqml/qth/QQmlAbstractUrlInterceptor.qth
  + hbqt/qtqml/qth/QQmlApplicationEngine.qth
  + hbqt/qtqml/qth/QQmlComponent.qth
  + hbqt/qtqml/qth/QQmlContext.qth
  + hbqt/qtqml/qth/QQmlEngine.qth
  + hbqt/qtqml/qth/QQmlError.qth
  + hbqt/qtqml/qth/QQmlExpression.qth
  + hbqt/qtqml/qth/QQmlExtensionPlugin.qth
  + hbqt/qtqml/qth/QQmlFileSelector.qth
  + hbqt/qtqml/qth/QQmlImageProviderBase.qth
  + hbqt/qtqml/qth/QQmlIncubationController.qth
  + hbqt/qtqml/qth/QQmlIncubator.qth
  + hbqt/qtqml/qth/QQmlListProperty.qth
  + hbqt/qtqml/qth/QQmlListReference.qth
  + hbqt/qtqml/qth/QQmlNetworkAccessManagerFactory.qth
  + hbqt/qtqml/qth/QQmlParserStatus.qth
  + hbqt/qtqml/qth/QQmlProperty.qth
  + hbqt/qtqml/qth/QQmlPropertyMap.qth
  + hbqt/qtqml/qth/QQmlPropertyValueSource.qth
  + hbqt/qtqml/qth/QQmlScriptString.qth
  + hbqt/qtquick
  + hbqt/qtquick/doc
  + hbqt/qtquick/doc/en
  + hbqt/qtquick/hbqt_init.cpp
  + hbqt/qtquick/hbqtquick.ch
  + hbqt/qtquick/hbqtquick.hbc
  + hbqt/qtquick/hbqtquick.hbm
  + hbqt/qtquick/hbqtquick.hbp
  + hbqt/qtquick/hbqtquick.hbx
  + hbqt/qtquick/hbqtquicks.hbp
  + hbqt/qtquick/qth
  + hbqt/qtquick/qth/filelist.hbm
  + hbqt/qtquick/qth/QQuickFramebufferObject.qth
  + hbqt/qtquick/qth/QQuickItem.qth
  + hbqt/qtquick/qth/QQuickPaintedItem.qth
  + hbqt/qtquick/qth/QQuickTextDocument.qth
  + hbqt/qtquick/qth/QQuickTextureFactory.qth
  + hbqt/qtquick/qth/QQuickView.qth
  + hbqt/qtquick/qth/QQuickWidget.qth
  + hbqt/qtquick/qth/QQuickWindow.qth
  + hbqt/qtquick/qth/QSGBasicGeometryNode.qth
  + hbqt/qtquick/qth/QSGClipNode.qth
  + hbqt/qtquick/qth/QSGDynamicTexture.qth
  + hbqt/qtquick/qth/QSGFlatColorMaterial.qth
  + hbqt/qtquick/qth/QSGGeometry.qth
  + hbqt/qtquick/qth/QSGGeometryNode.qth
  + hbqt/qtquick/qth/QSGMaterial.qth
  + hbqt/qtquick/qth/QSGMaterialShader.qth
  + hbqt/qtquick/qth/QSGMaterialType.qth
  + hbqt/qtquick/qth/QSGNode.qth
  + hbqt/qtquick/qth/QSGOpacityNode.qth
  + hbqt/qtquick/qth/QSGOpaqueTextureMaterial.qth
  + hbqt/qtquick/qth/QSGSimpleMaterial.qth
  + hbqt/qtquick/qth/QSGSimpleMaterialShader.qth
  + hbqt/qtquick/qth/QSGSimpleTextureNode.qth
  + hbqt/qtquick/qth/QSGTexture.qth
  + hbqt/qtquick/qth/QSGTextureMaterial.qth
  + hbqt/qtquick/qth/QSGTransformNode.qth
  + hbqt/qtquick/qth/QSGVertexColorMaterial.qth
    + Added: Qt 5x introduced modules. Very powerful classes specially
       suited for mobile devices.

  * qtcontribs.hbp
    + Added: hbqtqml and hbqtquick libraries.

  + hbqt/tests/quickwidget.hbp
  + hbqt/tests/quickwidget.prg
  + hbqt/tests/quickwidget.qrc
  + hbqt/tests/rotatingsquare.qml
    + Added: example application to demonstrate the power of QtQuick.
       The example is the exact replica of example shipped with Qt 5.3.0.
       The behavior of the example is not exactly how it should be. It
       seems some bug in Qt itself because the same example code run
       via QtCreator also behaves exactly like Harbour's.
       Any input is welcome.

2014-06-06 15:52 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r311)
  * hbqt/qtbluetooth/doc/en/class_qbluetoothdevicediscoveryagent.txt
  * hbqt/qtbluetooth/doc/en/class_qbluetoothdeviceinfo.txt
  * hbqt/qtbluetooth/doc/en/class_qbluetoothserver.txt
  * hbqt/qtbluetooth/doc/en/class_qbluetoothservicediscoveryagent.txt
  * hbqt/qtbluetooth/doc/en/class_qbluetoothsocket.txt
  * hbqt/qtbluetooth/doc/en/class_qbluetoothtransferreply.txt
  * hbqt/qtcore/hbqtcore.hbx
  * hbqt/qtdeclarative/hbqtdeclarative.hbx
  * hbqt/qtdesigner/hbqtdesigner.hbx
  * hbqt/qtgui/hbqtgui.hbx
  * hbqt/qtnetwork/hbqtnetwork.hbx
  * hbqt/qtopengl/hbqtopengl.hbx
  * hbqt/qtpositioning/doc/en/class_qgeoareamonitorsource.txt
  * hbqt/qtpositioning/doc/en/class_qgeocoordinate.txt
  * hbqt/qtpositioning/doc/en/class_qgeopositioninfosource.txt
  * hbqt/qtpositioning/doc/en/class_qgeosatelliteinfo.txt
  * hbqt/qtscript/hbqtscript.hbx
  * hbqt/qtsql/hbqtsql.hbx
  * hbqt/qtsvg/hbqtsvg.hbx
  * hbqt/qtwebkit/hbqtwebkit.hbx
  * hbqt/qtxml/hbqtxml.hbx
    * Regenerated.

  * hbqt/qtnetwork/qth/QLocalServer.qth
  * hbqt/qtnetwork/qth/QNetworkConfiguration.qth
    ! Fixed to compile with Qt lower versions also.

  * hbqt/hbmk2_qt.hb
    - Commented out code which was forcing the all required classes to be present.
       With the new versions of Qt, at times some methods could not be avialble
       in prior versions and hence linking an application was failing. A link
       will eventually fail if a class is not available, anyway, at link time,
       so exculsion of these forced classes do not pose any issues.
       Reported by CDQ.

  * hbqt/qtgui/hbqt_init.cpp
    + Added code to look for a function __hbqtLibraryPath() linked with the
        application and call as
        QCoreApplication::addLibraryPath( __hbqtLibraryPathReturnString ).
        I could find this way efficient enough where such requirement is sought for.
        Requested by CdQ.

        FUNCTION __hbqtLibraryPath() ; RETURN hb_dirBase() + "Plugins" and deposit
        all plugin folders there.

2014-06-01 18:14 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r310)
  * hbqt/hbmk2_qt.hb
  * hbqt/hbqtmultimediawidgets.hbc
  * hbqt/qtcore/hbqt_init.cpp
  * hbqt/qtdesigner/hbqtdesigner.hbp
  * hbqt/qtgui/hbqt_flickcharm.cpp
  * hbqt/qtgui/hbqt_init.cpp
  * hbqt/qtgui/hbqtgui.ch
  * hbqt/qtgui/qth/filelist.hbm
  + hbqt/qtgui/qth/QGraphicsObject.qth
  + hbqt/qtmultimedia/hbqt_init.cpp
  + hbqt/qtmultimedia/hbqtmultimedia.hbc
  + hbqt/qtmultimedia/hbqtmultimedia.hbx
  + hbqt/qtmultimedia/qth/filelist.hbm
  + hbqt/qtmultimedia/qth/QAbstractVideoBuffer.qth
  + hbqt/qtmultimedia/qth/QAudioBuffer.qth
  + hbqt/qtmultimedia/qth/QAudioDecoder.qth
  + hbqt/qtmultimedia/qth/QAudioDecoderControl.qth
  + hbqt/qtmultimedia/qth/QAudioEncoderSettings.qth
  + hbqt/qtmultimedia/qth/QAudioEncoderSettingsControl.qth
  + hbqt/qtmultimedia/qth/QAudioInputSelectorControl.qth
  + hbqt/qtmultimedia/qth/QAudioOutputSelectorControl.qth
  + hbqt/qtmultimedia/qth/QAudioProbe.qth
  + hbqt/qtmultimedia/qth/QAudioRecorder.qth
  + hbqt/qtmultimedia/qth/QCamera.qth
  + hbqt/qtmultimedia/qth/QCameraCaptureBufferFormatControl.qth
  + hbqt/qtmultimedia/qth/QCameraCaptureDestinationControl.qth
  + hbqt/qtmultimedia/qth/QCameraControl.qth
  + hbqt/qtmultimedia/qth/QCameraExposure.qth
  + hbqt/qtmultimedia/qth/QCameraExposureControl.qth
  + hbqt/qtmultimedia/qth/QCameraFeedbackControl.qth
  + hbqt/qtmultimedia/qth/QCameraFlashControl.qth
  + hbqt/qtmultimedia/qth/QCameraFocus.qth
  + hbqt/qtmultimedia/qth/QCameraFocusControl.qth
  + hbqt/qtmultimedia/qth/QCameraFocusZone.qth
  + hbqt/qtmultimedia/qth/QCameraImageCapture.qth
  + hbqt/qtmultimedia/qth/QCameraImageCaptureControl.qth
  + hbqt/qtmultimedia/qth/QCameraImageProcessing.qth
  + hbqt/qtmultimedia/qth/QCameraImageProcessingControl.qth
  + hbqt/qtmultimedia/qth/QCameraInfo.qth
  + hbqt/qtmultimedia/qth/QCameraInfoControl.qth
  + hbqt/qtmultimedia/qth/QCameraLocksControl.qth
  + hbqt/qtmultimedia/qth/QCameraViewfinderSettingsControl.qth
  + hbqt/qtmultimedia/qth/QCameraZoomControl.qth
  + hbqt/qtmultimedia/qth/QImageEncoderControl.qth
  + hbqt/qtmultimedia/qth/QImageEncoderSettings.qth
  + hbqt/qtmultimedia/qth/QMediaAudioProbeControl.qth
  + hbqt/qtmultimedia/qth/QMediaAvailabilityControl.qth
  + hbqt/qtmultimedia/qth/QMediaBindableInterface.qth
  + hbqt/qtmultimedia/qth/QMediaContainerControl.qth
  + hbqt/qtmultimedia/qth/QMediaContent.qth
  + hbqt/qtmultimedia/qth/QMediaControl.qth
  + hbqt/qtmultimedia/qth/QMediaGaplessPlaybackControl.qth
  + hbqt/qtmultimedia/qth/QMediaNetworkAccessControl.qth
  + hbqt/qtmultimedia/qth/QMediaObject.qth
  + hbqt/qtmultimedia/qth/QMediaPlayer.qth
  + hbqt/qtmultimedia/qth/QMediaPlayerControl.qth
  + hbqt/qtmultimedia/qth/QMediaPlaylist.qth
  + hbqt/qtmultimedia/qth/QMediaRecorder.qth
  + hbqt/qtmultimedia/qth/QMediaRecorderControl.qth
  + hbqt/qtmultimedia/qth/QMediaResource.qth
  + hbqt/qtmultimedia/qth/QMediaService.qth
  + hbqt/qtmultimedia/qth/QMediaServiceCameraInfoInterface.qth
  + hbqt/qtmultimedia/qth/QMediaServiceFeaturesInterface.qth
  + hbqt/qtmultimedia/qth/QMediaServiceProviderPlugin.qth
  + hbqt/qtmultimedia/qth/QMediaServiceSupportedDevicesInterface.qth
  + hbqt/qtmultimedia/qth/QMediaServiceSupportedFormatsInterface.qth
  + hbqt/qtmultimedia/qth/QMediaStreamsControl.qth
  + hbqt/qtmultimedia/qth/QMediaTimeInterval.qth
  + hbqt/qtmultimedia/qth/QMediaTimeRange.qth
  + hbqt/qtmultimedia/qth/QMediaVideoProbeControl.qth
  + hbqt/qtmultimedia/qth/QMetaDataReaderControl.qth
  + hbqt/qtmultimedia/qth/QMetaDataWriterControl.qth
  + hbqt/qtmultimedia/qth/QRadioData.qth
  + hbqt/qtmultimedia/qth/QRadioDataControl.qth
  + hbqt/qtmultimedia/qth/QRadioTuner.qth
  + hbqt/qtmultimedia/qth/QRadioTunerControl.qth
  + hbqt/qtmultimedia/qth/QSoundEffect.qth
  + hbqt/qtmultimedia/qth/QVideoDeviceSelectorControl.qth
  + hbqt/qtmultimedia/qth/QVideoEncoderSettings.qth
  + hbqt/qtmultimedia/qth/QVideoEncoderSettingsControl.qth
  + hbqt/qtmultimedia/qth/QVideoProbe.qth
  + hbqt/qtmultimedia/qth/QVideoRendererControl.qth
  + hbqt/qtmultimedia/qth/QVideoWindowControl.qth
  + hbqt/qtmultimediawidgets
  + hbqt/qtmultimediawidgets/doc
  + hbqt/qtmultimediawidgets/doc/en
  + hbqt/qtmultimediawidgets/hbqt_init.cpp
  + hbqt/qtmultimediawidgets/hbqtmultimediawidgets.ch
  + hbqt/qtmultimediawidgets/hbqtmultimediawidgets.hbc
  + hbqt/qtmultimediawidgets/hbqtmultimediawidgets.hbm
  + hbqt/qtmultimediawidgets/hbqtmultimediawidgets.hbp
  + hbqt/qtmultimediawidgets/hbqtmultimediawidgets.hbx
  + hbqt/qtmultimediawidgets/hbqtmultimediawidgetss.hbp
  + hbqt/qtmultimediawidgets/qth
  + hbqt/qtmultimediawidgets/qth/filelist.hbm
  + hbqt/qtmultimediawidgets/qth/QCameraViewfinder.qth
  + hbqt/qtmultimediawidgets/qth/QGraphicsVideoItem.qth
  + hbqt/qtmultimediawidgets/qth/QVideoWidget.qth
  + hbqt/qtmultimediawidgets/qth/QVideoWidgetControl.qth
  * hbqt/qtwebkit/hbqtwebkit.hbp
  + hbqtwidgets/tests/camera.hbp
  + hbqtwidgets/tests/camera.prg
  + hbqtwidgets/tests/camera.ui
  + hbqtwidgets/tests/imagesettings.ui
  + hbqtwidgets/tests/videosettings.ui

    + Implemented: Qt 5.3.0 specifc MultiMedia API.
       The example is specific to accessing and controlling cameras.
       In the coming days some other media example are scheduled
       to be in this repository. The camera example is adopted from
       Qt 5.3.0 examples repository with some minor changes specific
       to HbQt way of implementation.

       Enjoy !

2014-05-23 13:04 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r309)
  * hbqt/qtnetwork/qth/QNetworkAccessManager.qth
    % Added an include which may be needed for linux distros for Qt 5.3,
       not sure though. On Windows the class is compiled without issues,
       with and without this addition.

2014-05-22 01:12 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r308)
  * hbqt/hbmk2_qt.hb
    % Minor cleanup.
  * hbqt/qtcore/qth/filelist.hbm
  + hbqt/qtcore/qth/QMarginsF.qth
    + Added: Qt 5.3 introduced class.

  * hbqt/qtgui/hbqt_errorsys.prg
    ! Fixed: via convertion of cMsg => hb_ValToExp( cMsg ).

  * hbqt/qtgui/hbqtgui.ch
    + Added: contants for QPageSize, QPageLayout classes.

  * hbqt/qtgui/qth/filelist.hbm
  + hbqt/qtgui/qth/QPageLayout.qth
  + hbqt/qtgui/qth/QPageSize.qth
    + Added: Qt 5.3 introduced classes extremely useful for printing.

  * hbqt/qtgui/qth/QPrinterInfo.qth
    + Added: methods introduced in Qt 5.3.

2014-05-07 14:08 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r307)
  * hbqt/hbmk2_qt.hb
    % Changed: how a .ui object's :destroy() method was implemented.
       Now all objects in a .ui are passed throuh GC which cleans residual
       objects which are not derived from QObject were hanging there.

  * hbqt/qtcore/hbqt_misc.prg
    % Restuctured: :disconnect( [<cnEventSlot>] ) to disconnect all connected
       events or slots if called without any argument.
        <cnEventSlot> can have three possible values: NUMERIC, CHARACTER, NONE.

  * hbqtwidgets/hbqtbrowse.prg
    ! Fixed to release objects referenced in a codeblock at a cell edit.

  * hbqtwidgets/tests/browgets.prg
    + Added: QEventLoop() to monitor object counts.

2014-05-05 22:52 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r306)
  * hbdbu/dbu.prg
  * hbide/hbide.qrc
  * hbide/main.prg
  + hbide/resources/hbide-2014.png
  * hbide/resources/hbidesplashwatermark.png
  * hbqtwidgets/hbqtwidgets.qrc
  + hbqtwidgets/resources/hbdbu-2014.png
    % Changed: splash images containing copyright info upto 2014.

  * hbqtwidgets/tests/composite.prg
  * hbqtwidgets/tests/testwgt.dbf
    % Replaced: table contents with tests/test.dbf.

2014-05-05 19:15 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r305)
  + hbqtwidgets/tests/testwgt.dbf
  * hbqtwidgets/tests/composite.prg
    + Added: missed table. I took it blindly off Zoran's example, scheduled
       to be Harbour's standard test.dbf.

2014-05-05 18:59 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r304)
  * hbqtwidgets/getsys.prg
    + Enabled: return to calling process if a key is set to evaluate
       a block via SetKey(). In many cases it throughs run-time error
       if allowed to proceed to apply key to the OGET.

  * hbqtwidgets/getlist.prg
    + Added: another argument to HbQtReadGets( .., <[lNoResize]> )

  * hbqtwidgets/hbqtstd.ch
    + Added: clause NORESIZE with QREAD ...
       This facilitate to place GETS in a Qt Creator created ui's
       container control, like, QFrame, QGroupBox, etc.

  + hbqtwidgets/tests/composite.hbp
  + hbqtwidgets/tests/composite.prg
  + hbqtwidgets/tests/composite.ui
    + Added: another demo code to demonstrate how many components of
       HbQtWidgets can be combined with Qt Creator created UI and
       embedded into its controls. It also demonstrate what methods
       can be adopted to release memory properly.

2014-05-04 23:59 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r303)
  * hbdbu/dbu.prg
    + Added: oBrowse:toolbarLeft := .T.

  * hbide/actions.prg
  * hbide/docks.prg
  * hbide/editor.prg
  * hbide/findreplace.prg
  * hbide/functions.prg
  * hbide/main.prg
  * hbide/misc.prg
  * hbide/projmanager.prg
  * hbide/sources.prg
    + Applied: patch sent by Grzegorz which completes .hb files treatment
       equal to .prg. Many thanks.

    + Added: code to destroy editing objects properly when an editing instance
       is closed.

  * hbqt/qtcore/hbqt_bind.cpp
  * hbqt/qtcore/hbqt_misc.prg
    ! Restructured: binding Harbour variables to Qt objects.
       Now a HbQt object is referenced only once and hence Harbour GC calls
       the varible destructor properly. This has made it possible to reclaim
       memory after Qt frees the object pointers, either initiated by Harbour
       or by Qt. This commit is very important and I hope that HbQt is
       now production ready.

    ; INCOMPATIBLE: the only side-effect, seen by many Harbour programmers,
       is that any variable holding a Qt object which is :connect()ed will
       have to live according to Harbour scoping rules. Before HbQt was
       keeping that variable alive by adding the object to an instance
       variable of another class which effectively was blocking Harbour
       GC to destroy the Qt object.

  * hbqt/qtgui/hbqt_hbqabstractitemmodel.cpp
    + Added: one HB_TRACE() call.

  * hbqt/qtgui/hbqt_hbqplaintextedit.cpp
    % Minor.

  * hbqt/qtgui/hbqt_hbqtableview.cpp
  * hbqt/qtgui/hbqt_hbqtableview.h
  * hbqt/qtgui/qth/HBQTableView.qth
    + Added: method HB_ClearBlock()
             method SetModel() - Important: Qt docs says that setting a model
              does not "delete" previous selection model.

  * hbqtwidgets/alert.prg
  * hbqtwidgets/dashboard.prg
  * hbqtwidgets/getlist.prg
  * hbqtwidgets/getsys.prg
  * hbqtwidgets/hbqtbrowse.prg
  * hbqtwidgets/hbqtdbu.prg
  * hbqtwidgets/misc.prg
    + Added: methods and code to destroy Qt objects held in instance variables
       of above classes. As a rule, every specialized widget must implement
       :destroy() method responsible to destroy Qt objects used for the class.
       QGet and HbQtBrowse now has :destroy() method.

  * hbqtwidgets/tests/browser.prg
  * hbqtwidgets/tests/pureclip.prg
  * hbqtwidgets/tests/validator.prg
  * hbqtwidgets/tests/validatormain.ui
    + Added: code to destroy the Qt objects.

  ; This commit takes HbQt to production level. Object destruction is proper.
     Memory management is proper. It has been four-and-a-half years to reach
     this goal. Cheers.

2014-04-28 09:16 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r302)
  * hbqt/qtgui/qth/QScrollerProperties.qth
    ! Guarded: #includes against Qt 5.0.

2014-04-26 08:39 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r301)
  * hbqt/qtgui/qth/QScrollerProperties.qth
    ! Guarded: #includes against Qt version.

2014-04-24 21:47 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r300)
  * hbqt/qtgui/qth/QPushButton.qth
    + Added: commented out constructors.

2014-04-20 12:20 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r299)
  * hbdbu/hbdbu.hbp
  * hbide/hbide.hbp
    ! Yet another tweak to set the target paths right.
       Learning hbmk2 the difficult way.

  * hbqt/qtdesigner/hbqtdesigner.hbp
  * hbqt/qtwebkit/hbqtwebkit.hbp
  * qtcontribs.hbp
    ! Placed these two modules at the end of the qtcontribs.hbp as
       as these are not supported on Android. I could not find a way
       to skip them for Android builds. I tried -stop= -skip{ in
       various combinations in .hbc and/or .hbp's but failed.
       This will generate some effors at the end of Android builds
       but that's ok to live with.

2014-04-19 23:30 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r298)
  + hbqt/hbqtbluetooth.hbc
  + hbqt/hbqtdeclarative.hbc
  + hbqt/hbqtmultimedia.hbc
  + hbqt/hbqtopengl.hbc
  + hbqt/hbqtpositioning.hbc
  + hbqt/hbqtscript.hbc
  + hbqt/hbqtsvg.hbc
  + hbqt/hbqtwebsockets.hbc
  + hbqt/hbqtxml.hbc
    + Added: missing .hbc files for hbqt sub-projects.

2014-04-19 22:42 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r297)
  * hbqt/qtdesigner/hbqtdesigner.hbp
  * hbqt/qtwebkit/hbqtwebkit.hbp
    ! Fixed to not to be compiled with Android.

  * hbqt/hbqt_common.hbm
  * hbqtwidgets/hbqtwidgets.hbp
  * hbxbp/hbxbp.hbp
  * qtcontribs.hbp
    ! Fixed: paths pointing to harbour's lib folders instaed of outer-local.
       This also covers to deposit libs in harbour's libs without using
       HB_INSTALL_PREFIX to correctly cover cross-compilations.

2014-04-17 14:43 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r296)
  * hbqt/qtbluetooth/qth/QBluetoothLocalDevice.qth
  * hbqt/qtpositioning/qth/QGeoShape.qth
    ! Fixed: to be compilable with Qt 5.2.

  * qtcontribs.hbp
    ! Fixed: to issue -stop{android} for libs not supported on Android.
       Patch provided by Francesco, thanks.

2014-04-17 14:02 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r295)
  * hbqt/qtpositioning/qth/QNmeaPositionInfoSource.qth
    ! Guarded: two methods against Qt v5.3, broke Qt 5.2 HbQt builds.

2014-04-17 02:33 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r294)
  * hbqt/qtgui/hbqt_version.ch
    * Version bump.

2014-04-17 02:00 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r293)
  * hbqt/hbqt_common.hbm
    % Changed: to post binaries in upper level lib folder.

  * hbqt/qtcore/hbqtcore.hbc
  * hbqt/qtdeclarative/hbqtdeclarative.hbc
  * hbqt/qtdesigner/hbqtdesigner.hbc
  * hbqt/qtgui/hbqtgui.hbc
  * hbqt/qtmultimedia/hbqtmultimedia.hbc
  * hbqt/qtnetwork/hbqtnetwork.hbc
  * hbqt/qtopengl/hbqtopengl.hbc
  * hbqt/qtscript/hbqtscript.hbc
  * hbqt/qtsql/hbqtsql.hbc
  * hbqt/qtsvg/hbqtsvg.hbc
  * hbqt/qtwebkit/hbqtwebkit.hbc
  * hbqt/qtxml/hbqtxml.hbc
    % Updated per CDQ's patch, many thanks.

  * hbqt/qtgui/hbqtgui.hbx
    + Added: QScroller and QScrollerProperties.

  * hbqt/qtgui/qth/filelist.hbm
    % Minor.

  * hbqt/qtgui/qth/QScrollerProperties.qth
    ! Fixed: wrong version hex and missing enums.

  * hbqt/qtwebsockets/hbqtwebsockets.hbc
    ! Fixed: typo.

  * hbqtwidgets/hbqtwidgets.hbp
  * hbxbp/hbxbp.hbp
  * hbdbu/hbdbu.hbp
  * hbide/hbide.hbp
    % Changed: output destinations at addons/lib|bin/platform/compiler.
       Now all libs and binaries are posted lb/bin folders in /addons.

  * qtcontribs.hbp
    + Added: newly added Qt Modules.
    ; Rearrangement.

2014-04-16 16:39 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r292)
  * hbqt/qtbluetooth/hbqt_init.cpp
  * hbqt/qtnetwork/hbqt_init.cpp
  * hbqt/qtpositioning/hbqt_init.cpp
    ! Fixed: recent cut/copy/paste ( without deep observation ) issues. soory.

  * hbqt/qtnetwork/qth/QAuthenticator.qth
    ! Fixed: commented out QVariantHash options() method. HbQt does not
       support such construct anyway.

2014-04-15 19:16 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r291)
  * hbqt/qtcore/hbqt_init.cpp
  * hbqt/qtnetwork/hbqt_init.cpp
  * hbqt/qtwebsockets/hbqt_init.cpp
    + Added: code to manage many new signals introduced in Qt's later versions.
       None is tested but should be ok.

2014-04-15 17:39 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r290)
  * hbqt/qtpositioning/hbqt_init.cpp
    + Added: methods to execute various signals except for one.

2014-04-15 17:17 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r289)
  * hbqt/qtbluetooth/hbqt_init.cpp
    + Added: methods to execute various signals.

2014-04-10 18:50 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r288)
  * hbqt/hbmk2_qt.hb
    + Added: qint8 and quint8.

  + hbqt/qtbluetooth
    + Added: Qt 5.2 introduced QtBluetooth module.

  + hbqt/qtbluetooth/doc
  + hbqt/qtbluetooth/doc/en
  + hbqt/qtbluetooth/doc/en/class_qbluetoothaddress.txt
  + hbqt/qtbluetooth/doc/en/class_qbluetoothdevicediscoveryagent.txt
  + hbqt/qtbluetooth/doc/en/class_qbluetoothdeviceinfo.txt
  + hbqt/qtbluetooth/doc/en/class_qbluetoothhostinfo.txt
  + hbqt/qtbluetooth/doc/en/class_qbluetoothlocaldevice.txt
  + hbqt/qtbluetooth/doc/en/class_qbluetoothserver.txt
  + hbqt/qtbluetooth/doc/en/class_qbluetoothservicediscoveryagent.txt
  + hbqt/qtbluetooth/doc/en/class_qbluetoothserviceinfo.txt
  + hbqt/qtbluetooth/doc/en/class_qbluetoothsocket.txt
  + hbqt/qtbluetooth/doc/en/class_qbluetoothtransfermanager.txt
  + hbqt/qtbluetooth/doc/en/class_qbluetoothtransferreply.txt
  + hbqt/qtbluetooth/doc/en/class_qbluetoothtransferrequest.txt
  + hbqt/qtbluetooth/doc/en/class_qbluetoothuuid.txt
  + hbqt/qtbluetooth/hbqt_init.cpp
  + hbqt/qtbluetooth/hbqtbluetooth.ch
  + hbqt/qtbluetooth/hbqtbluetooth.hbc
  + hbqt/qtbluetooth/hbqtbluetooth.hbm
  + hbqt/qtbluetooth/hbqtbluetooth.hbp
  + hbqt/qtbluetooth/hbqtbluetooth.hbx
  + hbqt/qtbluetooth/hbqtbluetooths.hbp
  + hbqt/qtbluetooth/qth
  + hbqt/qtbluetooth/qth/filelist.hbm
  + hbqt/qtbluetooth/qth/QBluetoothAddress.qth
  + hbqt/qtbluetooth/qth/QBluetoothDeviceDiscoveryAgent.qth
  + hbqt/qtbluetooth/qth/QBluetoothDeviceInfo.qth
  + hbqt/qtbluetooth/qth/QBluetoothHostInfo.qth
  + hbqt/qtbluetooth/qth/QBluetoothLocalDevice.qth
  + hbqt/qtbluetooth/qth/QBluetoothServer.qth
  + hbqt/qtbluetooth/qth/QBluetoothServiceDiscoveryAgent.qth
  + hbqt/qtbluetooth/qth/QBluetoothServiceInfo.qth
  + hbqt/qtbluetooth/qth/QBluetoothSocket.qth
  + hbqt/qtbluetooth/qth/QBluetoothTransferManager.qth
  + hbqt/qtbluetooth/qth/QBluetoothTransferReply.qth
  + hbqt/qtbluetooth/qth/QBluetoothTransferRequest.qth
  + hbqt/qtbluetooth/qth/QBluetoothUuid.qth

  * hbqt/qtcore/qth/filelist.hbm
  + hbqt/qtcore/qth/QUuid.qth
    + Added: QUuid class.

  * hbqt/qtgui/hbqtgui.ch
    + Added: QBluetooth_* constants.

2014-04-10 12:42 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r287)
  * hbqt/qtgui/hbqtgui.ch
    + Added: QWebSocket*_* constants.

  + hbqt/qtwebsockets
    + Added: Qt 5.3 introduced QtWebSockets module.

  + hbqt/qtwebsockets/doc
  + hbqt/qtwebsockets/doc/en
  + hbqt/qtwebsockets/doc/en/class_qmaskgenerator.txt
  + hbqt/qtwebsockets/doc/en/class_qwebsocket.txt
  + hbqt/qtwebsockets/doc/en/class_qwebsocketcorsauthenticator.txt
  + hbqt/qtwebsockets/doc/en/class_qwebsocketserver.txt
  + hbqt/qtwebsockets/hbqt_init.cpp
  + hbqt/qtwebsockets/hbqtwebsockets.ch
  + hbqt/qtwebsockets/hbqtwebsockets.hbc
  + hbqt/qtwebsockets/hbqtwebsockets.hbm
  + hbqt/qtwebsockets/hbqtwebsockets.hbp
  + hbqt/qtwebsockets/hbqtwebsockets.hbx
  + hbqt/qtwebsockets/hbqtwebsocketss.hbp
  + hbqt/qtwebsockets/qth
  + hbqt/qtwebsockets/qth/filelist.hbm
  + hbqt/qtwebsockets/qth/QMaskGenerator.qth
  + hbqt/qtwebsockets/qth/QWebSocket.qth
  + hbqt/qtwebsockets/qth/QWebSocketCorsAuthenticator.qth
  + hbqt/qtwebsockets/qth/QWebSocketServer.qth

2014-04-09 17:06 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r286)
  * hbqt/qtgui/hbqtgui.ch
    + Added: QGeo*_* constants.

  + hbqt/qtpositioning
    + Added: Qt 5.2 introduced QtPositioning Module.

  + hbqt/qtpositioning/doc
  + hbqt/qtpositioning/doc/en
  + hbqt/qtpositioning/doc/en/class_qgeoaddress.txt
  + hbqt/qtpositioning/doc/en/class_qgeoareamonitorinfo.txt
  + hbqt/qtpositioning/doc/en/class_qgeoareamonitorsource.txt
  + hbqt/qtpositioning/doc/en/class_qgeocircle.txt
  + hbqt/qtpositioning/doc/en/class_qgeocoordinate.txt
  + hbqt/qtpositioning/doc/en/class_qgeolocation.txt
  + hbqt/qtpositioning/doc/en/class_qgeopositioninfo.txt
  + hbqt/qtpositioning/doc/en/class_qgeopositioninfosource.txt
  + hbqt/qtpositioning/doc/en/class_qgeopositioninfosourcefactory.txt
  + hbqt/qtpositioning/doc/en/class_qgeorectangle.txt
  + hbqt/qtpositioning/doc/en/class_qgeosatelliteinfo.txt
  + hbqt/qtpositioning/doc/en/class_qgeosatelliteinfosource.txt
  + hbqt/qtpositioning/doc/en/class_qgeoshape.txt
  + hbqt/qtpositioning/doc/en/class_qnmeapositioninfosource.txt
  + hbqt/qtpositioning/hbqt_init.cpp
  + hbqt/qtpositioning/hbqtpositioning.ch
  + hbqt/qtpositioning/hbqtpositioning.hbc
  + hbqt/qtpositioning/hbqtpositioning.hbm
  + hbqt/qtpositioning/hbqtpositioning.hbp
  + hbqt/qtpositioning/hbqtpositioning.hbx
  + hbqt/qtpositioning/hbqtpositionings.hbp
  + hbqt/qtpositioning/qth
  + hbqt/qtpositioning/qth/filelist.hbm
  + hbqt/qtpositioning/qth/QGeoAddress.qth
  + hbqt/qtpositioning/qth/QGeoAreaMonitorInfo.qth
  + hbqt/qtpositioning/qth/QGeoAreaMonitorSource.qth
  + hbqt/qtpositioning/qth/QGeoCircle.qth
  + hbqt/qtpositioning/qth/QGeoCoordinate.qth
  + hbqt/qtpositioning/qth/QGeoLocation.qth
  + hbqt/qtpositioning/qth/QGeoPositionInfo.qth
  + hbqt/qtpositioning/qth/QGeoPositionInfoSource.qth
  + hbqt/qtpositioning/qth/QGeoPositionInfoSourceFactory.qth
  + hbqt/qtpositioning/qth/QGeoRectangle.qth
  + hbqt/qtpositioning/qth/QGeoSatelliteInfo.qth
  + hbqt/qtpositioning/qth/QGeoSatelliteInfoSource.qth
  + hbqt/qtpositioning/qth/QGeoShape.qth
  + hbqt/qtpositioning/qth/QNmeaPositionInfoSource.qth

2014-04-02 15:07 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r285)
  * hbqt/qtgui/hbqtgui.ch
    + Added: QScroller_* and QScrollProperties_* constants.

  + hbqt/qtgui/qth/QScroller.qth
  + hbqt/qtgui/qth/QScrollerProperties.qth
    + Added: two new classes.

  * hbqt/qtgui/qth/filelist.hbm
    + Added: above two classes in dependancy list.

  ; QScroller() provides even better control over kinetic scrolling
     as it exposes a lot of properties to play with. The syntax is:
       oSP := QScrollerProperties()
       oSP:setScrollMetric( QScrollerProperties_MinimumVelocity, 0.0 )
       ...
       oScroller := QScroller( oScrollableWidget )
       oScroller:grabGesture( oScrollableWidget, QScroller_LeftMouseButtonGesture )
       oScroller:setScrollerProperties( oSP )

2014-04-01 00:26 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r284)
  * hbqt/qtgui/hbqtgui.ch
    + Added some more constants.

  + hbqt/qtgui/hbqt_flickcharm.cpp
  + hbqt/qtgui/hbqt_flickcharm.h
  * hbqt/qtgui/hbqtgui.hbm
    + Added: Qt tools class which never made to the mainstream.
       A must class needed for mobile devices. This class implements
       the flick gesture on QAbstractScrollArea based objects.
  + hbqt/qtgui/qth/HBQFlickCharm.qth
  * hbqt/qtgui/qth/filelist.hbm
    + Added: corresponding .prg wrapper.

  ; Calling Syntax:
      oFlick := HBQFlickCharm()
      oTextBrowser := QTextBrowser()
      oFlick:activateOn( oTextBrowser )

2014-03-26 16:41 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r283)
  * hbqt/qtnetwork/hbqt_init.cpp
    ! Fixed: to be usable with Qt5x.

2014-03-12 19:05 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r282)
  * hbqtwidgets/hbqtbrowse.prg
    + Implemented: Left toolbar which contain navigational icons
        which were contained in top toolbar originally. By default
        it is off. To switch it on, issue this message.
           oBrowse:toolbarLeft := .t.
    ; This is necessary as we never need navigational icon visible
        all the times. It also shortens top toolbar's width which will
        facilitate to host more actions scheduled for next few days.

  * hbqtwidgets/tests/browdb.prg
    % Updated to show above change.

2014-03-12 15:02 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r281)
  * hbqtwidgets/hbqtbrowse.prg
    ! Fixed: synchronization of frozen columns with browser columns from
       visual point of view. Concept discoved by Dusan Majkic but implemented
       differently.

    % Added: vertical movement management synchronizing well between frozen
       and regular rows. Also cursor at current row is visible on frozen
       columns also. Concept forwarded by Dusan but implemented differently.

    % Added: clicking on any row on frozen columns positions the cursor
       of regular columns to same row.

2014-03-12 12:46 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r280)
  * hbqt/hbmk2_qt.hb
    + Applied patch from Francek, not tested but must work.
       It sets the tab order of controls in a dialog.

  * hbqt/qtcore/qth/QLocate.qth
    ! Fixed to not produce incorrect code for :toCurrencyString() method.

2014-01-20 08:36 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r279)
  * hbqt/hbmk2_qt.hb
    ! Fixed: a rare and difficult to trace parsing string error which
       was preventing SIGNAL SLOT manipulation on Qt Creator designed
       widgets. Spotted and forwarded by Francek, thanks.

2014-01-06 13:39 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r278)
  * hbqtwidgets/hbqtbrowse.prg
    + Added: METHOD pressFrozenBlock( bBlock )              SETGET
       Thought and code provided by Zoran with slight changes.
       If defined, will execute the callback block as follows:
         oBrowse:pressFrozenBlock := ;
           { | aRowCol, cSide, oBrowse | DoSomething( aRowCol, cSide ) }
       aRowCol == { nRow, nColumn } which is clicked.
       cSide   == "left" or "right" indicating if left or right frozen
                   area is clicked.

    + Added: invoking :navigationBlock corresponding horizontal slider
       movement. Spotted by Zoran, thanks.

  * hbqtwidgets/tests/browdb.prg

2014-01-04 10:03 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r277)
  * hbqtwidgets/hbqtbrowse.prg
    ! Fixed: assigment to :horizontalScrollbar and :vertcalScrollbar before
       assigning the navigation blocks was causing side effects. The bug
       brought to light by Zoran, thanks.

  * hbqtwidgets/tests/browdb.prg
    % Changed: code to demonstrate above fix.

2013-12-20 15:01 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r276)
  * hbide/console.prg
    - Guarded: unused function, creating problem when compiled with -w3.

  * hbqtwidgets/tests/pureclip.prg
    + Added: F10 - Calculator to popup HbQtCalculator.

2013-12-19 19:52 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r275)
  * hbqtwidgets/hbqtstd.ch
    + Added: [DONOTSCALE] member to @...IMAGE command.
       If Image GET is constructed with this clause, image will be
       the same as loaded. It may or may not occupy the rows/cols
       rectangle.

  * hbqtwidgets/getlist.prg
  * hbqtwidgets/getsys.prg
    + Added: code to manage {DONOTSCALE] clause of the @...IMAGE command.
    + Added: code to populate HBQTBROWSE browser within ROWS/COLS rectangle.

  * hbqtwidgets/tests/pureclip.prg
    + Added: code to demonstrate HBQTBROWSE and IMAGE objects in the
       GET system. Navigate the GETS and when browser is entered,
       navigate withing the browser with arrow keys, watch the image
       area.

2013-12-19 14:52 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r274)
  * hbqt/qtgui/hbqt_version.ch
    * Version bump.

  * hbqtwidgets/hbtoqt.ch
    + Mapped: LastKey() to __hbqtSetLastKey().
       LastKey() will return the last key pressed within a QGET/QREAD session.

  * hbqtwidgets/hbqtstd.ch
    + Added:  @ <top>, <left>, <bottom>, <right> QGET <v> HBQTBROWSE <oHbQtBrowse> ...
              @ <top>, <left>, <bottom>, <right> QGET <v> IMAGE ...

  * hbqtwidgets/getlist.prg
  * hbqtwidgets/getsys.prg
    + Added: code to manipulate HbQtBrowse and Images via QGET/QREAD engine,
       just like any other object.

       For @....QGET <lValue> HBQTBROWSE <oBrowse> ..., you will
       typically construct a browse object and will pass it as <oBrowse>.
       While within the browse object all your navigation instructions will
       work as ususal. K_CTRL_ENTER will exit the browser GET and focus will
       be shifted to next GET in the GetList.

       For @....QGET <cImageNameFromResourceOrDisk> IMAGE ..., you will pass
       the image name either from embedded resource or a name of disk file.
       Later you can change the image via standard GET behaviour as:

         LOCAL cImage := ":/myapp/myfav.png"  // OR "c:\myicons\myfav.png"
         LOCAL cImageName := space( 40 )

         @ 10,10,15,20 QGET cImage IMAGE WHEN {|| .F. }
         @ 17, 10 QGET cImageName VALID {|v| v := GetActive():varGet(), iif( ! empty( v ), cImage := v, NIL ), .T. }
         QREAD ...

  * hbqtwidgets/hbqtbrowse.prg
    ! Fixed: click on a ghost (blank) row was posing ghost row as current row.
       A long pending issue resolved.

    + Added: some more methods ( experimental yet ).

    + Added: METHOD initializationBlock( bBlock )           SETGET
               This method is called right after HbQtBrowse become stable the
               first time.

    + Added: METHOD keyBoard( cnKey )                       INLINE __hbqtKeyboard( cnKey, ::oTableView )
               A handy method to apply keys to an HbQtBrowse object.

    + Added: DATA   oGetList
             DATA   oGetObject
             METHOD setGetObject( oGetObject )              SETGET
               Internal methods and members to bind a HbQtBrowse object to
               a QGET/QREAD interface. Browser is entered for navigation
               if standard WHEN clause returns TRUE. The same is true with
               VALID clause. K_CTRL_ENTER will set set the focus to next
               GET in the current GETLIST.

  * hbqtwidgets/hbqtevent.prg
    ! Fixed: a nasty side-effect.

  * hbqtwidgets/dashboard.prg
    + Added: members
             DATA   oGetEdit
             DATA   oTextEdit
             DATA   oGetEditTimer
             DATA   oGetEditText                            INIT ""
             DATA   nSeconds                                INIT Seconds()
             METHOD manageUDF( cText )

        This commits changes the way DashBoard objects are created. Now objects
        are created irrespective of if tey contain any data, and when data arrives
        is populated therein. Also "Text" object has gone an overall change.

  * hbqtwidgets/misc.prg
    + Added: __hbqtSetLastKey().
       A GET/SET function available to the PRG code via LastKey() console
       function during a QGET/QREAD session.

  ; DONE: a descent demo program to demonstrate embedded browse and images
          inside QGET/QREAD mechanism.

2013-12-18 07:40 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r273)
  * hbqt/qtcore/qth/QStandardPaths.qth
    ! Guarded: :setTestModeEnabled() under QT_VERSION 0x050200.
       In Qt documentation it is not mentioned but compiling with Qt 5.1.1
       failed on this member, so seems it has been introduced in Qt 5.2.

2013-12-17 12:23 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r272)
  * hbdbu/dbu.prg
    + Added: REQUESTs for all string manipulation functions frequently
       used in index expressions. Reminded by Massimo, thanks.

2013-12-16 21:53 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r271)
  * hbqt/qtgui/hbqt_version.ch
    + Version Bump.
  * hbqt/qtnetwork/qth/QLocalServer.qth
    ! Fixed: to be compilable with Qt 4.8.3+.

2013-12-16 19:27 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r270)
  * hbqt/qtnetwork/qth/QAbstractSocket.qth
  * hbqt/qtnetwork/qth/QLocalServer.qth
  * hbqt/qtnetwork/qth/QLocalSocket.qth
  * hbqt/qtnetwork/qth/QSslSocket.qth
  * hbqt/qtnetwork/qth/QTcpServer.qth
  * hbqtwidgets/tests/browser.prg
    + Added: commented methods.

  * hbqt/hbmk2_qt.hb
    + Added: qintptr and quintptr casts introduced in latest Qt.

2013-12-16 13:23 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r269)
  * hbqt/qtgui/hbqt_version.ch
    + Version bump.

  * hbqt/qtgui/hbqtgui.ch
    + Added: QStandardPath_* constants.

2013-12-15 21:51 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r268)
  * hbqt/qtgui/hbqt_version.ch
    ! Missed from prev commit.

2013-12-15 21:45 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r267)
  * hbqt/qtgui/hbqt_version.ch
    + Version bump to r267.

  + hbqt/qtcore/qth/QStandardPaths.qth
    + Added: class requested by CDQ.

  * hbqt/qtcore/qth/filelist.hbm
    + Added: QStandardPaths.qth

2013-12-15 21:41 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r266)
  * hbqt/qtgui/hbqt_version.ch
    + Version bump to r266.

  * ChangeLog.txt
    ! Missed from prev commit.

2013-12-14 13:34 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r265)
  + hbqt/qtnetwork/qth/QAbstractNetworkCache.qth
  + hbqt/qtnetwork/qth/QAbstractSocket.qth
  + hbqt/qtnetwork/qth/QAuthenticator.qth
  + hbqt/qtnetwork/qth/QDnsDomainNameRecord.qth
  + hbqt/qtnetwork/qth/QDnsHostAddressRecord.qth
  + hbqt/qtnetwork/qth/QDnsLookup.qth
  + hbqt/qtnetwork/qth/QDnsMailExchangeRecord.qth
  + hbqt/qtnetwork/qth/QDnsServiceRecord.qth
  + hbqt/qtnetwork/qth/QDnsTextRecord.qth
  + hbqt/qtnetwork/qth/QHostAddress.qth
  + hbqt/qtnetwork/qth/QHostInfo.qth
  + hbqt/qtnetwork/qth/QHttpMultiPart.qth
  + hbqt/qtnetwork/qth/QHttpPart.qth
  + hbqt/qtnetwork/qth/QLocalServer.qth
  + hbqt/qtnetwork/qth/QLocalSocket.qth
  + hbqt/qtnetwork/qth/QNetworkAccessManager.qth
  + hbqt/qtnetwork/qth/QNetworkAddressEntry.qth
  + hbqt/qtnetwork/qth/QNetworkCacheMetaData.qth
  + hbqt/qtnetwork/qth/QNetworkConfiguration.qth
  + hbqt/qtnetwork/qth/QNetworkConfigurationManager.qth
  + hbqt/qtnetwork/qth/QNetworkCookie.qth
  + hbqt/qtnetwork/qth/QNetworkCookieJar.qth
  + hbqt/qtnetwork/qth/QNetworkDiskCache.qth
  + hbqt/qtnetwork/qth/QNetworkInterface.qth
  + hbqt/qtnetwork/qth/QNetworkProxyFactory.qth
  + hbqt/qtnetwork/qth/QNetworkProxyQuery.qth
  + hbqt/qtnetwork/qth/QNetworkReply.qth
  + hbqt/qtnetwork/qth/QNetworkSession.qth
  + hbqt/qtnetwork/qth/QSslCertificate.qth
  + hbqt/qtnetwork/qth/QSslCertificateExtension.qth
  + hbqt/qtnetwork/qth/QSslCipher.qth
  + hbqt/qtnetwork/qth/QSslConfiguration.qth
  + hbqt/qtnetwork/qth/QSslError.qth
  + hbqt/qtnetwork/qth/QSslKey.qth
  + hbqt/qtnetwork/qth/QSslSocket.qth
  + hbqt/qtnetwork/qth/QTcpServer.qth
  + hbqt/qtnetwork/qth/QTcpSocket.qth
  + hbqt/qtnetwork/qth/QUdpSocket.qth

  * hbqt/qtnetwork/qth/filelist.hbm
    + Added: above new classes.

  * hbqt/qtgui/hbqtgui.ch
    + Added: QtNetwork namespace specific constant usable with above classes.

  ; NOTE: this completes the implementation of QtNetwork which offers really
          powerful classes to manage networks. This I realized after a
          project which I did on pure Qt. I am hoping that the same big
          project would materialize with HbQt also.

          Above classes have been tested to be compilable with Qt 4.8.5
          and Qt 5.2. If you find any issues with another version of
          Qt please speak.

2013-11-21 16:42 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r264)
  * hbqtwidgets/getsys.prg
    + Implemented: Clipper compatible CTRL+Y behavior in non-masked
       character GETs.

2013-11-21 16:02 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r263)
  * hbqtwidgets/getsys.prg
    ! Fixed: handling the insert mode returned by ReadInsert() to behave
       properly in non-masked character GETs. Patch provided by Zoran, thanks.

2013-11-12 13:42 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r262)
  * hbqt/qtgui/hbqtgui.ch
    + Added: few more QEvent_* constants added recently by Qt.
    + Added: QDirIterator_* constants.

2013-11-12 13:32 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r261)
  * hbqt/qtcore/qth/filelist.hbm
  + hbqt/qtcore/qth/QDirIterator.qth
    + Added: QDirIterator class.
       Requested by CarozoDe Quilmes.

2013-10-29 14:04 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r260)
  * hbqtwidgets/hbqtbrowse.prg
    ! Fixed: misbehaved record movement when calling :freeze method.
       Reported by Zoran, thanks.

2013-10-07 16:35 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r259)
  * hbdbu/dbu.prg
    + Added: SetKey( K_INS, {|| ReadInsert( ! ReadInsert() ) } )
       for edits to behave in Clipper manner.

  * hbqtwidgets/alert.prg
    % Changed: returns NIL is HbQtBukGet() is terminated with ESC or X button.

  * hbqtwidgets/hbqtbrowse.prg
    + Added: a toolbar button <Show cell contents in memo>.
       Activating it will open a small sheet containing contents of active cell.
       It is helpful to view fields with larger length than it is visible in the
       browser window. The memo has all standard operations.

  * hbqtwidgets/resources/memo.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added: another icon to invoke MemoEditor for active column content.

2013-10-04 19:16 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r258)
  + hbqtwidgets/calculator.prg
  * hbqtwidgets/hbqtwidgets.hbp
    + Added: HbQtCalculator() class developed by M.Ronaldo, many thanks.
       I added these few improvements:
         1. Formatted as per Harbour specs.
         2. Opted for Qt_Sheet widget instead of QDialog.
         2. Memo made visible by a toolbar button. It is not always desired.

  * hbqtwidgets/tests/validator.prg
    + Added: call about usage of HbQtCalculator().

2013-08-30 11:44 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r257)
  * hbqt/qtgui/qth/QWidget.qth
    + QMargins contentsMargins () const
    + Added: void setContentsMargins ( const QMargins & margins )
       The methods were introduced in Qt 4.6 but went un-noticed.

2013-08-13 12:34 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r256)
  * hbqt/qtcore/hbqtcore.ch
    + Added: QLocale_* constants introduced in Qt 4.7 onwards.

  * hbqt/qtcore/qth/QLocale.qth
    + Added: methods introduced in Qt 4.7 onwards.

2013-07-26 20:05 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r255)
  * hbide/actions.prg
  * hbide/edit.prg
  * hbide/editor.prg
  * hbide/main.prg
  * hbide/misc.prg
    + Implemented: <Edit><Format><Format Braces>    {} and [] along ().
                                 <Format Operators> := == >= <= != <> .AND. .OR. .NOT.
                                 <Format Commas>    ,
       These formatting options are available on the entire edit instance
       and is scheduled to be available for selected text as well.

2013-07-09 15:51 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r254)
  * hbqtwidgets/getsys.prg
    + Added: SVN flags.
    - Deleted: left-over TRACE info.

2013-07-09 15:51 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r253)
  * hbqtwidgets/getsys.prg
    ! Fixed: A character GET was not being assigned in some picture formats.
       Reported by Zoran, thanks.

2013-07-09 14:44 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r252)
  * hbqtwidgets/hbqtbrowse.prg
    + Added: :rightVisible() and :leftVisible().
    ! Fixed: error on clicking the header where no column is located.
       Both reported by Zoran. Not Tested, please verify.

2013-07-01 00:02 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r251)
  + hbqtwidgets/resources/text-file.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added: another image.

  * hbqtwidgets/alert.prg
    + Added: <xIcon> in HbQtBulkGet( ..., <xIcon> ).

  * hbqtwidgets/hbqtstd.ch
    + Added; DBRD_ATTRB_TEXT_* constants.

  * hbqtwidgets/hbqtwidgets.hbp
    + Added: hbqtwidgets.hbx

  * hbqtwidgets/dashboard.prg
    + Implemented: A QTextEdit based <Text> object.
      ATTRIBUTES:
        { cFontName, nFontHeight, cnColor, lNoWrap, lKeepAppending, nMSecsToClearBuffer }

          cFontName           => "Courier New"
          nFontHeight         => 18
          cnColor             => "N/W+" OR  {{12,121,200},{212,24,157}}
          lKeepAppending      => .F. => .T. if new text keeps on appended
          nMSecsToClearBuffer => NIL => MilliSeconds if Buffer has to be cleared

    ; NOTE: this object has proved to be the most valuable one in my applications
            and has been much appreciated by my clients. There are many use cases
            this can be applied for, for example, price-checker feature. On a
            separate system with 29 inches monitor, he keeps open the dash-board
            only. He uses <Banner> object to display in-time offers. At the lower
            portion he displays a <Text> object with a small module with just one
            HbQtGet accepting a hand-held scanner input. Based on barcode, VALID
            block of that GET fetches the MRP and other info of the product and
            send the resulting text to this <Text> object. No need of any external
            tool to implement Price-Checker otherwise. Hope you will also be benefitted.

2013-06-28 17:35 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r250)
  * hbqt/qtwebkit/hbqtwebkit.hbc
  * hbqt/qtwebkit/hbqtwebkit.hbm
  * hbqt/qtwebkit/qth/QWebFrame.qth
  * hbqt/qtwebkit/qth/QWebHitTestResult.qth
  * hbqt/qtwebkit/qth/QWebPage.qth
  * hbqt/qtwebkit/qth/QWebView.qth
    + Reworked: to be compilable with Qt 5.x also.

  + hbqt/hbqtwidgets.hbc
    + Added: .hbc to be recognized by hbmk2 for out of tree projects.
       Now this is enough to add a line in {project}.hbp as
        hbqtwidgets.hbc
       This may solve many support questions on the list.

2013-06-25 23:55 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r249)
  * hbide/projmanager.prg
    ! Fixed: one more ocuurance of considering a build specific file as
       candidate for <Project Tree>, e.g., $hb_pkg_install.hbm.

2013-06-25 23:33 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r248)
  * hbide/misc.prg
  * hbide/projmanager.prg
    ! Fixed: handelling of hbmk2 parsed source files begining with "-" or
       "@" inside <Project Tree>.

2013-06-25 14:31 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r247)
  * hbide/misc.prg
    ! Fixed: to handle double-quoted lines properly. Pointed out by Maurizio.

2013-06-24 13:27 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r246)
  * hbxbp/hbpprocess.prg
    % Changed: process channel mode to merge process's stdour and stderr
       output to stdout. this should fix the reported missing (ocassionally)
       output dump in Output Console of HbIDE.

2013-06-22 01:00 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r245)
  * hbqt/hbmk2_qt.hb
    ! Fixed: population of version information based on env vriable instead
       of detecting REBUILD logic from hbmk2 variables, as hbmk2 do not
       pass all command line switches to plugins, and Viktor has not
       responded to my query on the devel-list.

       When rebuilding qtcontribs,
         set QTCONTRIBS_REBUILD=yes
       prior to the build process. This you may need to do only
       once per version of Qt.

  * hbqt/qtgui/hbqt_version.ch
    ! Defaulted to Qt 4.x.

2013-06-22 00:36 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r244)
  * hbide/editor.prg
    % Minor.

  * hbqt/qtgui/hbqt_hbqproxystyle.cpp
    % Minor.

  * hbqtwidgets/tests/hbmk.hbm
    + Added: -mt switch.

  * hbqtwidgets/dashboard.prg
    + Implemented: Threaded data-collection protocol, if app is compiled
       with -mt switch. This greatly enhances appln load-time and keep
       the GUI always responsive. Objects are created as soon as appn
       starts, but data is only populated when data collection routine
       is finished at the background.

  * hbqtwidgets/tests/dashbrd.prg
    % Slight optimization, better control of icons.

2013-06-19 17:55 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r243)
  * hbqtwidgets/hbqtbrowse.prg
    + Enabled: ocde to fire :pressHeaderBlock() for frozen columns.
       Not tested. Please respond if behavior does not confirm to
       standards.

  * hbqt/tests/dbfbrowserclass.prg
    ! Changed: to be compilable with -w3.

  * hbide/edit.prg
    + Implemented:
        Column-Selection
          Only Vertical Thin Line
            Tools Menu - Align At...
              [ESC]cRegEx == \[0-9]|\?
                Text from column-selected text aligned at first occurance
                of a digit character or question-mark character.
                Very handy to align header constants pulled from Qt docs.

2013-06-18 17:15 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r242)
  * hbqtwidgets/hbqtbrowse.prg
    ! Fixed: residual last minute deletion of control structure, after
       testing with IF .F., then deleting before committing.

  * hbide/edit.prg
    + Implemented:
        Column-Selection
          Only Vertical Thin Line
            Tools Menu - Align At...
              [ESC]nn == \25
                Text from Column Selected onwards shifted to 25th position.

       It is achievable otherwise as; selecting the rows by column and then
       pressing spaces/backspace until desired column was reached.
       This is handy to align text to a certain column.

2013-06-18 14:04 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r241)
  * hbqt/tests/dbfbrowser.prg
  * hbqt/tests/dbfbrowserclass.prg
    ! Fixed: to be executable with current Harbour.
       It was broken due to class inheritance mechanism where
       :super() has to be called in :init() method.

  * hbqtwidgets/hbqtbrowse.prg
    ! Fixed: length of the cell was not respecting dynamic changes in
       oColumn:picture. The values were being calculated only once.

    + Added: oBrowse:horizontalMovementBlock().
       If assigned, will be called as :
        Eval( ::horizontalMovementBlock(), nMovementCode, NIL, Self )
       [ Requested by Zoran ]

  + hbqtwidgets/tests/browgets.prg
    + Added: a browse-cum-gets-with-pictures demonstration application.
       Supplied by Zoran with small changes.

2013-06-17 21:55 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r240)
  + hbqt/qtgui/qth/QProxyStyle.qth
    + Added: missed file from prev commit.

2013-06-17 18:39 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r239)
  * hbqt/qtgui/hbqtgui.ch
    + Added: QStyle_* constants.
       This time it was a tedius job as Qt's documentation was
       specifying "?" for many constants which, I had to resort from
       qstyle.h header.

  * hbqt/qtcore/hbqt_pointer.cpp
    % Changed: hbqt_obj_isDerivedFrom() converts pszClassname to upper.
       It greatly simplifies to create .qth(s).

  * hbqt/qtgui/hbqtgui.hbm
  + hbqt/qtgui/hbqt_hbqproxystyle.cpp
  + hbqt/qtgui/hbqt_hbqproxystyle.h
    + Added: basis for implementation of class QProxyModel() via HBQProxyModel().

  * hbqt/qtgui/qth/filelist.hbm
  + hbqt/qtgui/qth/HBQProxyStyle.qth
    + Added: new class HBQProxyStyle() inheriting virtual class QProxyStyle().
       This class brings to PRG layer extremely required feature to owner-draw
       elements and controls. Style Sheets mechanism, though easy to implement,
       but has been inadequate at times to get the desired effects. This
       class offers a robust mechanism to alter all aspects of a window/control.

    NOTE: how to sense the importance of this class:
          Until now painting a widget could only be done via QEvent_Paint event
          which never supplies relevant QPainter which renders it useless to
          intercept and use the way a programmer wants. This class act as a
          proxy to paint event and supplies all needed components to re-draw
          any part of the control.

          This class also covers an irritating behavior ( at times ) of Qt where
          Style Sheet is applied on every child of the widget. QProxyStyle()
          is said to be applied locally for only for the widget it is set.

          This also eliminates the need to sub-class every class of Qt just
          for one reason - how to redraw on a widget.

  * hbqt/tests/demoqt.prg
    + Added: code to demonstrate the usefulness of above class. To explore
       just hover the mouse over "Harbour" push-button.

  * hbqtwidgets/getsys.prg
    + Added: code to exploit ReadInsert() to change the text cursor shape
       from Beam to Block for insert/overstrike mode. This again is the
       result of HBQProxyStyle().

  ;NOTE: This class is evolving, so I would request you to experiment
         and return here your feedback.

2013-06-14 12:41 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r238)
  * hbqtwidgets/getsys.prg
    % Refined: one more instance of misbehavior in numeric GET, where
       "-" was pressed when minus was already there.

2013-06-13 18:34 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r237)
  * hbqtwidgets/getlist.prg
  * hbqtwidgets/getsys.prg
    ! Fixed: A numeric GET was not rebuilding the PICTURE's TEMPLATE
       part if only FUNCTION part was supplied, like, "@K" or "@ZK", etc.
       It was causing GETs to behave erratically in some circumstances.

    ! Fixed: wrong behavior of numeric GETs as reported by Zoran with
       a useful example code.

    + Implemented: Insert/Overstrike mode in character GETs. It follows
       standard Clipper protocol via ReadInsert() call. So,
         SetKey( K_INS, {|| ReadInsert( ! ReadInsert() ) } )
       toggles between overstrike/insert modes. Just place at
       the top of GETs code.

       NOTE: Above behavior is true for GETs without TEMPLATE part of
             PICTURE clause. If a template is provided, ReadInsert() has
             no effect. Examples:
               @...GET...PICTURE "@KA!"       => SUPPORTED
               @...GET...PICTURE "@K !!AX!!"  => NOT SUPPORTED

  * hbqtwidgets/hbqtbrowse.prg
    % Refined: :cellEdit() code to pass pressed key in proper context.

  * hbqtwidgets/tests/validator.prg
    % Amended to demonstrate above changes.

2013-06-13 02:19 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r236)
  - hbide/hbide_v.ch
    - Removed: no longer needed.
  * qtcontribs.hbp
    - Removed: -VCS header creation.

  * hbdbu/dbu.prg
  * hbide/main.prg
  * hbide/misc.prg
    + Implemented: build-time auto created version control proto
       instead of local implementations.

  * hbqt/hbmk2_qt.hb
    + Added: code to build qtgui/hbqt_version.ch.

  * hbqt/qtcore/hbqtcore.ch
    - Disabled: QLibraryInfo_* constants.
      Now available through hbqtgui.ch, and Qt version dependent.

  + hbqt/qtgui/hbqt_version.ch
    + Auto generated header by hbqt/hbmk2_hb containing build Qt version
       based constants which then can be used to distinguish Qt versions
       in header files. This header will be generated if -rebuild flag
       will be passed when building QtContribs.

  * hbqt/qtgui/hbqtgui.ch
    + Added: #include "hbqt_version.ch"

  ; NOTE: Please rebuild QtContribs.
          never commit hbqt_version.ch, it will be changed at build time.
          This solves a lot of issues with version stats.

2013-06-13 00:01 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r235)
  * hbqt/qtmultimedia/hbqtmultimedia.hbc
    ! Tuned for Qt 4 and Qt 5 versions.

  * hbqtwidgets/hbqtbrowse.prg
    ! Fixed: Editing window's width of a browser cell was not at par with
       cell width in some situations, causing a disturbing editing
       experience. Now it is accurate.

2013-06-12 18:44 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r234)
  * hbqt/qtcore/hbqt_pointer.cpp
    + Added: Functions to pull Qt version information:

       HbQt_Qt_Version()     -> nVersion             -> 327318
       HbQt_Qt_Version_Str() -> cVersionStrCompiled  -> "5.0.1"
       HbQt_Qt_Version_Run() -> cVersionStrExecuting -> "5.1.0"

         ? HbQt_Qt_Version() < 0x050100

2013-06-11 15:14 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r233)
  * hbqt/qtgui/hbqt_hbqvalidator.cpp
    % Minor: added debug trace.

  * hbqtwidgets/alert.prg
    % Minor: removed unused lines.

  * hbqtwidgets/getsys.prg
    % Restructured: some internals to have greater control over numeric GETS.

  * hbqtwidgets/hbqtbrowse.prg
    ! Fixed: to take use of current changes in numeric GETs handelling.

  * hbqtwidgets/tests/validator.prg
    % Changed: code to demonstrate numeric GET - "Val2".

  ; NOTE: these changes facilitate beeter experience with numeric GETs.
          I have better control to implement missing PICTURE functionality.
          Please test extensively with all PICTUREs used by you in your
          application and report where does it faulters.

2013-06-07 12:33 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r232)
  * hbqt/qtgui/hbqtgui.ch
    + Added: constants QColorDialog_* and QFontDialog_*.

  * hbqt/qtgui/qth/QWindow.qth
    ! Changed: :fromWinId() version info. It is 0x050100 instead of 0x051000.

2013-06-06 13:16 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r231)
  * hbqt/qtgui/qth/QSurfaceFormat.qth
  * hbqt/qtgui/qth/QWindow.qth
    ! Guarded: some methods per Qt sub-versions.

2013-06-05 22:52 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r230)
  * hbqt/qtcore/qth/QEasingCurve.qth
  * hbqt/qtcore/qth/QVariantAnimation.qth
    ! Fixed: some properties were added in Qt 5.x.

2013-06-05 14:32 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r229)
  * hbqt/qtcore/qth/filelist.hbm
  + hbqt/qtcore/qth/QAbstractAnimation.qth
  + hbqt/qtcore/qth/QAnimationGroup.qth
  + hbqt/qtcore/qth/QEasingCurve.qth
  + hbqt/qtcore/qth/QMargins.qth
  + hbqt/qtcore/qth/QPropertyAnimation.qth
  + hbqt/qtcore/qth/QVariantAnimation.qth
    + Added: Qt 4.6 introduced classes, requested by Luigi.

  * hbqt/qtgui/qth/filelist.hbm
  + hbqt/qtgui/qth/QScreen.qth
  + hbqt/qtgui/qth/QSurface.qth
  + hbqt/qtgui/qth/QSurfaceFormat.qth
  + hbqt/qtgui/qth/QWindow.qth
    + Added: Qt 5.x introduced classes.
       QWindow() class can be interesting, specialy QWindow():fromWinID( nHWND ).

  * hbqt/qtgui/hbqtgui.ch
    + Added constants exposed for above classes.

  ; Please speak which other classes you need for your ongoing development.

2013-06-04 09:45 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r228)
  * hbide/hbide_v.ch
  * hbqtwidgets/getlist.prg
    ! Fixed: fix to previous fix. It was really nasty one.

2013-06-03 17:32 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r227)
  * hbqtwidgets/getlist.prg
  * hbqtwidgets/getsys.prg
    ! Fixed: default behavior of WHEN focus at startup of the GETLIST.
       Reported and supported with demo code, by Nelson Pires.

2013-06-03 01:33 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r226)
  * hbide/hbide_v.ch
    % Version bump.

  * hbqtwidgets/charts.prg
    + Implemented: the concept of providing pallete of colors to be
       used for undefined color attribute of a piece of data.
        :setPallete( cName, aPalleteOfQColors )
        :getPallete( cName )

    % Changed: to keep the undefined colors to remain the same irrespective
       of data retrieval calls. Before it was changing arbitrarily.

  * hbqtwidgets/dashboard.prg
    + Increased: the number of assignable attributes for object of type BANNER.
       Now attributes can be sent as { cnaColor, nSpeedInMSeconds, nFontHeight }.
       Before nSpeedInMSeconds was 250 and and nFontHeight was 36.

2013-06-02 17:53 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r225)
  * hbqtwidgets/hbqtbrowse.prg
    % Refined: METHOD editCell() to honor pressed key being populated
       properly and with respect to PICTURE clause, both in Numeric
       and Date fields.

  * hbqtwidgets/tests/browdb.prg
    % Modified: code to demonstrate the above fixed effects.

2013-05-31 04:49 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r224)
  + hbqtwidgets/resources/alarm-clock.png
  + hbqtwidgets/resources/banner.png
  + hbqtwidgets/resources/images.png
  + hbqtwidgets/resources/layout_content.png
  + hbqtwidgets/resources/numbers.png
  + hbqtwidgets/resources/objects.png
    + Added: few more images.

  * hbqtwidgets/hbqtwidgets.qrc
    + Added: above images.

  * hbide/hbide_v.ch
  * hbdbu/dbu.prg
    % Version Bump.

  * hbqtwidgets/charts.prg
    ! few more refinements and a bug fix.

  * hbqtwidgets/misc.prg
  * hbqtwidgets/treeview.prg

  * hbqtwidgets/hbqtwidgets.hbp
    + Added: dashboard.prg

  + hbqtwidgets/dashboard.prg
    + Implemented: an embeddable DashBoard component.
       This all the important widget will liven your applications with
       manifold acceptance by your clients. It presents the business data
       in meaningful visual representation in real-time, a concept which
       is available in some very high end ERPs only.

       OBJECTS      DashBoard exposes the following objects:
       =======
       1. Figure  : Any expression returning digits, i.e., 216765.52, Time().
                    This object is useful where you want to display running
                    balances or summed figures.

       2. Banner  : A marquee where application can inform the user about
                    anything from simple announcements to new offers.
                    Application vendor also can offer a banner where info
                    is pulled from a web-server. This may enhance your
                    interaction with the end-user.

       3. Graph   : A graphical representation of data. Currently only
                    Bar and Pie charts are available.

       4. Browser : A HbQtBrowse object comsuming a two dimensional array
                    of data which gets updated in real-time.

       5. Picture : A simple slide-show object where image source can be
                    changed as per application's flow. For example, the
                    images souce can be hooked to stock items if a stock
                    master module is activated. Imagination is the limit.

       ANATOMY      The component has the following wings:
       =======
       1. QWidget   Holding all other parts in a QGridlayout.
       2. QTabbar   Exposing multiple stacks/panels hosting various objects.
       3. QToolbar  Top toolbar containing various actions to manipulated
                    objects and other parts of the components.
       4. QToolbar  Left toolbar holding actions to manipulate windows
                    hosting objects.
       5. QStackedWidget Hosting multiple panels.
       6. QMdiArea  Multiple - hosting various windows of objects.
       7. QTreeWidget Hosting application-pushed object definitions invocable
                    by the appln user.
       8. QStatusbar Exposing different parts to provide in-time statistics.

       ACTIONS      Following are the actions available:
       =======
       1. Toolbar-T a) Create a New DashBoard
                    b) Activate another DashBoard
                    c) Create a New Browser Object
                    d)              Figure
                    e)              Graph
                    f)              Banner
                    g)              Picture
                    h) Toggle Objects Tree's Visibility
                    i) Toggle DashBoard/Panels Tabbar's Visibility.

       2. Toolbar-L j) Toggle tabbar of objects visible on active dashboard.
                    k) Position objects on active dashboard with original oordinates.
                    l) Position Objects Cascaded.
                    k) Position Objects Tiled.
                    l) Position Objects Full Screen in Viewport.
                    m) Stack objects Vertically.
                    n) Stack Objects Horizontally.
                    o) Zoom Out Objects.
                    p) Zoom In Objects.

       3. DashBoards/Panels Tabbar ( When toggled to visibility )
                    q) Lock/Unlock Dashboard/Panel.
                    r) Clear DashBoard Objects ( If it is Unlocked ).

       ENVIRONMENT  Following points describe its eco system:
       ===========
       1.           Component passes all the user actions to the application and
                    waits for the appropriate reply which is then carried on.

       2.           It does not save/restore anything at its own. Rather provides
                    the methods to retrieve and push its environment.

       3.           Component can hosted inside any container widget or layout
                    application provides. Itf no parent is supplied then
                    it itself becomes the top-level widget.

  + hbqtwidgets/tests/dashbrd.prg
    + Added: a reasonably self contained application to demonstrate the
       usage of HbQtDashBoard() widget.

2013-05-22 12:56 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r223)
  * hbqt/qtgui/qth/QSound.qth
    ! Fixed: case sensitivity in #include section, pointed-out by Luigi, thanks.

2013-05-21 11:59 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r222)
  * hbide/edit.prg
    ! Fixed: Qt 5.x introduced bug where "Toggle Selection Mode" button was
       producing GPF. Reported by Maurizio, thanks.

  * hbqtwidgets/alert.prg
    ! Tried to fix bug on Linux where HbQtAler() was reporing missing
       "font-name" property and possible GPF on that account.
       Reported by Alain.

2013-05-17 18:16 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r221)
  * hbqt/qtgui/hbqtgui.ch
    + Added: Constants : QLineF_*

  + hbqtwidgets/resources/balance.png
  + hbqtwidgets/resources/chart_bar.png
  + hbqtwidgets/resources/chart_line.png
  + hbqtwidgets/resources/chart_pie.png
  + hbqtwidgets/resources/chart_pie_3d.png
  + hbqtwidgets/resources/dollar.png
  + hbqtwidgets/resources/legend.png
  + hbqtwidgets/resources/shading.png
  + hbqtwidgets/resources/tag.png
  + hbqtwidgets/resources/treeview.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added: new images usable in HbQtCharts and HbQtDashBoard ( upcoming ).

  * hbqtwidgets/hbqtstd.ch
    + Added: constants : HBQT_CHART_*, HBQTMDI_*

  * hbqtwidgets/hbqtwidgets.hbp
    + Added: charts.prg.

  * hbqtwidgets/getlist.prg
    % Changed: if a GETLIST is QREAD without a parent and <NOMODAL>
       clause is not specified, then the the window hosting GETs
       will be executed in modal state.

  * hbqtwidgets/hbqtbrowse.prg
    ! Fixed: a bug where RTE was generated when ::oParent was not supplied.

  * hbqtwidgets/hbqtdbu.prg
    % Rearrangement of some code in logical sections.
      Moved HBQTMDI_* constants to qtstd.ch.

  + hbqtwidgets/charts.prg
    + Implemented: HbQtCharts() class.
       This class is inspired from:
         https://github.com/0TheFox0/OpenChart/blob/master/
           Thanks.

       Charts class is responsible to display graphical representation of
       business data. Currently BAR and 2D PIE charts are available, but
       later many other types will be developed. For LINES and 3D PIE,
       code is already there but needs some tweaks. So those chart types
       are not implemented yet.

         #include "qtstd.ch"

         oParent := QGroupBox( oMain )
         oParent:resize( 300, 200 )

         WITH OBJECT oChart := HbQtCharts():new( oParent )
            :setType( HBQT_CHART_BARS )
            :enableLegend( .F. )
            :setTitle( "Monthly Sales: Jan-Jun 2013 ('000,000)" )

            :addItem( "Jul" , 66, QColor( 210, 25, 125 ) )
            :addItem( "Aug" , 32 )
            :addItem( "Sep" ,  5 )
            :addItem( "Oct" , 14 )
            :addItem( "Nov" , 87 )
            :addItem( "Dec" , 44 )

            :create()

            :enableToolbar( .T. )
         ENDWITH

       Charts window contains a left-side, toggleable, toolbar and
       chart display area. Toolbar contains these actions:
         1. Action Display Bar-Chart
         2. Action Display Pie-Chart
         3. Action Toggle Legends
         4. Action Toggle Shadows
         5. Action Toggle Labels
         6. Action Toggle Values
         7. Action Print Preview

       Besides above action-icons, interface offers two keyboard actions:
         P  Action Print Preview
         T  Action Toggle Toolbar

       Charts class can be hosted on any container widget or layout.
       It is also scheduled to be added to @...QGET...BARCHART... and variants.
       For my projects it is used as a part of HbQtDashBoard() object.
       HbQtDashBoard() will be committed next after finalization of
       its usability components.

       Note: Charts class needs more work but it has already showed me
       a promise. Speak-out your ideas and hopefully those will get
       implemented. Also, if someone can write code for other type of
       charts, is welcome. Believe me, I am extremely poor in maths.

2013-05-15 16:00 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r220)
  * hbqtwidgets/getsys.prg
    ! Fixed: @...QGET...CHECKBOX was not updating its variable on
       check/uncheck operations, pointed out by Zoran, thanks.

2013-05-13 18:25 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r219)
  * hbdbu/dbu.prg
    % Changed: the time-line when default rdd driver has to be activated.

  * hbqtwidgets/hbqtdbu.prg
    + Implemented: attaching a non-structural index to an open table.
       A new "Attach an Index" icon is placed adjoining "Open Table" icon,
       which, when activated, will ask for a disk file in a select File dialog.
       All types of files are offered to be selected, to be generic, so that
       applications generating non-standard extenstion could take use of
       this feature. Selected file is supplied with OrdListAdd() function,
       leaving RDD sub-system to determine the next course.

    + Implemented: RDD specific following settings:
       RDDI_STRUCTORD
       RDDI_MULTITAG
       RDDI_MEMOTYPE
        Whenever a RDD Driver is selected from the combobox, a tiny dialog
        is opened to fetch above settings. If OKeyed, then RDDInfo()
        function is called as per selections.

    ; I have never used any other RDD except DBFCDX, so am not
      familiar with exact behavior of other Rdds. So please shout if
      this implementation needs other tweaks.

2013-04-30 12:47 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r218)
  * hbqtwidgets/getsys.prg
    + Implemented: validating a GET's VALID clause even if another GET is
       selected from mouse, just like Clipper's. If VALID fails then focus
       is retained in the same GET. Now you can build forms with almost
       like Clipper functionality.

2013-04-29 12:59 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r217)
  * hbqt/tests/demoqtc.prg
    + Added code to open a GtQtc window from withing a GUI dialog.
       The concept can be encapsulated inside a menu option or any other action.
       Requested by Massimo.

2013-04-26 13:49 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r216)
  * hbqt/qtgui/hbqt_hbqvalidator.cpp
    ! Fixed: codepage dependent GETs to present proper alphabets.
       This is achieved by replacing QString::toAscii() call with QString::toUtf8().

2013-04-26 12:13 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r215)
  * hbqt/qtgui/hbqt_init.cpp
    ! Fixed: Qt version dependent QMainWindow's header location.

2013-04-25 12:02 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r214)
  * hbide/environ.prg
    ! Fixed: building EnvVar $PATH on *nixes. It was breaking "Build Project"
       process inside HbIDE in certain situations. Discovered and fixed
       by Alain, thanks.

2013-04-24 13:43 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r213)
  * hbide/hbide_v.ch
    * Version bump.

  - hbqt/gtqtc/*
    - Deleted: GTQTC from QtContribs.
       An extremely powerful version has been committed by Przemek in
       Harbour GIT under contrib/gtqtc. Thank you Przemek for this
       all-the-useful contribution. This fills a wide-gap in using
       Harbour platform-independent without even changing the setup.
       Plus it will provide a solid initiative for console mode
       programmers to turn to pure GUI and having a edge of mixing
       GT and GUI screens. New GTQTC has the power to be run in MT
       mode flawlessly, a powerful offering.

  * hbqt/qtgui/hbqt_init.cpp
    + Added: Przemek supplied functions to retrieve GTQTC window
       and its drawingarea. These are useful to embed console inside
       a GUI form. Look into HbIDE code console.prg how it can be
       achieved.

  * hbqt/tests/browqt.prg
    % Minor.

  * hbqt/tests/demoqtc.prg
    % Modified to honor newly committed GTQTC. It has MT functionality
       just like in GTWVT ot GTWVG.

  - hbqt/tests/wvtqt.hbp
  - hbqt/tests/wvtqt.prg
    - Removed, no longer necessary GTWVT console based HbQt extention.
       This is superceded by demoqtc.prg.

  * hbxbp/crt.prg
    * Changed to retrieve GtQtc console from functions provided by Przemek.

  * qtcontribs.hbp
    - Removed: GTQTC build call.

2013-04-23 15:10 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r212)
  * hbide/sources.prg
    ! Fixed: annoying alert "Source has been modified by some external..."
       when, a project is built whole source has been modified and not
       saved before compilation process is started.
       Pushed up by Maurizio.

2013-04-22 17:32 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r211)
  + hbqt/tests/demoqtc.prg
    + Added: demonstration appln based on GTQTC having functionality of
       firing HbQt widget in modal dialog plus GT specific actions.
       It was present in slightly diefferent form when inside Harbour
       SVN and was removed by Viktor.

2013-04-19 13:56 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r210)
  * hbdbu/dbu.prg
    * Version bump.
    % Reverting back HbDBU icon to Harbour instead of Cube.

  * hbdbu/hbdbu.hbp
    + Added: switch to tie Harbour icon to the executable

  * hbdbu/hbdbu.ico
    + Harbour icon.

  * hbide/hbide_v.ch
    * Version bump.

2013-04-19 13:09 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r209)
  * hbqt/tests/demoqt.prg
    ! Fixed: <Exit> main menu option and ESCaping the main window.

2013-04-18 19:14 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r208)
  * hbqtwidgets/hbqtbrowse.prg
  * hbqtwidgets/hbqtdbu.prg
    % Changed: the argument order of AChoice().

  * hbqtwidgets/hbtoqt.ch
    + Added: #xtranslate AChoice(     =>  HbQtAChoice(
             #xtranslate DispOutAt(   =>  HbQtDispOutAt(
             #xtranslate MaxRow(      =>  HbQtMaxRow(
             #xtranslate MaxCol(      =>  HbQtMaxCol(

  * hbqtwidgets/hbqtstd.ch
    + Added: constants _QSAY_* to identify SayList array elements.

  * hbqtwidgets/getlist.prg
    + Implemented: tying the underlying window over which GETs are
       spread to its GetList Object.

    + Implemented: tying of SayList to GetList object in question.
       It is used to reuse SAYs in DispOutAt() calls.

    + Added: __hbqtGetsActiveWindow() to retrieve the current window.
       This function is used to determine DispOutAt(), MaxRow(), MaxCol()
       calls return values.

  * hbqtwidgets/alert.prg
    % Changed: order of additional arguments to HbQtAChoice().
       HbQtAChoice( ..., [<cTitle>], [<oParent>] )
         =>
       HbQtAChoice( ..., [<oParent>], [<cTitle>] )

    + Implemented: near to Clipper AChoice() respecting most of
       the arguments except "cUserFunc".

    + Implemented: Clipper compatible DispOutAt() function as:
       HbQtDispOutAt( <nRow>, <nCol>, <cExp>, [<cColor>], [<oWnd>] )
       [<oWnd>] defaults to __hbqtGetsActiveWindow().

    + Implemented: GT compatible MaxRow() function as:
       HbQtMaxRow( [<oWnd>] )
       [<oWnd>] defaults to __hbqtGetsActiveWindow()

    + Implemented: GT compatible MaxCol() function as:
       HbQtMaxCol( [<oWnd>] )
       [<oWnd>] defaults to __hbqtGetsActiveWindow()

    ; The above functions are only relevent if called from within
      WHEN or VALID clauses for the purpose of determining the
      affected window. This implementation nears the porting efforts.

    ; DispOutAt( nRow, nCol, ... ) exploits existing SAY object if one
       exists at <nRow>,<nCol> created via @ nRow,nCol QSAY ... mechanism.
       If not, then a new object is created at the specified coordinates,
       which in turn is added to the SayList of respective GetList object.

       For all practical purposes, you can reuse existing SAYs.

  * hbqtwidgets/getsys.prg
    + Added: code to publish current GETs window to __hbqtGetsActiveWindow()

  * hbqtwidgets/misc.prg
    + Added: __hbqtGetXYFromRowColumn( oWnd, nRow, nCol, oFont )
               => { nX, nY, nColWidth, nRowHeight }
       It is similar to __hbqtGetGlobalXYFromRowColumn() but returns
       the coordinates calculated from <oWnd>'s origins.

    + Implemented: a handy function to obtain a dialog on top of existing
       window as:
       __hbqtGetADialogOnTopOf( oParent, nTop, nLeft, nBottom, nRight, cTitle, oFont, lResizable )
       The function in turn is used elsewhere in HbQtWidgets code.

  * hbqtwidgets/tests/pureclip.prg
    + Added: code to demonstrate above concepts.

2013-04-16 12:29 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r207)
  * hbqtwidgets/misc.prg
    % Changed: __hbqtGetXYFromRowColumn() => __hbqtGetGlobalXYFromRowColumn()

  * hbqtwidgets/getlist.prg
    % Function name change.

  * hbqtwidgets/hbqtbrowse.prg
    ! Fixed: positioning of browser column per horizontal slider movement.
       Reported by Zoran.
    ! Fixed: calling the :verticalMovementBlock() on vertical slider movement.
        Again reported by Zoran.

2013-04-15 18:24 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r206)
  * hbqtwidgets/hbqtbrowse.prg
    ! Fixed: to honor PICTURE sent to :cellEdit( <cPicture>,... ) call.

  * hbqtwidgets/getlist.prg
    ! Fixed: many artifacts.

  * hbqtwidgets/getsys.prg
    ! Fixed: many buffer management artifacts.

  * hbqtwidgets/tests/getsinfo.prg
    + Added: more variable types and pictures to test differences with
       Clipper GET system.

  * hbqtwidgets/tests/browdb.prg
    ! Fixed: editing of a field was not reflecting in column.
       :refreshCurrent() was missing.

  * hbqtwidgets/tests/pureclip.prg
  * hbqtwidgets/tests/validator.prg
    % Added: PICTURE clauses with different parameters to demonstrate
       Clipper functionality.

2013-04-14 15:40 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r205)
  * hbqtwidgets/getsys.prg
    ! Fixed: various instance variables of GET object, e.g., :buffer(), :updateBuffer(), etc.
        Reported by Zoran Sibinovic with test code.

  + hbqtwidgets/tests/getsinfo.prg
    + Added: test code to determine various attributes of GETs based on picture
        functions and templates. Test code is provided by Nenad ( as per Zoran's message ).
        I have just refined it to be usable with pure Harbour.
        For HbQt, compile it as : hbmk2 getsinfo -d__QT__ -run -inc.
        For Clipper, compile it as ( and in placing it in harbour/tests ) : hbmk2 getsingo -run -inc.

    ; Please report back if any attribute is still misbehaving.

2013-04-11 19:02 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r204)
  * hbide/edit.prg
    % Minor.

  * hbqt/tests/draganddrop.prg
    % Changed: source with SVN Id and some more tweaks, forwarded by Luigi.

  * hbqtwidgets/hbqtwidgets.hbp
    + Added: misc.prg.

  + hbqtwidgets/misc.prg
    % Separated: miscellaneous functions spread in HbQtWidgets sources.
    + Added: few more utility functions in a hope that end-user will also
       be needing them at some point of development.

  * hbqtwidgets/hbqtbrowse.prg
    % Simplified: code to take use of HbQtWidgets Public API.

  * hbqtwidgets/getsys.prg
    ! Fixed: ACCESS oGET:changed
             ACCESS oGET:picture
             ACCESS oGET:unTransform()
                Loosely tested, please shout if not proper.

  * hbqtwidgets/hbqtstd.ch
    + Added: another ATTRIBUTE - _QGET_ATTRB_ATROWCOLUMNONTOPOF
             An Array representing { oWnd, nRow, nCol, lMovable }.
             Used to Fetch another GETs on top of a GETs window.
             ( Read Below )

  * hbqtwidgets/getlist.prg
    + Implemented: To fetch another GETs on top of a GETs window passing
       Window, Row, Column, IfMovable coordinates as part of the
       QREAD ... ATTRIBUTES clause. This attribute can be assigned to
       ATTRIBUTES array as
         aAttrbs := {}
         AAdd( aAttrbs, { ... } )
         AAdd( aAttrbs, { _QGET_ATTRB_ATROWCOLUMNONTOPOF,
                              { <oWnd>, <nRow>, <nCol>, [<lIfMOvable>] } } )
       If passed this attribute, a modal dialog will be position on the
       XY position ascertained from <nRow>,<nCol> of <oWnd> based on
       the font set on <oWnd> if that is of type fixedPitch(), otherwise
       via font of current GETs font. If <lIfMovable> is passed as TRUE,
       then dialog will be decorated with a TitleBar but without any
       other buttons, just to facilitate appln user to move it around if
       there is a need, otherwise, dialog will be without a titlebar
       and hence will not be movable.

       This implementation enables us to overcome yet another porting issue
       where one has to write a lot of code to achieve similar functionality.

  * hbqtwidgets/tests/pureclip.prg
    + Added: code to demonstrate how another GET window can be initiated
        from within VALID/WHEN clauses forming extention to existing
        GETs.

2013-04-09 02:21 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r203)
   + hbqt/tests/draganddrop.prg
     + Added: a demo appln which demonstrate how rows can be moved/copied
        from one table to another identical table.

        The appln is contributed by Luigi Ferraris, thanks.

2013-04-08 15:34 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r202)
  * ChangeLog.txt
    ! Rewote previous entry # 201.

  * hbide/edit.prg
  * hbide/misc.prg
    + Implemented: recognition of text in strings and comments and then
       deactivate code specific operations on keywords, etc., taking
       it as plain text.

       Was a long-overdue feature but did not got attention until now
       when Massimo pointed it out recently.

2013-04-08 00:04 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r201)
  * hbqt/qtgui/qth/QAbstractItemView.qth
    + Added: Qt::DropAction defaultDropAction () const
             void setDefaultDropAction ( Qt::DropAction dropAction )
       For Qt 4.6 and above. Pointed out by Luigi.

2013-04-05 12:24 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r200)
  * hbqtwidgets/hbqtbrowse.prg
    - Removed: evaluation of column's block with edited value in METHOD editCell(...).
       When I had implemented it like that, was double-minded since begining.
       I could not assert the real time use case scenario how it should
       behave. But recent clarification by Zoran has made my mind clear
       about it. In fact, it should be the responsibility of appln what
       it wants to do with ediited value, not that of library.

2013-04-04 17:45 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r199)
  * hbqtwidgets/getlist.prg
  * hbqtwidgets/getsys.prg
    + Implemented: GET PICTURE FUNCTION contain "K".
       Q 10,10 GET cText PICTURE "@!K"
       Now only those GETs will be presented having all text selected
       which will contain "K" in its picture function.

       The feature was missing since begining which get nailed today.

  * hbqtwidgets/tests/pureclip.prg
    + Added: code to demonstrate "@K" usage.

2013-04-03 17:22 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r198)
  * hbide/hbide_v.ch
    * Version bump.

2013-04-03 16:04 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r197)
  * hbqtwidgets/hbqtstd.ch
    + QREAD ... ATTRIBUTES <aAttrbs>
    + #define _QSET_EDITSPADDING
    + #command QSET EDITSPADDING [TO] <nPadds>

  * hbqtwidgets/getlist.prg
    + Added: ATTRIBUTES clause to QREAD : QREAD ... ATTRIBUTES <aAttrbs>
       <aAttrbs> is a two dimentional array. First element will be one
       of the following constants and the second its value:

          _QGET_ATTRB_SETMODE    { 25, 80 }  Defaults to NIL
          _QGET_ATTRB_RESIZABLE  .T. | .F.   Defaults to .T.

       _QGET_ATTRB_SETMODE will instruct the GET engine to resize the
       window per rows and columns as would a normal GT window does.

       _QGET_ATTRB_RESIZABLE will allow you to fine tune user behavior,
       as to if he/she can resize the form window.

       These two attributes are applied only in case if QREAD is
       called __WITHOUT__ <GetParent>, i.e., like Clipper GT.

  * hbqtwidgets/hbqtbrowse.prg
    + Implemented: a title-bar-less modal dialog to host a HbQtBrowse()
       object mainly usable for lookup browsers. This has been achieved for
       Clipper like data-entry windows respecting
       <nTop>,<nLeft>,<nBottom>,<nRight> coordinates of TBrowse().

       You only need to pass <lOnTop> == TRUE to activate it as below:

          oBrowse := HbQtBrowseNew( nTop, nLeft, nBottom, nRight, oParent, oFont, lOnTop )
            =>
          oBrowse := HbQtBrowseNew( 10, 10, 20, 70, oDataEntryWindow, NIL, .T. )
          // Configure the browse, add columns, define various blocks, etc.
          oBrowse:execute()

       Terminating the browser will be initiated from oBrowse:navigationBlock()
       depending upon the application's needs as:
          IF nKey == K_ESC
             oBrowse:terminate()
          ELSEIF nKey == K_ENTER
             // Retieve the current record's info to be used elsewhere.
             oBrowse:terminate()
          ELSE ...

       In real-time scenario, like in Clipper, the complete sequence will be like:

          FUNCTION Main()

             SetKey( K_F2, {|| MySelectionBrowser() } )
             @ 12, 10 SAY "This" GET cText
             @ 13, 10 SAY "That" GET cOtherText

             READ
             SetKey( K_F2, NIL )

             RETURN NIL

          FUNCTION MySelectionBrowser()
             LOCAL oBrowse

             oBrowse := HbQtBrowseNew( 10, 10, 20, 70, GetActive():parent(), NIL, .T. )
             WITH OBJECT oBrowse
                // other blocks
                :navigationBlock := {|...| NavigateMe( ... ) }
             ENDWITH

             oBrowse:execute()

             RETURN NIL

          FUNCTION NavigateMe( nKey, , oBrowse )

             SWITCH nKey
             CASE K_ESC   ; oBrowse:terminate() ; RETURN .T.
             CASE K_ENTER ; // Pull Record Info */ ; oBrowse:terminate() ; RETURN .T.
             CASE ...
             ENDSWITCH

             RETURN .F.

  * hbqtwidgets/tests/pureclip.prg
    + Added: code to demonstrate how a lookup browser can be implemented and used.
       Press F2 to activate lookup browser. If you will be inside first get,
       pressing ENTER on the lookup browser will put the value of second field
       of browser in the GET.

  * hbqtwidgets/tests/validator.prg
    + Added: code to demonstrate the use of QREAD ... ATTRIBUTES

2013-03-31 03:54 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r196)
  * hbqtwidgets/hbqtbrowse.prg
    + Implemented: METHOD searchExBlock( bBlock )
                   METHOD searchEx( cValue )
       When activated, a blue colored label will show up at the bottom
       of the browser displaying search string in white.

  * hbqtwidgets/hbqtdbu.prg
    + Added: METHOD indexKeyType() -> cType

  * hbqtwidgets/tests/browdb.prg
    + Added code to demoonstrate how oHbQtBrowse:searchExBlock() works.

  * hbdbu/dbu.prg
    + Implemented: searching feature in HbDBU as per above implementation.
       Now, if an index is active on the browser, then pressing any printable
       key will start an incremental search, pressing ENTER will terminate
       search, pressing K_BS will allow to alter the search string.

       This implementation is a non-blocking operation, means, all other
       features of the browser are still active while search is being
       performed. This facilitates to develop look-up browsers without which
       we cannot imagine to port our Clipper code.

    NEXT: HbQtBrowse to be encapsulated in a title-bar less modal dialog
          to present a truely look-up browsers taking use of the above
          search implementation, stay tuned.

2013-03-25 13:27 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r195)
  * hbqt/hbmk2_qt.hb
    ! Fixed: to honor a newly introduced construct in .ui to .cpp conversion.
    % Optimized: the other code, a by-process of above fix.

2013-03-23 19:08 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r194)
  * hbide/projmanager.prg
    + Implemented: support for drag-and-drop of source files onto
       <Project Properties> dialog.

2013-03-23 18:28 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r193)
  * hbxbp/filedialog.prg
    ! A small omission corrected. Now default filename is shown in the
       <File:> editi control as selected.

  * hbide/selectsources.ui
    + Added: few more controls.

  * hbide/misc.prg
  * hbide/projmanager.prg
    + Refined: the Project Builder concept. Now no file dialog is opened
       to fetch the .hbp filename. Instead, <Select Sources> dialog
       shows up <.hbp> edit control and an icon next to it to select
       a folder. A default project file name starting with "prj" and
       ending with next number of "prjnnnnn.hbp" is shown in last
       explored working folder, like, <c:\myprojects\prj00001.hbp>.
       Next time if a project is created in same folder,
       <c:\myprojects\prj00002.hbp> will show up if prj00001.hbp is
       still lying there.

       The above feature was pointed out by Massimo.

2013-03-22 18:02 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r192)
  * hbide/projectpropertiesex.ui
  + hbide/selectsources.ui
  * hbide/hbide.hbp
    + Added: selectsources.ui

  * hbide/misc.prg
  * hbide/projmanager.prg
    + Implemented: restructured and re-thought of Project builder.

       1. The <Project Properties> dialog now contain only single view,
           all contained inside there and works as before except for
           interface.

       2. <Create a Project> action opens a file save dialog where you
           need to provide a .hbp name, which is tested for duplicacy
           and disregarded if exists a project with same name.
           Before this step was asking for the folder location only.

       3. A modal dialog is opened containing all the sources contained
           in the folder where above project resides. Sources are ordered
           first by extention and next by name. By default all sources
           are shown as checked, exception being .hbp, .hbc, .hbm.

       4. Interface provides to <Select/Unselect All>, <Select By Ext>,
           and <UnSelect by Ext> where you can manage which sources
           should makeup to the project.

       5. Interface also contain elements to provide few hbmk2 specifc
           switches plus compiler specific switches. I have not gone
           to unnecessary details, only switches which are frequently
           used are vailable on the interface. This interface is only
           available for a NEW project. Once saved, and re-called
           for changes, the old dialog with changes told in #1 above
           will be effective.

       6. Once satisfied with the selections and switches, click <OK>.
           The <Projects Properties> Dialog will show up displaying
           actual .hbp contents. Still project is not saved. It may
           be modified as per your additional requirements as you
           would do in a .hbp just like in a text-editor, i.e., adding
           more switches and/or sources from other folders, etc.

       7. Click <Save & Exit> or <Save> to save the project on disk.
           Such saved project can directly be submitted to hbmk2 from
           comman-line as well. The files and switches are organized
           in meaningful sections.

    ; NOTE: This implementation has made <Project> setup and link
            process a breeze. Give it a try, you will not be disappointed.

    ; NEXT: drag-drop support of sources in <Project Properties> dialog.

2013-03-21 13:45 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r191)
  * hbqtwidgets/getsys.prg
    + Implemented: @ ... QGET ... COMBOBOX ... to ::assign() the selected
       prompt activated via mouse. Activating a conbobox get via mouse
       does not post validates the selection, simply assigns. Before it was
       done via presseing ENTER only which also post validates.

2013-03-19 19:02 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r190)
  * hbqt/qtgui/hbqt_hbqplaintextedit.cpp
    + Added: WITH OBJECT/ENDWITH pair highlighting.

  * hbide/actions.prg
  * hbide/main.prg
  * hbide/projmanager.prg
    % Reorganized: <Projects> option on <Main Menu>. All prompts are
       fully functional. It adds those prompts also which were available
       with right-click context menuu on <Projects> node of projects tree.

  * hbide/edit.prg
  * hbide/editor.prg
    % Rationalized: many artifacts.
    % Speed-up many operations by building static hash of keywords and
       applying hb_hCaseMatch( , .f. ).
    - Deleted: transfered to C++ code residuals, was creating confusion.

  * hbide/saveload.prg
    ! Fixed: a nastry bug where RTE was generated when <Remove Project>
       option was activated after <Close All Files> option and HbIDE
       was containing more then one panel. Reported by Francesco S. Giudice.

  ; NEXT: rationalization of project creation.

2013-03-15 18:45 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r189)
  * hbqtwidgets/hbqtbrowse.prg
    ! Fixed: a wrong type checking which was preveting user defined
       context-menu block.

  + hbdbu/resources/hbdbu.htm
    + Added: HbDBU documentation in .html format.
       This documentation is made available by clicking on <Help> icon
       on the toolbar.

  + hbdbu/resources/help.png
    + New image for <Help> action on the HbDBU's toolbar.
  * hbdbu/dbu.qrc
    + Added help.png and hbdbu.htm.

  * hbdbu/dbu.ui
    + Added: one more page to stacked widget for a futuristic feature.

  * hbdbu/dbu.prg
    + Implemented: help documentation via an icon <Help> on the HbDBU's toolbar.
       The documentation content is a work-in-progress as I am really poor
       in explaining an application. Anyway I will try my level best.
       If possible, you can send some text explaining any part of the HbDBU.

    % Changed: context menu options on a browser instance.
       It is now rationale will all important actions a user is ought to
       perform frequently. Speak-out if more actions should go there.

       It was a pending feature till now, but Massimo just pushed it up.

    % Changed a little the behavior of invoking HbDBU.
       If a .dbf is supplied on the command-line and no .dbu is supplied,
       then no environment will be read and saved by default. Anyhow,
       environment can be saved via <Save Environment> icon.

2013-03-14 16:14 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r188)
  * hbqtwidgets/hbqtdbu.prg
    + Made some methods and functions public.
    + Added: couple of more methods, internal usage.

  + hbdbu/resources/rest-env.png
  + hbdbu/resources/save-env.png
  * hbdbu/dbu.qrc
    + Added: two more images for HbDBU's toolbar.

  * hbdbu/dbu.prg
    + Implemented: command-line parameters extended to accept the environment
       file ( .dbu ) to restore settings from.

    + Implemented: command-line parameters to accept default RDD to use
       for next .dbf files provided on the command-line.

    + Implemented: to memorize last RDD to make it default for next run.

    + Added: <Save Environment> icon on the toolbar.
       Activating it will open file save dialog asking for a .dbu, and if
       provided correctly, including the .dbu extention, will save the
       current environment into it, which can be opened and/or merged with
       your current session on will.

    + Added: <Merge Environment> icon on the toolbar.
       When invoked will ask for a .dbu in file open dialog. The environment
       contained therein will be merged into your existing environment.

    EXAMPLES:
       hbdbu.exe e:\dev_exes\ntx.dbu dbfntx e:\harbour\tests\test.dbf
         will open the test.dbf with DBFNTX driver.

       hbdbu.exe e:\dev_exes\ntx.dbu dbfntx e:\harbour\tests\test.dbf \
                                     dbfcdx e:\harbour\tests\test.dbf
         will open the test.dbf with DBFNTX drive and 2nd copy of test.dbf
         with DBFCDX rdd.

       hbdbu.exe e:\envs\mylastenv.dbu
         will open mylastenv.dbu contained view.

       hbdbu.exe e:\envs\mylastenv.dbu DBFCDX e:\harbour\tests\test.dbf
         will open the view in mylastenv.dbu and also test.dbf with DBFCDX rdd.

    NOTE: this implementation allows you to save and execute n number of views.
          Also this empowers you to link .dbf and .dbu's with HbDBU via explorer.

2013-03-13 16:08 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r187)
  * hbdbu/dbu.prg
  * hbide/hbide_v.ch
    % Revision bump.

2013-03-13 15:47 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r186)
  + hbqtwidgets/menues.prg
  + hbqtwidgets/statusbar.prg
  + hbqtwidgets/treeview.prg
    + Added: Classes from HbXBP but without any framework. These must be
       usable with any framework. Work-in-progress.

  + hbqtwidgets/alert.prg
  + hbqtwidgets/getlist.prg
  + hbqtwidgets/getsys.prg
  + hbqtwidgets/toolbar.prg

  - hbqtwidgets/hbqtalert.prg
  - hbqtwidgets/hbqttoolbar.prg
  - hbqtwidgets/hbqtgetlist.prg
  - hbqtwidgets/hbqtgetsys.prg
    % Renamed few sources to portray contents presisely.

  * hbqtwidgets/hbqtwidgets.hbp
    % Deleted, Added changed/new sources.

  * hbqtwidgets/hbqtbrowse.prg
    % Overloaded few more methods of TBrowse to eliminate the unnecessary
       GT specific display calls and columns specific metrix calculations.
       This must speed-up HbQtBrowse():refreshAll() method.

  * hbqtwidgets/hbqtdbu.prg
    % Minor.

2013-03-13 15:28 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r185)
  * hbide/findreplace.prg
    ! Fixed: not to consider lines starting with
       METHOD, ACCESS, ASSIGN, MESSAGE in CLASS definitions.

    % Refined: Functions Map layout.
       Now it shows out like this, publishing the call with arguments:

       Alert()(10)
            E:\harbour\addons\hbdbu\dbu.prg
            (  282) exit                  : Alert( "Exit HbDBU ?", { "Yes", "No" } )
            (  329) setDatabaseParams     : Alert( "Could not Connect to Cache Server" )
            (  429) saveMyTable           : Alert( { cTable + ", already exists!", "DO you want to overwrite it ?" }, { "No", "Yes" }, , , "WARNING : Table could be Overwritten" )
            (  448) saveMyTable           : Alert( cTable + " : has been created successfully!" )

       It helps to locate certain instances of wrongly passed arguments.

2013-03-12 15:10 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r184)
  + hbide/resources/map.png
  * hbide/hbide.qrc
    + Added: map.png.

  + hbide/functionsmap.ui
  * hbide/hbide.hbp
    + Added: functionsmap.ui

  * hbide/main.prg
    + Implemented: Printing option to <Show Code Fragment> window
       which can be activated via context menu of <Functions List>.
       Press CTRL+P when <Show Code Fragment> dialog is in focus.
       A Print Preview dialog will be opened containing the printable
       pages which, in turn, can be printed as per choice.

  * hbide/edit.prg
  * hbide/editor.prg
    + Implemented: printing of selected text.
       How It Works:
       ============
        1. Select the text by mouse or keyboard.
        2. Right-Click to activate context menu.
        3. Select <Show Selected Text>
        4. A stay-on-top code-fragment window will be opened
            containing the selected text.
        5. Press CTRL+P to activate print preview dialog.

  * hbide/actions.prg
  * hbide/docks.prg
  * hbide/misc.prg
  * hbide/object.prg
    + Added: components to activate and manipulate feature
             IdeFunctionsMap() (Read Below).
             Will be referred as <Functions Map> in subsequent context.

  * hbide/findreplace.prg
    + Implemented: CLASS IdeFunctionsMap()
       <Functions Map> is a tool to view/print the functions usage
       given a .hbp project or a combinations of .hbp projects.

       It obtains a map of functions as:
         1. Where they are defined, with arguments, if possible.
         2. And from Where they are called, with source/function/line numbers.

       It empowers a developer to optimize his/her source code,
       to isolate functions which are never called, to determine
       why a function is called so many times in a single function
       or source, etc. Developers imagination is the limit as to
       how this tool can be used to his advantage.

       How It Works:
       ============
        1. Click on <Functions Map> icon on the main toolbar.
            Alternatively click <Main Menu><View><Docking Widgets><Functions Map>.
        2. A docking widget will appear on the right docking area.
        3. On the top, a selectable list of all projects visible in
            <Projects Tree> will appear.
        4. Select the projects for which to obtain Funtions Map.
        5. Click on <Create> push-button visible right under projects
            selection list.
        6. The stat will start appearing in the lower edit control.
        7. You can click on <Stop> push button anytime during the process.
        8. After all source files will be processed, real-time map entries
            will start appearing in the editor.
        9. Have patient, it may take some time, depending upon the project(s)
            size in terms of number of lines processed.
        10.Once the map is complete, scrolling entries will stop to appear,
            navigate the editor. Right-click context menu is avialble for
            further options.
        11.Double-clicking on a entry will open the relevant source,
            positioning the cursor on relevant portion of the line.

       The map is divided in two parts.
       1st part shows the functions which have been called at least once.
       2nd part shows only those functions which have never been called.
       It make it easier to investigate sources.

       These assumptions are relevant to this process:

       1. Functions called in macros do not makeup to the map.
       2. Function call is determined with this regular expression:
            "\b[A-Za-z0-9_]+ ?(?=\()"
          ( Please shout if it is wrong ).
       3. Commands are not parsed to functions and hence do not make up in map.
       4. Only CLASS declation is considered as function, methods are not
           taken into account.
       5. No seperation id made for STATIC and PUBLIC functions, both
           make up to the map.
       6. Multi-line, single-line, in-line ( only at the end with // and && ) remarks
           are left untouched.

       Layout of Mapped Entries:
       ========================
       Function contained the project(s) sources ( 1st Section ):

       DecryptPass( cStr, nMode )(6)                          Prototype, times called.
       (4)  E:\Laptop-Vouch32\dev_sources\qdbu\dbumisc.prg    Line#, Source Name             CLICKABLE
            E:\harbour\addons\hbdbu\dbu.prg                   Called-in Source
            (  362) openConnections( aConxns )                Line#, Function called from    CLICKABLE
            (  362) openConnections( aConxns )                .
            (  363) openConnections( aConxns )                .
            (  363) openConnections( aConxns )                .
            (  368) openConnections( aConxns )                .
            (  369) openConnections( aConxns )                .

       Function not contained in the sources but called ( 1st Section ):

       DbuMGR()(1)                                            Function w/out prototype, times called
            E:\harbour\addons\hbdbu\dbu.prg                   Called-in Source
            (   95) Main( ... )                               Line#, Function called from    CLICKABLE

       Function contained in the source(s) but not called ( 2nd Section ):

       Main( ... )                                            Prototype
       (85)  E:\harbour\addons\hbdbu\dbu.prg                  Line#, Source Name


       How the Feature was conceived:
       =============================
       The other day, my manager asked me if we have some utility which can be used
       to isolate those functions which are not being called any-more. The idea was
       to optimize the huge application developed constantly in-house since 23+ years,
       from Clipper to (x)Harbour. I posted the request on Harbour-devep list. Single
       reply from Tamas was difficult to use plus was not satisfying what I wanted.
       So, I thought, why not HbIDE should have this feature, and result is satisfying.

       Your opinion and suggestions will matter.

2013-03-12 15:02 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)(r183)
  * hbqtwidgets/hbqtbrowse.prg
    + Implemented: METHOD activateIndexMenu()
                   METHOD activateColumnsMenu()
       As the name implies, calling these methods will activate the
       respective menu options on the HbQtBrowserr toolbar.

  * hbdbu/dbu.prg
    + Added: code to exploit above two methods.

2013-03-07 19:03 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  + hbqtwidgets/resources/copy.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added: another image.

  * hbqtwidgets/hbqtbrowse.prg
    + Implemented: selection of multiple rows and columns by dragging
       the mouse and then copy the selection on clipboard. A new
       icon "Copy Clipboard" is provided on the HbQtBrowse:toolbar
       to activate copy operation after selection. Alternatively,
       ALT+C key can be used to copy selection.

       The records are separated with hb_eol().
       The columns are separated by K_TAB.
       MS Excel, Notepad, HbIDE pastes this copy properly.

       The first row contains the column headers, so no need to
       remember the field names manually.

       NOTE: it has not been possible to scroll past the last row visible
             in the browser window for selection process. Columns
             can be scrolled till end.

  * hbqtwidgets/hbqtdbu.prg
    + Implemented: to open next browser at position where last browser
       was closed, if any. Only position is relevant, not size.

2013-03-01 19:26 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  + hbqtwidgets/resources/cube-2.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added: another image to represent HbDBU.

  * hbqtwidgets/hbqtbrowse.prg
    % Changed: the inactive btowser row/column selection background color.
       Now it distinguishly separates active and inactive windows.

  * hbqtwidgets/hbqtdbu.prg
    % Minor.

  * hbqtwidgets/dbucreate.prg
    ! Fixed: where <Connections> combo-box was not being populated
       with the change in <RDD Driver> drop-down pick list on
       <Create a Table> dialog.

  * hbdbu/dbu.prg
    + Added code to demonstrate how oDbu:saveTableBlock() can be exploited.
    % Changed: HbDBU's task-bar icon.

2013-02-27 15:55 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  + hbqtwidgets/resources/table-add.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added one more image.

  + hbqtwidgets/dbucreate.prg
  * hbqtwidgets/hbqtwidgets.hbp
    + Added dbucreate.prg

  * hbqtwidgets/hbqtbrowse.prg
  * hbqtwidgets/hbqtdbu.prg
    + Implemented: <Create a Table> action which can be activated via
       an icon on the HbDBU's top toolbar. A modeless, stay-on-top window
       is displayed. Window is devided into two sections. Top one hosts an
       array browser to fetch table structure. Lower one host another array
       browser to fetch index tags and expression.

       These are the actions available for editing, etc.

       K_F1        to view these instructions

       K_ENTER     to start editing

       K_CTRL_INS  to insert a blank row
       K_CTRL_DEL  to delete current row
       K_CTRL_UP   to move current row up
       K_CTRL_DOWN to move current row down

       K_CTRL_V    to paste copied structure ( from Structure pane at the right of HbDBU )

       K_CTRL_P    to print the structure info

       initiating editing will always position the cursor on "Name" field and then will
       continue circulatory as Name->Type->Len->Dec->NextRow->... A new row will
       automatically appened at the bottom if "Dec" field is reached and current
       row is the last one. To leave the editing mode, just press ESC. If "Name"
       field will be blank, the row will be deleted, browser will be refreshed.
       "Len" and "Dec" fields are auto assigned for (L)ogical and (D)ate fields.

       If required you can paste entire structure of an opened table. Click on the
       browser window whose structure is nneded to be pasted, click on <Structure>
       browser on the right-most pane, press CTRL+C, resturn back to <Create a Table>
       window, press CTRL+V, and see structure pasted here. The existing structure
       will be replaced so be carefull.

       Window is modeless so it is possible to start creating tables in multiple
       windows simultaneously.

       I am familiar with only DBFCDX and ADS (CDX) file types only. Let me know if
       anything is missing.

       This implementation also demnstrate an example how a parent/child relational
       form can be developed, like an invoice. This code has all the constructs
       in-place to achieve that, so strech your imagination in this direction.
       The complete code is contained in dbucreate.prg only, study it.

  * hbdbu/dbu.prg
    % Version bump.

2013-02-27 15:48 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/sources.prg
    ! Fixed: where QFileSystemWatcher() was being set on a source yet
       not created. Reported by Alain and detected on Linux.

2013-02-25 15:37 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbdbu/dbu.prg
  * hbqtwidgets/hbqtdbu.prg
    + Implemented: to open table(s) passded on command-line.
       C:\>HbDBU.exe c:\harbour\tests\test.dbf
       Multiple files can be designated separated by a space.
       Filename must not contain any space.

       Feature requested by Massimo.

2013-02-25 14:50 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  + hbide/resources/hbide-2013.png
  * hbide/hbide.qrc
  * hbide/main.prg
    + Added: new HbIDE splash screen with correct copyright years.
       Was a long neglected necessity which is flared up by Massimo.

  + hbqtwidgets/resources/hbdbu-2013.png
  * hbqtwidgets/hbqtwidgets.qrc
  * hbdbu/dbu.prg
    + Added: new look HbDBU splash screen.

2013-02-25 13:16 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/sources.prg
    + Implemented: protocol to keep watch on the sopened source
       and report if it is changed from out-side of current HbIDE
       instance and then asks to reload or not.

       Pointer sent by Massimo, thanks.

       Not heavily tested, so your feedback will be valuable.

2013-02-22 19:12 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtstd.ch
    + Added: clause @ ... QSAY ... PROPERTIES <prop>
    + Added: clause @ ... QSAY ... PROPERTIES <prop> QGET ...

  * hbqtwidgets/hbqtgetlist.prg
    + Implemented: PROPERTIES clause of @ ... QSAY PROPERTIES ... [ QGET ... ]
       The block is evaluated with <oQLabel>,<{nX,nY,nW,nH}>.
       User can then change the properrties of oQLabel as he/she
       deem appropriate to their needs.

       CAUTION: do not mess-up with Windows look and feel. A wrong
                usage may spoil overall screen design.

  * hbqtwidgets/hbqtgetsys.prg
    + Implemented: num-pad placed ENTER key which now behaves like
        standard ENTER key is pressed. Pointed-out by Alain.

  * hbqtwidgets/tests/validator.prg
    + Added: code to demonstrate the use of @ ... QSAY ... PROPERTIES clause.

2013-02-22 18:57 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtgui/hbqt_hbqplaintextedit.cpp
    + Added: detection of Shift+Delete which must behave like Ctrl+X.

  * hbide/themes.prg
    + Added: some Harbour keywords to colorize per specs.

  * hbide/edit.prg
  * hbide/editor.prg
    + Implemented: ::nextEditor() and ::previousEditor() methods.
       Assigned: Alt+Right Arrow to ::nextEditor()
                 Alt+Left Arrow to ::previousEditor()
         The assigment is permanent. You can assign these methods
         to other keys but these keys cannot be overriden.

         The methods navigate right or left editing instance in a
         cirriculatory manner, means jumping to first or last editing
         tab depending upon the arrow hit.

         This enables to you navigate between tabs without leaving the
         keyboard. Till now you had to click on a tab to activate
         contained editing instance.

         The pointer was received from Francesco Saverio Giudice.

  * hbide/shortcuts.prg
    + Added: above two methods to be callable via user macros.

2013-02-22 09:15 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    % Version Bump.

2013-02-18 14:13 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtcore/hbqt_misc.prg
    + Implemented: in error handler, to find a child of the name
       representing the error message. Now, manually built dialogs
       have the same feature as Qt Creator created dialogs.

         oMain:cChildName -> object represented by cChildName.

       The limitation in this approach is that you must have to
       set the name in upper case.

       This implementation is made possible on top of oObj:findChild() method.
       Now you can construct a dialog and its children and then pass
       only main window object to functions which can then access
       its children transparently.

  * hbqtwidgets/hbqtbrowse.prg
    + Added: setObjectName( "TBROWSE" ) suffixed with next counter,
       Just in case one wants to find it as oMain:TBrowse.

2013-02-15 18:53 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtbrowse.prg
    + Implemented: SET/GET Method :pressHeaderBlock().
       The block is executed whenever user clicks on any column header
       and passes <nCol>,<cName>,<oBrw> arguments.

    % Changed: :verticalMovementBlock() passes the K_ constant associated
       with the movement, i.e., K_UP,K_DOWN,K_PGUP, K_PGDN, K_CTRL_PGUP,
       K_CTRL_PGDN instead of 0 to 5.

    + :verticalMovementBlock() is also executed when :configure() is called
        on browser and passes -3 as first argument.

    % Restructured and rewritten code to handle initial showing of
       browser object. This fixes the long-standing glich where
       browser rows were not displayed according to the height of the
       viewport.

  * hbqtwidgets/tests/browdb.prg
    + Demonstrated: the use of :pressHeaderBlock().
       Clicking on the "Last Name" column header sets the index to "Last".
       Clicking on any other header set index to natural order.

2013-02-13 14:53 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtbrowse.prg
  * hbqtwidgets/hbqtdbu.prg
  * hbdbu/dbu.prg
    ! Fixed: a bad behavior in HbDBU when :goTop()/:goBottom() actions
       were misbehaving per record pointer.

2013-02-12 19:34 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtcore/qth/QObject.qth
    % Flagged that :findChild(0 method is implemented in a different way,
       and should never be called via .qth.

  * hbqt/qtcore/hbqt_bind.cpp
  * hbqt/qtcore/hbqt_misc.prg
    + Implemented: QObject:findChild() method.
       Thanks to Francesco Perillo for the code.

  * hbqtwidgets/hbqtalert.prg
    + Added: QLabel:setOpenExternalLinks( .t. ).
       Now a html formated strings can be supplied to Alert().

  * hbqtwidgets/hbqtbrowse.prg
    + Implemented: HbQtBrowse:refreshWindow() method which can be
       called with a connect to an event. The primary function of this
       method is to recalculate the viewport area and set the number of
       browser rows accordingly to reclaim the unoccupied area,
       which at certain circumstances is not available when browser
       is visible first time.

  * hbqtwidgets/hbqtdbu.prg
    + Implemented: availability of field selection when filter
       expression is built, requested by Massimo. Also made the expression
       builder title meaneingful.

  * hbdbu/dbu.prg
    % Reflection of above changes.

2013-02-06 19:34 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtgui/hbqt_hbqabstractitemmodel.cpp
    ! :Method :reset() now emits :layoutChanged() signal.
      This is made uniform for all versions and also is more efficient.

  * hbqt/hbmk2_qt.hb
    + Auto detection of Qt Major Ver synchronized.
       Thanks Viktor for the pointers.

2013-02-06 15:19 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtgui/hbqt_hbqabstractitemmodel.cpp
    ! Final fix for HBQAbstractItemModel() where :reset() method was
       deprecated in Qt 5.0.1.

    ; NOTE: now all the demos, HbIDE, HbDBU are working fine on
            HbQt 5.0.1.

            It is time to cheer.

2013-02-05 18:26 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/gtqtc/gtqtc.hbc
  * hbqt/qtcore/hbqtcore.hbc
  * hbqt/qtgui/hbqtgui.hbc
  * hbqt/qtnetwork/hbqtnetwork.hbc
  * hbqt/qtwebkit/hbqtwebkit.hbc
    + Necessary filters to set right Qt libs based on its major version.
       Majot Qt version is detected via HB_QT_MAJOR_VER env variable
       until a suitable method is not detected.

  * hbqt/hbmk2_qt.hb
    + Added: code to initialize HB_QT_MAJOR_VER env variable to 4 if
       definition is not provided.

    ; NOTE: must set env variable HB_QT_MAJOR_VER to 5 before
            compiling HbQt with Qt 5+.

  * hbide/docks.prg
    - Commented out QMainWindow:setStyleSheet() call.
    + HbIDE compiles and runs fine with Qt 5.0.1.
      HbDBU compiles fine with Qt 5 and shows up, but HbQtBrowse()
       does not display row contents. I know the reason.
       Qt has dprecated QABstractItemMode:reset() method and there
       is no way ( so far ) to simulate this behavior.

2013-02-05 16:38 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtcore/qth/QCoreApplication.qth
    ! A crucial fix where number of parameters are changed.
  * hbqt/hbmk2_qt.hb
    + More constructs to control Qt 5.0.1.

2013-02-05 13:54 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/gtqtc/gtqtc.cpp
  * hbqt/gtqtc/gtqtc.h
    + Compilable for all versions of Qt inclusing 5.0.1.

2013-02-04 18:35 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    + Version bump.

  * hbqt/qtnetwork/hbqt_init.cpp
  * hbqt/qtnetwork/qth/QFtp.qth
  * hbqt/qtnetwork/qth/QHttp.qth
  * hbqt/qtnetwork/qth/QHttpHeader.qth
  * hbqt/qtnetwork/qth/QHttpRequestHeader.qth
  * hbqt/qtnetwork/qth/QHttpResponseHeader.qth
  * hbqt/qtnetwork/qth/QUrlInfo.qth
  * hbqt/qtopengl/qth/QGLWidget.qth
    + All modules comiliable with Qt 5.0.1 except for QtWebKit.
       hbmk2 reports: dependency not found "qtwebkit".

2013-02-04 17:39 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/hbmk2_qt.hb
    ! Fixed: last commit was not compiling QDirModel.qth.

2013-02-04 17:00 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtgui/hbqt_hbqabstractitemmodel.cpp
  * hbqt/qtgui/qth/QDirModel.qth
  * hbqt/qtgui/qth/QWindowsStyle.qth
  * hbqt/hbmk2_qt.hb
    + Implemented: necessary constructs to let HbQt compile with
       Qt 5.0.1 while remaining backward compatible upto 4.8.4.
       QtGui module now compiles fine.

2013-02-04 15:52 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtgui/qth/QAbstractProxyModel.qth
  * hbqt/qtgui/qth/QApplication.qth
  * hbqt/qtgui/qth/QColorDialog.qth
  * hbqt/qtgui/qth/QDesktopServices.qth
  * hbqt/qtgui/qth/QDirModel.qth
  * hbqt/qtgui/qth/QDrag.qth
  * hbqt/qtgui/qth/QFont.qth
  * hbqt/qtgui/qth/QGraphicsItem.qth
  * hbqt/qtgui/qth/QGraphicsScene.qth
  * hbqt/qtgui/qth/QHeaderView.qth
  * hbqt/qtgui/qth/QImage.qth
  * hbqt/qtgui/qth/QItemSelection.qth
  * hbqt/qtgui/qth/QItemSelectionModel.qth
  * hbqt/qtgui/qth/QLCDNumber.qth
  * hbqt/qtgui/qth/QMatrix.qth
  * hbqt/qtgui/qth/QMouseEvent.qth
  * hbqt/qtgui/qth/QPageSetupDialog.qth
  * hbqt/qtgui/qth/QPaintDevice.qth
  * hbqt/qtgui/qth/QPainter.qth
  * hbqt/qtgui/qth/QPixmap.qth
  * hbqt/qtgui/qth/QPlainTextEdit.qth
  * hbqt/qtgui/qth/QRegion.qth
  * hbqt/qtgui/qth/QSortFilterProxyModel.qth
  * hbqt/qtgui/qth/QSound.qth
  * hbqt/qtgui/qth/QStringListModel.qth
  * hbqt/qtgui/qth/QTextDocument.qth
  * hbqt/qtgui/qth/QTextEdit.qth

  * hbqt/qtgui/hbqt_hbqabstractitemmodel.cpp
  * hbqt/qtgui/hbqt_hbqgraphicsitem.h
  * hbqt/qtgui/hbqt_hbqgraphicsscene.cpp
  * hbqt/qtgui/hbqt_hbqgraphicsscene.h
  * hbqt/qtgui/hbqt_hbqplaintextedit.cpp
  * hbqt/qtgui/hbqt_hbqplaintextedit.h
  * hbqt/qtgui/hbqt_hbqsyntaxhighlighter.h
  * hbqt/qtgui/hbqt_hbqtableview.h
  * hbqt/qtgui/hbqt_hbqvalidator.cpp
  * hbqt/qtgui/hbqt_init.cpp
  * hbqt/qtgui/hbqt_utils.cpp

  * hbqt/hbmk2_qt.hb
    + Changes: needed to get HbQt compile on Qt 5.0.1.
       Still a couple of more changes are required in the engine
       to get QtGui compilable with latest Qt, which hopefully will
       make up today. Most of the QtGui compiles fine. Stay tuned...

2013-02-01 13:58 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtcore/hbqt_hbqslots.cpp
  * hbqt/qtcore/hbqt_init.cpp
  * hbqt/qtgui/hbqt_init.cpp
    % Changed: :toAscii() => :toLatin1().
      Now QtCore module can be compiled under Qt 5.0.1 and seems to be
      working fine upto Qt 4.8.3.

2013-02-01 13:37 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtcore/qth/HBQString.qth
  * hbqt/qtcore/qth/QAbstractItemModel.qth
  * hbqt/qtcore/qth/QChar.qth
  * hbqt/qtcore/qth/QCoreApplication.qth
    ! Fixed: an ageing-eye syndrome.

2013-02-01 12:55 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtcore/qth/HBQString.qth
  * hbqt/qtcore/qth/QAbstractItemModel.qth
  * hbqt/qtcore/qth/QChar.qth
  * hbqt/qtcore/qth/QCoreApplication.qth
  * hbqt/qtcore/qth/QLibraryInfo.qth
  * hbqt/qtcore/qth/QLocale.qth
  * hbqt/qtcore/qth/QMetaMethod.qth
  * hbqt/qtcore/qth/QMetaType.qth
  * hbqt/qtcore/qth/QRegExp.qth
  * hbqt/qtcore/qth/QTextCodec.qth
  * hbqt/qtcore/qth/QUrl.qth
    + Added:  [*V=-0x040900*]
       A version info prefixed with minus sign will be used as
        #if QT_VERSION <= 0x040900

  * hbqt/hbmk2_qt.hb
    + Added: necessary modification to honor [*V=-0x040900*] mark-up.

  ; WARNING - Regression is possible with code written upto Qt 4.8.4.
              I cannot test until all modules are built with latest
              version which will take a sustained effort from all of us.
              You need to report back if any piece of code misbehaves.

2013-02-01 11:32 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtdbu.prg
    + Fixed: unresolved external "ErrorBreak()". Seems the function
       is contained in xhb lib which I was using in test scenariors.
       Sorry for this negligence.

2013-01-31 17:50 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  + hbqtwidgets/resources/link.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added: one more image.

  * hbqtwidgets/hbqtgetlist.prg
    % Code formatting.

  * hbqtwidgets/hbqtgetsys.prg
    % Code cleanup.

  * hbqtwidgets/hbqtalert.prg
    + Added: FUNCTION HbQtGetAt( nGlobalX, nGlobalY, cVar, cPic, cColor, bValid ) -> cVar | NIL
       The function fetches a single GET at global <nGlobalX>,<nGlobalY>
       screen coordinates inside a transparent modal dialog. WHEN clause
       is omitted because appln will call this function on a GET which has
       to be fetched actually.

  * hbqtwidgets/hbqtbrowse.prg
    + Implemented: SET/GET METHODE verticalMovementBlock( bBlock ).
       The method is a callback reporting to appln when an actual vertical
       movement occurs. By actual movement means if no hittop/hitbottom
       is reached. The method was necessary to implement <LINKED TABLES>
       protocol implemented in HbDBU (Read Below).

        oBrowse:verticalMovementBlock := {|nMode,p2,oBrw| ::updateLinks( nMode, p2, oBrw ) }
          <nMode> == 0,1,2,3,4,5,6 ( Will document later ).
          <p2>    == NIL
          <oBrw>  == Reporting Browse Object

  * hbqtwidgets/hbqtdbu.prg
    + Added: credits to my employers, Curacao, for supporting this project.

    ! Fixed: few errors reported on the list.
    % Optimized: code offered on the list.
    + Implemented: <Linked Tables> protocol. In Clipper language
       relational tables. N number of tables can be nested
       to build a complex relational hirarchy (parent/child/grandchild).

       How it Works:

       1. Open some tables on a HbDBU panel, organize them with positioning and sizing.
       2. Set the appropriate indexes.
       3. Close HbDBU to save these settings, just-in-case.
       4. Click on the <Link> icon on HbDBU's toolbar.
       5. A dialog will appear with a list of aliases open on the current panel.
       6. Drag and drop the aliases over to its desired parent. This can be done in
          any combination, viz., parent
                                   child_1
                                     grandchild_1_1
                                   child_2
                                   child_3
                                     grandchild_3_1
                                 parent_2
                                 ...
       7. Once satisfied, what would you like to see, close HbDBU and run again,
          just-in-case.  Do not worry, your session is saved.
       8. Double-click on <Link Expression> column of an alias, a GET will open-up.
       9. Press F2 which will open a list of fields of its parent alias.
       10.Double-click on a field, which will be inserted at the current
          cursor position. Build appropriate and valid expression matching
          with its current index expression.
       11.Note that you won't be able to leave the GET until expression is
          syntactically valid. No check is performed for the type of returned
          value of expression evaluation. The reason is that the links map
          building is independent of current index, which could be set
          at later time.
       12.Press <OK> button to activate the links. If you have appropriate indexes
          already set, the browsers will instantly reflect the linked data only.
          Any vertical movement in the parent browser will refresh the child browsers.
       13.Now a step advanced: uncheck the checkbox at the left of some child,
          the child browser will stop to be refreshed. Old link-expression
          will stay though. (This is subject to change, I am thinking).
       14.Close HbDBU, run it again, click on the <Lin> icon, click on <OK>
          to activate the links.

       ;  Hopefully you will offer some advice.

2013-01-31 17:46 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/main.prg
    % Small optimization to the last commit.

2013-01-31 17:45 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/main.prg
    ! Fixed: normalizing the file names supplied on command line.
       Bug is reported by Massimo, thanks.

2013-01-29 11:21 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtcore/qth/QDate.qth
    + Added: missing public functions, thanks Luigi for pointer.

2013-01-28 18:24 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtgetlist.prg
    + Added: function hbqtGetBlankValue( xValue )->xBlankValueOfTypeXValue

  * hbqtwidgets/hbqtbrowse.prg
    ! Made public: methods :skipRows( nRows ) and :skipCols( nCols )

  * hbqtwidgets/hbqtdbu.prg
    ! Fixed: double-click on Table tree node was not opening the table.
    ! Fixed: duplicate entries in Tables tree.
    + Implemented: SCOPE and FILTER expressions are retained for the
       current session.
    ! Few optimizations.

  * hbdbu/dbu.prg
    + Implemented: Interface clicked :edit() event to "Save Record".

  ; NOTE: appears Qt has a bug in QHeaderView:sectionMoved() signal.
          In no way I am able to control its behavior. So second attempt
          has been failure again.

          Numeric fields cannot be resized because we are passing a
          formatted string when data request is received. As per standard
          grid behavior, ... is shown if text is hidder at the right.

2013-01-28 11:59 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtgui/hbqtgui.ch
    + Added: many constants, pulled by Luigi Ferraris, thanks.
       Please follow hbqtgui.ch's formatting standards when providing
       such constants. Thanks anyway.

2013-01-25 15:22 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/resources/info.png
    + Image miissed from prev commit.

  * hbqtwidgets/hbqtdbu.prg
    + Many, many, many changes. All will be reflected in documenttaion.
       Difficult to jot down in ChangeLog.

  * hbdbu/dbu.prg
    + Fully functional and usable HbDBU. A different experience!

  ; WHAT HAS BEEN ACCOMPLISHED IN HbDBU - A BRIEF OVERVIEW

         COMPONENT
    * All components are completely configurable on application level.
    * Multiple Panels to spread browsers.
    * Allows opening same table n number of times.
    * Allows opening same table on any panel.
    * Allows index manipulation on browser level.

         APPLICATION
    * Splash screen.
    * About HbDBU.
    * Shows how to pull information about HbDBU's various components
       and save them and then how to retrieve and populate them
       back on next run. These are :
        1. Tables Tree structure.
        2. Created Panels.
        3. Opened tables with index order, record number, column position,
            contained columns, columns order.
    * Implements almost all database actions, viz.,
        1. Edit a field.
        2. Edit a record.
        3. Delete a record.
        4. Append new record.
        5. Set and Clear a scope.
        6. Set and clear a filter.
        7. Seek, soft-seek, seek-last.
        8. Find in Field.
        9. Lock/Unlock a current/selective record.
        10.List of locked records.
    * Editing is implemented as:
        1. Edit only current cell.
        2. Edit row cell-by-cell.
        3. Edit cell row-by-row.

    * Remembers exact state of last run including entries in
       Tables Tree, created panels, opened tables with exact views.

2013-01-25 13:27 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  + hbqtwidgets/resources/add-column.png
  + hbqtwidgets/resources/delete-column.png
  + hbqtwidgets/resources/select-column.png
  + hbqtwidgets/resources/harbour-dbu.png
    % Image for HbDBU splash screen.

  * hbqtwidgets/hbqtwidgets.qrc
    + Added: few more icons.

  * hbqtwidgets/hbqtalert.prg
    + Added: function HbQtAChoice( nTop, nLeft, nBottom, nRight, acMenuItems, xSelectableItems, ;
                                   cUserFunc, nInitItem, nWindowRow, cTitle, oParent )
       Currently only minimum functionality but is scheduled to be enhanced
       per Clipper documentation.

    + Added: function FUNCTION HbQtMsgBox( cMsg, cTitle ).
       Scheduled to be enhanced.

  * hbqtwidgets/hbqtgetlist.prg
    * Enhanced: function __hbqtGetNextIdAsString( cString ).

  * hbqtwidgets/hbqtbrowse.prg
    -+ Replaced: Index ComboBox and JumpToColumn comboBox with drop-down menu
        embedded toolbuttons. It occupies less horizontal space plus offers
        better toolbar look.

    + Added: toolbar icons <Add a Column> and <Delete Current Column>
       <Delete Current Column> is straight forward. Clicking on it will delete
        the current highlighted column off the browser view.
       <Add a Column> needs :addColumnsBlock to be supplied by the
        application which will be responsible to populate <Add Columns Menu>
        as well as inserting a properly configured column based on the
        selection of field name from drop down menu. For example:

          oHbQtBrowse:addColumnsBlock := {| nMode, cColumn, oBrowse | AddMyColumn( nMode, cColumn, oBrowse ) }

        The block is evaluated with nMode == 0 once when user clicks on the
        <Add Columns Icon> first time which requests the appln to supply
        the names of the columns or fields and populates the drop down menu with them.

        The block is called with mode == 1 when user activates a prompt
        of drop-down menu. <cColumn> contains the name of the activated propmt.
        It is the responsibility of the application to insert a column depending
        on the <cColumn> value.

        Please study the implementation code inside tests/browdb.prg.

  * hbqtwidgets/tests/browdb.prg
    + Added: Code to demonstrate the usage of :addColumnsBlock.

2013-01-25 13:17 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/main.prg
    ! Removed: residual trace message.

2013-01-25 13:13 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/main.prg
    ! Fixed: Double-click on a node in Project Tree representing source
       file with relative path was not being opened. Thanks to
       Gregory Shashkoff for the report and exact explanation.

2013-01-18 18:51 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/projmanager.prg
    ! Fixed: to properly pass "Launch Parameters" of "Propereties" dialog
       while launching the application. A long standing bug.

  * hbqtwidgets/hbqtbrowse.prg
    + Added: :showIndicator( cRgbColorString )
       Places a 2 pixel high line with <cRgbColorString> on top of the
       browser window. This facilitates the place a warning system on the
       tables having utmost sensivity.

  * hbqtwidgets/hbqtdbu.prg
    + Made public some attributes of the MdiBrowser, i.e., :connection(), :driver().

  * hbdbu/dbu.prg
    + Added code to show a RED line on top of the browser if a table is opened
       via a specific connection.

2013-01-18 16:29 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    * Version-bump.

  * qtcontribs.hbp
    + Added: build parameters for HbDBU.

>>>>>>> .r143
2013-01-18 15:40 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtdbu.prg
    % Minor.

  + hbdbu
  + hbdbu/resources
  + hbdbu/resources/cube.png
  + hbdbu/resources/dashboard.png
  + hbdbu/resources/exit.png
  + hbdbu/resources/n-0.png
  + hbdbu/resources/n-1.png
  + hbdbu/resources/n-2.png
  + hbdbu/resources/n-3.png
  + hbdbu/resources/n-4.png
  + hbdbu/resources/n-5.png
  + hbdbu/resources/n-6.png
  + hbdbu/resources/n-7.png
  + hbdbu/resources/n-8.png
  + hbdbu/resources/n-9.png
  + hbdbu/dbu.prg
  + hbdbu/dbu.qrc
  + hbdbu/dbu.ui
  + hbdbu/hbdbu.hbp
  + hbdbu/mydbu.hbp
    + Initial commit of HbDBU.
       Just play with this toy. Do not initiate embedding HbQtDbu()
       in your applications as refinement in internal architect is
       on the cards. Some details are scheduled to be changed.

    ; Note that the HbDBU contains all elements which I am employing
       for our in-production implementation but guarded against the
       directives. You can unfold them as you deem fit. The real-time
       usage is always preferred to expose the full functionality
       than a reduced demo application, so hope that you will bear
       with me.

       The detailed documentation will follow after internal architect
       will reach my satisfaction level. Next couple of weeks I am
       onto this only.

       If you deem appropriate, extend your opinions and experiences
       of any DBU you had been living with. Hopefully maximum will
       make-up inside HbDBU.

    ; Enjoy with the multi-platform compliant HbDBU.

2013-01-17 18:43 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  + hbqtwidgets/hbqtdbu.prg
  + hbqtwidgets/hbqttoolbar.prg
  * hbqtwidgets/hbqtwidgets.hbp
    + Added: Class HbQtToolbar() and HbQtDbu().
       The last week has been so hectic but results are very fruitful.
       HbQtDbu() is a COM like implementation of GUI Database Manager
       which can be embedded into any application. All its components
       are fully configurable. A detailed overview and a usable and
       expandable application will be committed in a couple of days.

    ; You will really relish this implementation.

2013-01-11 18:51 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtwidgets.qrc
  + hbqtwidgets/resources/help.png
    + Added: help.png.

  * hbqtwidgets/hbqtbrowse.prg
    + Fixed: flickering of windows when <Search> was initiated.
    + Added: <Help> icon on the toolbar.
    + Started: implementation of displaying appln supplied help info
       in an integrated way. Currently Alert() is being used but
       is scheduled to be presented in a meaningful way. Complete
       documentation will follow after it reaches a satisfactory level.

  * hbqtwidgets/tests/browdb.prg
    + Added: code to show a help alert when <Help> icon is clicked.

2013-01-11 18:51 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtalert.prg
    ! Fixed: text rendering was not don with monospace font.

  * hbqtwidgets/hbqtbrowse.prg
    % Changed: ACCESS|ASSIGN MESSAGE editable() => editEnabled()
    + Added: ACCESS|ASSIGN MESSAGE columnsComboEnabled( lEnabled )
       This hides the <toColumn> combobox on the browser toolbar.
    + Added: ACCESS|ASSIGN MESSAGE printingEnabled( lEnabled )
       This hides the <Print> toolbar button.

    ; NOTE: the above switches are operational on toolbar actions.
       From withing application all actions are available.

    % Rearranged: toolbar icons sequence. Now it is more usable.

    ! Fixed: <Search> variable was not sent to appln callback in
       trimmed state causing to fail the serach on character columns.

  * hbqtwidgets/tests/browdb.prg
  * hbqtwidgets/tests/browser.prg
    % Some adjustments.

2013-01-11 02:01 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/resources/stop.png
    % Changed: <Stop> icon image.

2013-01-09 18:47 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtevent.prg
    + Added: function __hbqtKeyboard( <ncKey>, [<oWidget>] )
       Posts <ncKey> into <oWidget>'s event queue.
       <oWidget> defaults to QApplication():focusWidget().
        The function provides a convinient mechanism to initiate another
        action from with current action after returning from current
        action. This protocol is the backbone of any GUI application.

  * hbqtwidgets/hbqtbrowse.prg
    + Added: public method :widget() which returns the main component
       of browser and can be used to post events. This is :oTableView in HbQtBrowse().

    + Added: ACESS/ASSIGN METHOD searchText( <cSearchText> ).
       This displays <cSearchText> at the right side of statusbar
       of browser widget. this is a convinient method to avoid creation of
       widget to display user-input. ( Read below ).

  * hbqtwidgets/tests/browdb.prg
    + Added: code to demonstrate how INCREMENTAL search can be terminated from
       withing appln :navigationBlock.

    + Added: code to demonstrate how an incremental search can be performed
       taking use of oBrowse:searchText() method and how to take other actions
       while still in incremental search.

2013-01-09 14:49 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/hbmk2_qt.hb
    % Changed: class constructor from "NEW" to "INIT".
       This is in-line with Class(y) compatibility and will be useful
       when Przemek will implement true objects in Harbour.
       Though it will not be necessary at this moment, but still
       re-build everything.

  * hbqt/qtcore/qth/QCoreApplication.qth
    % Detached: 2nd paarmeter of :postEvent() to use just like on stack object.

  + hbqtwidgets/resources/stop.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added: stop.png.

  * hbqtwidgets/hbqtgetlist.prg
    + Fixed: wrong implemention of sending :selectAll() to QLineEdit.

  * hbqtwidgets/hbqtgetsys.prg
    % Experimented: but failed, code still resides.

  * hbqtwidgets/hbqtbrowse.prg
    - Deactivated: moving the columns with mouse. Will come to it later.
    + Added: <Stop> browser toolbar icon adjoining <Scroll>.
       The icon remains in disabled state until a <Scroll> is initiated.
       Once clicked, its state is again disabled.

    % Removed: the <Stop> button appearing at the bottom row after <Scroll>
       is initiated. Now toolbar icon <Stop> is enabled instead.

      <Scroll> event is now terminated if any other event is initiated.
      This is necessary to avoid multiple initializations leading to
      weired behavior.

    + Enhanced: oBrowse:editCell( cPicture, cColor, bWhen, bValid, nKey )
       <nKey> is the key you would like to stuff in the edit buffer.
       This implementation respects "@K" function of <cPicture> parameter
       or oColumn:picture clause is <cPicture> is not passed to :editCell().

  * hbqtwidgets/tests/browdb.prg
    + Added: code to demonstrate how "@K " in oBrowse:editCell() can be exploited.

2013-01-08 19:36 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  + hbqtwidgets/scroll.ui
  * hbqtwidgets/hbqtwidgets.hbp
    + Added: scroll.ui - Widget to fetch user options for a scroll.

  + hbqtwidgets/resources/scroll.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added: scroll.png.

  * hbqtwidgets/hbqtgetlist.prg
    % :selectAll() was wrongly called on other type of GET then QLineEdit.

  * hbqtwidgets/hbqtbrowse.prg
    + Added: appln callable method :scroll( [<nMode>], [<nMSInterval>] )
             Interface icon <Scroll> on the browser toolbar which call :scroll().

       This is a convinient mechanism to to present table with auto
       scroll option where data is refreshed in a fixed interval. It is a
       most useful function for upper management to provide a dash-board
       like functionality.

       If :scroll() is called without any parameter, then a dialog to
       fetch user options is presented, otherwise scroll is initiated
       immediately.

       <nMode> has three possible values:
       1. Scroll down-bottom-top-down - scrolling starts from current record,
           when :hitBottom is detected, jumps to top of the browser and starts
           scrolling downwards.
       2. Scroll down-bottom - scrolling starts from current record and keeps
           on downward. It does not check if :hitBottom is reached or not.
           Useful when user needs what latest records are being pushed into
           the table.
       3. Sctoll to bottom of browser and issues :goBottom() always.
           Useful when user needs to review the latest info.

       A <Stop> push button stays in the bottom row+ location to stop the scrolling.

2013-01-07 13:15 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtgetlist.prg
    + Added: internal function __hbqtGetNextIdAsString( cString ) -> cString_<runningNumber>

  * hbqtwidgets/hbqtbrowse.prg
    % Changed: :setFocus() from PROTECTED to PUBLIC.
    + Implemented: vertical navigation with K_UP, K_DOWN, K_PGUP, K_PGDN,
       K_CTRL_PGUP, K_CTRL_PGDN while inside INCREMENTAL search mode.
       Under many situations this behaviour is very much required.

2013-01-07 05:36 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtalert.prg
    % Renamed: HbQtGetSome(...) => HbQtBulkGet(...)
    + Added: treating the GET in a combobox if one of the elements of
       HbQtBulkGet()'s <xVariable> is an array of character strings. The
       RETURN value will be a string of choice selected in combobox. the
       first prompt in such array will be the default option when combo
       is presented.

       Thanks to Angel Pais for the idea.

  * hbqtwidgets/tests/browdb.prg
    % Changed: call to HbQtGetSome() with HbQtBulkGet().

  * hbqtwidgets/tests/browser.prg
    % Minor.

2013-01-03 13:50 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtstd.ch
    + Added: HBQTBRW_* constants, usable to configure HbQtBrowse interface.

  * hbqtwidgets/hbqtalert.prg
    + Implemented: Function
       HbQtGetSome( <xVariable>, [<xCaption>], [<xPicture>], [<xWhen>], [<xValid>], [<cTitle>] ) -> <xVariable>

       A general purpose function to fetch values of one or many GETS in a modal dialog.

       <xVariable> an array of variables or a single variable to GET.

                   If <xVariable> is an array of variables then all the following
                   parameters must be an array of attributes matching the length of
                   <xVariables>. Function does not check for the number of array indexes.

       <xCaption>  variable(s)|Literal(s) describing the GET. Defaults to "Variable_" + hb_ntos( nIndex ).
       <xPicture>  variable(s)|Literal(s) of PICTURE templates. Defaults to "".
       <xWhen>     block(s) to supply for :preValidate. Defaults to {|| .T. }.
       <xValid>    block(s) to supply for :postValidate. Defaults to {|| .T. }.

       <cTitle>    Title to display on GETs dialog's titlebar. Defaults to "Enter Some Values!".

       RETURNS     <xVariable> in the form they are supplied to the function. If ESCape is
                   pressed then original values supplied to the function are returned.

                   GETs dialog is centered on the window which has focus at the time of
                   calling this function.

       NOTE:       Name of the function may be changed. If you have a better name, please forward.

  * hbqtwidgets/hbqtbrowse.prg
    + Added: <GoTo> icon on the browser's toolbar to navigate to a designated record.
    + Implemented: ACCESS/ASSIGN method :gotoBlock  to execute :goto() method, either via
       appln call or activating it via toolbar icon <Goto>. Interface just exposes the
       visual elements to inform the appln about user interaction. The actual navigation
       is performed at the appln level only. How...

         Appln: oBrowse:gotoBlock := {|| GotoMyRecord() }
         User:  Clicks on the <Goto> icon. :gotoBlock is evaluated.
         Appln:
           STATIC FUNCTION GotoMyRecord()
           LOCAL nRec, nPRec := RecNo()
           IF ( nRec := HbQtGetSome( nPRec, "Record Number", , , , "GoTo ?" ) ) > 0
              dbGoto( nRec )
           ELSE
             RETURN .F.
           ENDIF
           RETURN nPRec != nRec

       If the :gotoBlock returns TRUE, the browser is refreshed, otherwise not.

    + Added: <Indexes> combobox on the browser's toolbar to change the index order.
    + Implemented: ACCESS/ASSIGN method :indexes. This accepts an array of index information as:

        AAdd( aIndexes, { "Natural Order", {|oBrw| dbSetOrder( 0 ), oBrw:refreshAll(), oBrw:forceStable() } } )
        AAdd( aIndexes, { "Last Name"    , {|oBrw| dbSetOrder( 1 ), oBrw:refreshAll(), oBrw:forceStable() } } )
        oBrowse:indexes := { aIndexes, 2 }

        First element of <aIndexes> is used to populate the <Indexes> combobox.
        Second element is a codeblock which will be executed when an option in combobox
          is activated.
        Second element of :indexes ASSIGNed array is used to activate <Indexes> combobox.

        <Indexes> combobox is viaible only if appln has supplied :indexes information.

        This is a convenient mechanism to armour the end user with many more options.

    % ReImplemented <Search> option. Please discard the previous documentation.
       This new implementation empowers you with executing an incremental search,
       a search within the unindexed field and much more. How...

        Appln: oBrowse:searchBlock := {|xValue,nMode,oBrw| LookMySearch( xValue,nMode,oBrw ) }
                                         ->
                                      { [<xValue>], [<cPicture>], [<nMode]> }

        Appln: Inside :navigationBlock - :search( [<xValue>], [<cPicture>], [<nMode]> )
        Interface: <Search> icon - :search()

        METHOD Search( [<xValue>], [<cPicture>], [<nMode]> )
          If [<xValue>] == NIL, :searchBlock will be called to obtain <Search> info as:
            IF HB_ISBLOCK( ::searchBlock )
               aInfo := Eval( ::searchBlock, NIL, NIL, Self )
            ENDIF

          It will be the responsibility of the appln to supply info regarding what to fetch
          and how to respond to search creteria. If appln does not return back an array of
          3 elements, viz., 1. What to search as a variable of type CDNL, viz.,
          space( 30 ), 0, or whatever, and mode of search (read below), then these three values
          defaults to : 1. the value returned by Eval( ::getColumn( ::colPos ):block )
                        2. ::getColumn( ::colPos ):picture
                        3. HBQTBRW_SEARCH_ONCE
                             Other options:
                           HBQTBRW_SEARCH_INCREMENTAL
                           HBQTBRW_SEARCH_BYFIELD
          depending upon the above three values, interface exposes a modal GET at the
          last+ row of the browser window to fetch <Search> value, initially set with
          value of <xValue>.

          The next action is carried out in accordance with <nMode>:
          IF nMode == HBQTBRW_SEARCH_ONCE
            Dialog to fetch value is closed, :serachBlock is evaluated again with modified
            <xValue>, <nMode> and <Self>. Appln takes appropriate action. Typicaly,
            appln will invoke this mode if an index is active.

          IF nMode == HBQTBRW_SEARCH_INCREMENTAL
            Dialog to fetch serach value stays, with every change in the GET value,
            :serachBlock is evaluated with modified <xValue>, <nMode> and <Self>.
            Appln takes appropriate action. Dialog to fetch search value stays until
            RETURN is pressed which mark the end of the <Search> event. For the duration
            of search, browser cursor is changed to ROW mode. Typicaly,
            appln will invoke this mode if an index is active.

          IF nMode == HBQTBRW_SEARCH_BYFIELD
            Dialog to fetch value is closed. A timer event is started inside the interface
            at a 10 ms interval, which calls :searchBlock as usual. Then :searchBlock is
            expected to return TRUE or FALSE to flag that <Search> is found or not. If NOT,
            then browser is moved down by one row. If YES or :hitBottom is detected then
            <Serach> event is terminated. Appln can detect <ESC> press in the :navigationBlock,
            and can terminate the <Search> accordingly (study example below).

          In case of nMode == INCREMENTAL, after <Search> event is terminated,
            :searchBlock is once again evaluated with no parameters. This is useful
            to implement a lookup browser.

          Here is a minimum useful example, you can extend it to extreme:

          STATIC nLastKey := 0

          FUNCTION Main()
             LOCAL oBrowse := ...

             oBrowse:searchBlock     := {|xValue,nMode,oBrw| LookMySearch( xValue,nMode,oBrw ) }
             oBrowse:navigationBlock := {|nKey,xData,oBrw|  HandleMyOptions( nKey,xData,oBrw ) }

             RETURN NIL

          STATIC FUNCTION HandleMyOptions( nKey,xData,oBrowse )
             LOCAL xResult, i
             LOCAL lHandelled := .T.

             nLastKey := nKey
             ...

             RETURN .t.

          STATIC FUNCTION LookMySearch( xValue,nMode,oBrw )
             LOCAL nRec

             IF xValue == NIL .AND. oBrw == NIL
                /* search is finished, take other action, this will help to build a selectable browser */
                Alert( "Current Record Number Is : " + hb_ntos( RecNo() ) )

             ELSEIF xValue == NIL                           /* Interface is requesting to initiate search */
                IF IndexOrd() == 1
                   RETURN { Space( Len( TEST->last ) ), NIL, HBQTBRW_SEARCH_INCREMENTAL }
                ELSE
                   RETURN { NIL, NIL, HBQTBRW_SEARCH_BYFIELD }
                ENDIF

             ELSE
                IF IndexOrd() == 1                          /* Interface is requesting to do the search as per needs */
                   nRec := RecNo()
                   IF ! dbSeek( Trim( xValue ) )
                      dbGoto( nRec )
                   ELSE
                      oBrw:refreshAll()
                   ENDIF
                ELSEIF nMode == HBQTBRW_SEARCH_BYFIELD
                   IF nLastKey == K_ESC
                      nLastKey := 0
                      RETURN .T.
                   ENDIF
                   RETURN Eval( oBrw:getColumn( oBrw:colPos ):block ) = xValue

                ENDIF

             ENDIF

             RETURN .T.


  * hbqtwidgets/tests/browdb.prg
  * hbqtwidgets/tests/browser.prg
    + Added: constructs to demonstrate above features.

2013-01-02 08:18 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtgui/qth/QApplication.qth
    + Implemented: QWidgetList allWidgets(), QWidgetList topLevelWidgets().

       oList := QApplication():topLevelWidgets()
       FOR i := 1 to oList:count() - 1
          oWidget := oList:at( i )
          oWidget:show()
       NEXT

2012-12-29 00:19 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtgui/hbqt_hbqtableview.cpp
  * hbqt/qtgui/hbqt_hbqtableview.h
  * hbqt/qtgui/qth/HBQTableView.qth
    + Added: method - QRect visualRect( QModelIndex )
       The method was a "vrtual protected".

  * hbqtwidgets/hbqtstd.ch
    + Added: QREAD ... NOFOCUSFRAME
       Flag to disable displaying a red bordered frame around the active GET.
       Was needed to implement in-place editing of browser cells ( Read below ).

  * hbqtwidgets/hbqtgetlist.prg
  * hbqtwidgets/hbqtgetsys.prg
    % Changed: the way FocusFrame was being constructed.
      Now every GetList has its own oFocusFrame instead of a single frame across
      the whole application, which had a drawback to not show-up if multiple
      GET screens were floated at once. Also the visiblility of focus frame
      is controllable by QREAD clause NOFOCUSFRAME.

  * hbqtwidgets/hbqtbrowse.prg
    + Implemented: in-place cell editing with PICTURE, COLOR, WHEN, VALID clauses.
       This is in addition to record editing in a separate adjoining dialog which
       is called by application as oBrw:edit(...) or by clicking on the <Edit>
       icon of browser toolbar.

       On the contrary, Cell editing is only callable by the application. This
       can be called as :

         oBrw:editCell( [<cPicture>], [<cColor>], [<bWhen>], [<bValid>] ) -> xModifiedValue
           <cPicture> Defaults to oColumn:picture.
           <cColor>   Defaults to "N/BG*"
           <bWhen>    Defaults to oColumn:preBlock
           <bValid>   Defaults to oColumn:postBlock

       How it works;

          ...
          oBrw:navigationBlock( {|...| NavigateMe(...) } )
          ...

          FUNCTION NavigateMe( nKey...)
             SWITCH nKey
             CASE K_SH_F12
                xModifiedValue := oBrw:editCell()
                IF xModifiedValue != NIL  /* In Case ESC is Pressed */
                   // Save xModifiedValue at appropriate container.
                ENDIF
             ENDSWITCH

         The above is the minimum required. If :editCell() is called without
         supplying any arguments, then defaults are applied to GET the value.
         If ESCape is pressed on the GET then NIL is returned. In that case
         appln can take the appropriate action.

         Current highlighted cell is subject to :cellEdit() call.
         oColumn:block with <xModifiedValue> is __ALWAYS__ called when
         RETURN is pressed on GET and is postValidated.

  * hbqtwidgets/tests/browser.prg
    + Added code to demonstrate how to use cell editing.

  * hbqtwidgets/tests/browdb.prg
    + Added: following CASE statement in navigation SWITCH:

         CASE nKey == K_SH_F12
            IF dbRLock()
               oBrowse:panHome()
               oBrowse:Right()
               FOR i := 2 TO oBrowse:colCount()
                  xResult := oBrowse:editCell()  /* HbQt Entention */
                  IF xResult == NIL
                     EXIT                        /* ESCape is pressed */
                  ENDIF
                  SWITCH oBrowse:getColumn( i ):heading
                  CASE "Last Name"  ; REPLACE TEST->last     WITH xResult ; EXIT
                  CASE "First Name" ; REPLACE TEST->first    WITH xResult ; EXIT
                  CASE "Salary"     ; REPLACE TEST->Salary   WITH xResult ; EXIT
                  CASE "HireDate"   ; REPLACE TEST->HireDate WITH xResult ; EXIT
                  CASE "Age"        ; REPLACE TEST->Age      WITH xResult ; EXIT
                  CASE "City"       ; REPLACE TEST->City     WITH xResult ; EXIT
                  CASE "State"      ; REPLACE TEST->State    WITH xResult ; EXIT
                  CASE "Zip"        ; REPLACE TEST->Zip      WITH xResult ; EXIT
                  CASE "Notes"      ; REPLACE TEST->Notes    WITH xResult ; EXIT
                  ENDSWITCH
                  oBrowse:refreshCurrent()
                  IF i < oBrowse:colCount()
                     oBrowse:Right()
                  ENDIF
               NEXT
               IF xResult != NIL
                  dbCommit()
               ENDIF
               dbRUnlock()
            ENDIF
         OTHERWISE

    ; This demonstrate the exact usage one might had employed in Clipper
      application to fetch data entry in a browser. In any real-world
      senario, ground is ready to be exploited. Now I can dream of porting
      my Harbour simulated console/GUI applns to HbQt.

2012-12-27 02:24 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  + hbqtwidgets/resources/minus-1.png
  + hbqtwidgets/resources/minus-2.png
  + hbqtwidgets/resources/plus-1.png
  + hbqtwidgets/resources/plus-2.png
  * hbqtwidgets/hbqtwidgets.qrc
    + Added: above images.

  * hbqtwidgets/hbqtgetlist.prg
    + Added: __hbqtGetWindowFrameWidthHeight( oWnd )

  * hbqtwidgets/hbqtbrowse.prg
    + Added: Browser Toolbar Actions - Freeze++, Freeze--, RFreeze++, RFreeze--

    + Added: Variable :editable to flag if toolbar icon <Edit> should be
       enabled or not. By default it is ENABLED. It will be important
       in many cases. Still, application initiate the EDIT bu calling
       :edit(...) from its :navigationBlock.

    + Started: methods to facilitate column movement by mouse.
        Seems it is extremely difficult process, still making efforts.

    ! Fixed: a nasty bug which was causing the horizontal navigation weired.

    % Synchronized: editing interface to match the height of browser window.

    % Code cleanup and organization.

  * hbqtwidgets/tests/browdb.prg
  * hbqtwidgets/tests/browser.prg
    + Added: new synchronizations.

2012-12-26 15:23 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtbrowse.prg
    + Implemented: Browser Printing. How...

       Activation:
         Application code - oBrw:print( cPrinter, lOpenPrintDialog )
         Interface        - <Print> icon on the browser toolbar

       After Activation:
         Looks for oBrw:title. If a value is found, then it is interpreted as
           SWITCH valtype( ::title )
           CASE "C"
              aTitle := hb_aTokens( ::title, ";" ) - Just like Alert().
           CASE ""A"
              aTitle := ::title
           CASE "B"
              aTitle := Eval( ::title, NIL, NIL, oBrw )
              Again <aTitle> is tested for string or array, and treated as above.
           ENDSWITCH
         <aTitle> defaults to { "Browsed Data" }
         <aTitle> is then printed on top of each page printed.
         First 5 Lines are significant. If more are supplied, those are ignored.

         Next line after <aTitle> is done with is :
           DtoC( Date() ) + " " + Time() + " " + "Page:" + hb_ntos( #pageNo )

         Next follow Headers Line.

         Then follows the actual data.

         Columns are printed exactly as seen in the browser, with same font,
         picture and colors. So it gives a WYSIWYG look. Most of the time printed
         output is pleasing.

         The only those columns, counted from left, make up to the printed output
         as many fit into the page width for printer in question. To start with
         PORTRAIT mode is selected, but you can always get LANDSCAPE output
         from the PREVIEWER dialog. More columns then will be automatically
         accomodated.

         I found a nasty bug, apparently in Qt itself, as follows:
         If QPrintDialog is executed, either inside browse code, or inside
         previwer window, application GPFs. So far I have not found a solution
         what is happening. It may be due that my laptop is not actively
         connected to a printer and hence Qt has some issues there. Later
         I will revisit the code in my office to get more clues. Till
         then...

         If you find motivation to debug, please uncomment some code in
         hbqtbrowse.prg and recompile yourself. If you find any solution,
         please report me back.

2012-12-25 17:56 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/tests/browdb.prg
    + Added: how to SEARCH implementation. Missed from previous.

2012-12-25 15:40 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    * Version bump.

  * hbqt/qtgui/hbqt_hbqabstractitemmodel.cpp
    ! Minor.

  + hbqtwidgets/hbqtwidgets.qrc
  + hbqtwidgets/resources/*.png
    + Resource Images.

  * hbqtwidgets/hbqtwidgets.hbp
    + Added: hbqtwidgets.qrc

  * hbqtwidgets/hbqtgetlist.prg
    + Added: __hbqtImage( cPngWithoutExt )
       The function can be used in appln also to obtain many
       common usage images. This may eliminate the need to have
       application local images. Hopefully will reduce the burden
       on application part.

  * hbqtwidgets/hbqtbrowse.prg
    % Changed: :editBlock's parameters.
       oBrw:editBlock := {| oBrw, aOrg, aMod, aCap | ... }
         =>
       oBrw:editBlock := {| aMod, {aOrg,aCap}, oBrw | ... }

       It is in accordance with decided protocol where any application
       supplied codeBlock, implemented over and above TBrowse blocks,
       will be fired with three parameters. First parameter will represent
       the most expected return value, 2nd will contain any additional
       data important and ancilliary to the 1st param, and 3rd will
       always be browse object in evaluating the block.

    % Changed: method :openEditor(...) => edit(...)
               method :edit() => editCell()
                 Confirms to general common sense.

    + Implemented: ToolBar on top of the browser window.
       Toolbar can be toggled to be displayed/hidden. Toolbar contains common
       actions a user always expect off a GUI browser, viz.,

         Edit | Print | Search | GoTop | Up | Down | GoBottom | PanHome | Left |
         Right | PanEnd | ComboToColumn | MoveFirst | MoveLeft | MoveRight | MoveLast

       Toggling the display of toolbar is controlled via ACCESS | ASSIGN method :toolbar.

         oBrw:toolbar := ! oBrw:toolbar

       By default ToolBar is hidden.

       <Print> option is not active yet.

    + Implemented: activation/execution of context menu. This is controlled as:

         oBrw:contextMenuBlock := {| oPos, NIL, oBrw | ... }

       When context menu request is detected, HbQtBrowse will look for :contextMenuBlock,
       and if found, will evaluate it with global mouse position (QPoint) as 1st param,
       NIL as 2nd, and Self as 3rd. It will be the responsibility of appln to respond
       to this event.

       And if :contextMenuBlock will not be supplied by the appln, a default context
       menu will be executed with some of the actions available on the toolbar.

    + Implemented: StatusBar at the bottom of the browse window.
       Again it is controlled by application, like:

         oBrw:statusbar := .T.
           OR
         oBrw:statusbar := ! oBrw:statusbar

       To display message on the StatusBar:

         oBrw:statusMessage := cMessage

       To clear the StatusBar:

         oBrw:statusMessage := ""

       By default ToolBar is hidden.

    + Implemented: SEARCH feature, interface and building blocks only.
       Application will take responsibility to carry on the search operation.
       HbQtBrowser merely provides the interface to communicate between browser
       interface and application code. How ...

       1. Appln will post a block as:

            oBrw:searchBlock := {|xSearch, nColPos, oBrw| ... }

       2. The SEARCH event could be started either by browser interface or
          application inside :navigationBlock.

          Interface: Click on the <Search> toolbar button.
          Application: calling oBrw:search( xValue ).

          In both instances, a single GET in a modal window will be presented.
          If appln has initiated the SEARCH, and has provided <xValue> in
          :search( xValue ) call, then this variable is GET. If click on
          <Search> icon has initiated it, or <xValue> == NIL, then the
          value contained in current hilighted cell of browser will be GET.
          In the latter case, column's PICTURE is also applied to it.
          GET will terminate on RETURN press, and searchBlock will be evaluated
          with GET value as 1st param. From here it is the responsibility of
          the appln to perform the actual search.

          The demo code is included in tests/browser.prg and test/browdb.prg.
          browser.prg addresses it for an array, while browdb.prg on a table.

  * hbqtwidgets/tests/browdb.prg
  * hbqtwidgets/tests/browser.prg
    + Added: code to demonstrate above features.

  ; NEXT: Printing a browser.

2012-12-23 23:55 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtstd.ch
    + Added: clause LASTGETBLOCK <lastGetBlock>
       With this QREAD command looks as:

       #command QREAD [ [ PARENT ] <GetParent> ] ;
                      [ FONT <oFont>           ] ;
                      [ LINESPACING <nSpc>     ] ;
                      [ TITLE <title>          ] ;
                      [ ICON <icon>            ] ;
                      [<nomodal:NOMODAL>       ] ;
                      [ PROPERTIES <prop>      ] ;
                      [ LASTGETBLOCK <bLast>   ] ;
                            => ;
             HbQtReadGets( @GetList, SayList, <GetParent>, <oFont>, <nSpc>, ;
                           <title>, <icon>, <.nomodal.>, <{prop}>, <{bLast}> )

       ; Read below.

  * hbqtwidgets/hbqtgetlist.prg
    + Added: method lastGetBlock( bBlock ) SETGET
       Placeholder to hold <lastGetBlock> of QREAD.

  * hbqtwidgets/hbqtgetsys.prg
    + Implemented: to detect if GET in focus is the last GET in current GetList,
                   and if yes, then fire the <lastGetObject> block. The check
                   is performed in :postValidate() method.

  * hbqtwidgets/hbqtbrowse.prg
    + Implemented: browser row editor honoring the :preBlock, :postBlock, :picture
       properties of columns. Thanks to QGET/QREAD of HbQt which made it possible
       to happen. The whole process is application controlled as per the true spirit
       of TBrowse. The following methods are exposed to the application:

         :editBlock( bBlock ) GETSET
            The block is responsible to "SAVE" data collected with editor widget.
            If no :editBlock is specifed, a simple oColumn:block is evaluated
            with modified data as its only parameter.
            :editBlock has to be defined as:

            oBrowse:editBlock := {|oBrw, aOriginal, aModified, aCaptions|  ;
                                      SaveMyData( oBrw, aOriginal, aModified, aCaptions ) }

            at the minimum. Application may pass other parameters to the "SAVE"
            function as appropriate. Here is brief description of 4 parameters:

            <oBrw>      No need to explain, it is oBrowse in question.
            <aOriginal> Array holding original values of the columns before "SAVE"
                        is requested. It is sent to facilitate better control
                        on determining what needs to be saved in real.
            <aModified> Array holding modified values of the columns.
            <aCaptions> Array holding <oColumn:heading> property. This facilitates
                        to recognize which data item needs to be updated.

            NOTE: Tbrowse does not know anything about the data source. Also columns
                  in a browse can be ordered to any position. So it is difficult
                  to guess where a modified value needs be saved. Here comes the
                  importance of <oColumn:heading>. I believe, you all must be
                  providing unique headings to columns, and if not, please set
                  your code right to grab the power of GUI editing.

         :openEditor( cTitle, lSaveOnLastGet, lDownAfterSave )
            The method needs to be called by the application, generally detecing
            an event in :navigationBlock, but may be by other means also. This opens
            a modal dialog adjoining the right edge of browser viewport. Editor will
            display <cTitle> in the title-bar. The position and size will be saved
            for current session of underlying browser. Next invocation will position
            it at last closing coordinates. Edotor is composed of a scrollable
            QFormLayout based form containing the GETs of columns data. At the bottom
            are 5 buttons with corresponding accelerator keys. Focus will be
            positioned on the first GET ( column ). Navigation of the GETs is
            per Harbour standards. WHEN, VALID and PICTURE instance variables are
            applied over the GETs.

            When last GET is hit by ENTER, <lSaveOnLastGet> [Defaults to TRUE], will
            be examined. If TRUE, the <lastGetBlock> is fired with 4 parameters, i.e.,
            <oBrw><aOriginal><aModified><aCaptions>. A LOGICAL is expected as the
            return value of the <lastGetBlock>. If it is TRUE, no further action is
            taken. If FALSE, <oColumn:block> is fired with modified value as parameter.

            Then <lDownAfterSave> [Defaults to TRUE] is examined. If TRUE, the browser
            is moved with :down(), column values are gathered, GETs are populated
            with new row value. The process goes on until user closes the Editor.
            Editor can be closed either by ESCAPing or clicking on X button.

            The bottom area buttons offer following functionality:

            <Save> <ALT+S        > Triggers "SAVE" action as described above.
            <Down> <ALT+DownArrow> Moves the browser :down() and refresh the GETs.
            <Up>   <ALT+UpArrow  > Moves the browser :up() and refresh the GETs.
            <Btm>  <ALT+PageDown > Moves the browser :goBottom() and refresh the GETs.
            <Top>  <ALT+PageUp   > Moves the browser :goTop() and refresh the GETs.

            The design and layout of the EDITOR is not yet final and may undergo
            needed changes as per user inputs.

  * hbqtwidgets/tests/browser.prg
    + Added: needed code to demonstrate the above mechanism.
       Press F12 to activate the Editor.

    ; Enjoy, and play with new toy.

2012-12-23 15:32 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/tests/validatormain.ui
    + Added: two more buttons to demonstrate one more way to fetch the GETs.

  * hbqtwidgets/hbqtgetlist.prg
    + Implemented: to fetch Clipper GETs in a QFormLayout installed on a widget.

  * hbqtwidgets/tests/validator.prg
    % Code simplified.
    + Added: code to fetch GETs in a QFormLayout with Clipper's GET system.

2012-12-23 10:24 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtbrowse.prg
    % Organized: class declaration code.

    + Implemented: :moveLeft()  - Moves current column left one column
                   :moveRight() - Moves current column right one column
                   :moveHome()  - Moves current column to first position
                   :moveEnd()   - moves current column to last position

  * hbqtwidgets/tests/browser.prg
    + Added above methods of navigation.

2012-12-23 07:03 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtbrowse.prg
  * hbqtwidgets/hbqtcolumn.prg
    + TBrowse:
       Implemented: :Footing
       Implemented: :rFreeze
         :rFreeze is equivalenet to :freeze with the difference that
           columns at the right of oBrowse are turned to frozen state
           at the right side of the viewport.

  * hbqtwidgets/tests/browser.prg
    + F4 - :rFreeze++   F5 - rFreeze--
    + F8 - MoveLeft     F8 - Move Right

  ; NEXT: 1. in-built mechanism to <Search - Seek,Locate,Wild>
          2. context menu for navigation, etc.
          3. exposing different components of TBrowse window for finer tuning.
    All controllable via :navigationBlock plus certain action on viewport.

2012-12-22 15:03 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtbrowse.prg
    ! Fixed: :panHome() and :panEnd() were not behaving properly.

2012-12-22 15:03 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtgetlist.prg
    - Removed: static function not used.
    % Cleaned: code.

  * hbqtwidgets/tests/browser.prg
    + Added: few comments.

2012-12-22 14:29 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtbrowse.prg
  * hbqtwidgets/hbqtcolumn.prg
  * hbqtwidgets/hbqtgetlist.prg
    + TBrowse:
       :verticalScrollbar := TRUE  [ Default: FALSE - Clipper Compatible ]
          Displays the vertical scroolbar to navigate the database/array.
          To use it effectively you need to define following blocks [with example]:

            oBrowse:firstPosBlock       := {| | 1                }
            oBrowse:lastPosBlock        := {| | LastRec()        }
            IF indexOrd() == 0
               oBrowse:posBlock         := {| | RecNo()          }
               oBrowse:goPosBlock       := {|n| DbGoto( n )      }
               oBrowse:phyPosBlock      := {| | RecNo()          }
            ELSE
               oBrowse:posBlock         := {| | OrdKeyNo()       }
               oBrowse:goPosBlock       := {|n| OrdKeyGoto( n )  }
               oBrowse:phyPosBlock      := {| | OrdKeyNo()       }
            ENDIF

        :horizontalScrollbar := TRUE [ Default: FALSE - Clipper Compatible ]
            No property is needed to set for its navigation.

        :cursorMode := HBQTBRW_CURSOR_ROW [Default: HBQTBRW_CURSOR_COLUMN ]
            This is equivalent to :colorRect.

  + hbqtwidgets/tests/browdb.prg
    + Added: demo application to applying TBrowse on a table with index.
             The demo also demonstrate the use of scrollbars and cursor mode.

  ; TODO:  mechanism to provide and execute context menu.
           What actions should go inside "Context Menu" ?

2012-12-22 11:14 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtbrowse.prg
  * hbqtwidgets/hbqtcolumn.prg
  * hbqtwidgets/hbqtgetlist.prg
  * hbqtwidgets/tests/browser.prg
    + Implemented: TBrowse behavior almost at its best.
       1. freeze,
       2. ColorSpecs and ColorBlocks.
       3. Alignment.
       4. Navigation, with keyboard and mouse.
       5. Currently, switched off Scrollbars, those require extension to
           TBrowse, your opinion ?
       6. Fonts.

    ; SHOULD WE ADD:
       1. Support for scrollbars ? Will need :goTopBlock like implementation.
       2. Right Side Freezing ?
       3. Extended colors in :colorSpec, like in GETs ?
       4. ???

2012-12-21 18:48 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtgetlist.prg
    % Formatting.

  * hbqtwidgets/hbqtwidgets.hbp
    + Added: hbqtcolumn.prg

  + hbqtwidgets/hbqtcolumn.prg
  * hbqtwidgets/hbqtbrowse.prg
    + Implemented: basic functionality.
       Please look at tests/browse.prg and see the only difference:
        oBrowse:navigationBlock(). It simulates the inkey() loop.

  * hbqtwidgets/hbtoqt.ch
    + #xtranslate Alert( => HbQtAlert(

  * hbqtwidgets/tests/browser.prg
    + Tuned a little to eliminate inkey() loop.
       Otherwise it is exactly the same as in harbour/tests/tb1.prg

  ; So, ...

2012-12-21 13:16 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtgetsys.prg
    ! Fix [Minor] to honor GETs outside of GET system.

  * hbqtwidgets/tests/validator.prg
    + Extended: OOPLayout() function to demonstrate the use of
       multiple layouts with HbQtGet()s spread on them.
       This technique can be used organize GETs verically and
       horizontally. Note that navigation will follow the creation
       order, so be carefull.

2012-12-20 23:44 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtgetlist.prg
  * hbqtwidgets/hbqtgetsys.prg
    ! Fixed: FocusOut was still using a left-over and was causing
       validation taking effect on focus out also.
    ! Changed: behaviour of ESCape key, it is now passed onto parent
       to take default action. Until now ESC was resetting the GET buffer
       to :original.

    ; Thanks Nenad for exactly pin-pointing to the above issues with
       a suitable concise example.

2012-12-20 19:05 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtbrowse.prg
  * hbqtwidgets/tests/browser.prg
    % Advances: HbQtBrowse() - Work-in-Progress.

2012-12-20 15:48 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  + hbqtwidgets/tests/harbour.png
    + Harbour Logo.

  * hbqtwidgets/hbqtalert.prg
    % Minor.

  * hbqtwidgets/hbqtgetlist.prg
  * hbqtwidgets/hbqtgetsys.prg
  * hbqtwidgets/hbqtstd.ch
    + Extended: QREAD [ [ PARENT ] <GetParent> ] [ FONT <oFont> ] [ LINESPACING <nSpc> ]
                      [ TITLE <title> ] [ ICON <icon> ] [<nomodal:NOMODAL>] [ PROPERTIES <prop> ]
       <title>   string to show up in the title-bar of the parent window.
       <icon>    string or QIcon to set for parents title-bar.
       <nomodal> logical to set the GETs window modeless.

       NOTE: all above parameters are applied to the parent if no parent is
             supplied with [PARENT] clause. If QREAD is issued with oParent,
             then it is programmers responsibility to configure as per his/her taste.

       <prop>    code block to set the properties of the parent window.
                 The block is executed passing two arguments;
                   1. oParent
                   2. oGetList
                 This facilitates to set any property Qt provides for the GET dialog.
                 This raises the bar for the programmer but still offering utmost
                 simplicity for console programmers.

       NOTE: <prop> code block is called for every type of parent hosting the GETs.

  * hbqtwidgets/tests/pureclip.prg
  * hbqtwidgets/tests/validator.prg
    + Demonstrated the usage of above implementation.

2012-12-20 13:35 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  + hbqtwidgets/hbtoqt.ch
    + Commands translating @...QSAY...QGET... => @...SAY...GET...
       This facilitates to quickly port your existing forms without
       any extra effort. Even with a directive, you will be able to
       switch the interface, like...
         #ifdef __VIAQT__
           #include "hbtoqt.ch"
         #endif

         @ SAY GET...

  * hbqtwidgets/hbqtwidgets.hbp
    + -instfile=inc:hbtoqt.ch

  * hbqtwidgets/tests/pureclip.prg
  * hbqtwidgets/tests/validator.prg
    + Included: hbtoqt.ch and commands normalized to Harbour standards.

2012-12-20 09:09 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtgetlist.prg
  * hbqtwidgets/tests/validator.prg
    ! Fixed: oGetList:setFocus( cGet ) was not checking the type of <cGet>.

2012-12-20 02:17 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtstd.ch
    % GetList sent with @ operator.

  * hbqtwidgets/hbqtgetsys.prg
    + Implemented: SetKey() functionality.

2012-12-20 01:22 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    ! Version bump.

  * hbqtwidgets/hbqtwidgets.hbx
    * Regenerated.

  * hbqtwidgets/hbqtgetlist.prg
  * hbqtwidgets/hbqtgetsys.prg
    + Refined: the behavior of ACTION clasue of PUSHBUTTON.
       If ACTION returns a name of a GET then it is brought to
       focus. If NIL is returned, it takes usual course to next GET.
       Probably, this solves remaining issues pertaining to
       validation per GET or per form.

  * hbqtwidgets/tests/pureclip.prg
    % Demonstrates the ACTION clause usage.

2012-12-19 23:36 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/tests/pureclip.prg
    ! Fixed: process termination issue.
       Infact oWidget:close() should be called instead of :sendEvent().

2012-12-19 22:57 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtgetlist.prg
  * hbqtwidgets/hbqtstd.ch

  + hbqtwidgets/tests/pureclip.prg
    + Added: a pure clipper implementation demo.
       Note: closing the dialog with X button terminates the process properly.
             But closing via <Cancel> button keeps the process running. Looking...

  * hbqtwidgets/tests/validator.prg
    + Added: pure clipper implementation as 4th button.

  * hbqtwidgets/tests/validatormain.ui
    % Minor.

2012-12-19 19:05 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  + hbqtwidgets/hbqtbrowse.prg
  * hbqtwidgets/hbqtwidgets.hbp
    + Added: HbQtBrowse( nTop, nLeft, nBottom, nRight, oParent, oFont )
       A class to simulate TBrowse() object in pure GUI [Work-in-progress].

  * hbqtwidgets/hbqtalert.prg
    + Extended: HbQtAlert( <xMessage>, [<aOptions>], [<cColorNorm>], [<nDelay>], [<cTitle>], [<nInit>], [<oParent>] )
       [<oParent>] == The window you wish to center the alert dialog.
         By default it will be QApplication():focusWidget().

  + hbqtwidgets/tests/browser.prg
    + Added: demo application demonstrating HbQtBrowse() functionality.
       [Work-in-progress]

  * hbqtwidgets/tests/validator.prg
    % Minor.

2012-12-19 16:57 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtalert.prg
    + Extended: HbQtAlert( <xMessage>, [<aOptions>], [<cColorNorm>], [<nDelay>], [<cTitle>], [<nInit>] )
        [<nInit>] == Positions the focus on aOption[ nInit ].

  * hbqtwidgets/tests/validator.prg
    + Added arguments to HbQtAlert() call to demonstrate the usage.

2012-12-19 15:10 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtwidgets.hbx
    * Regenerated.

  * hbqtwidgets/hbqtgetlist.prg
    + Added: __hbqtRgbStringFromColorString( cToken, lExt ) -> cRgbFuncCall
    + Added: __hbqtCSSFromColorString( cColor ) -> cColorsCSS

  * hbqtwidgets/hbqtalert.prg
    + Extended: HbQtAlert( <xMessage>, [<aOptions>], [<cColorNorm>], [<nDelay>], [<cTitle>] )
        <xMessage>     == String or Array of message lines.

        [<aOptions>]   == Standard Harbour Argument

        [<cColorNorm>] == Standard Harbour Argument

        [<nDelay>]     == Seconds. Will return the option-in-focus.
          QUESTION: should it return 0 ?

        [<cTitle>] == Title to be displayed on titlebar, "Alert!" is the default.

    + Implemented: focus rectangle to be positioned on option-in-focus.

  * hbqtwidgets/hbqtgetsys.prg
    ! Used ned functions and deleted method call.

  * hbqtwidgets/tests/validator.prg
    + Added arguments to HbQtAlert() call to demonstrate the usage.

2012-12-19 08:53 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtgetsys.prg
    + Implemented: placing a focus rectangle around GET in focus.
       This eliminates the need of any hack applied to recognize
       where the user is at any given point of execution.

    + Implemented: @ ... CHECKBOX now accepts TtFfYyNn keystrokes in
       addition to SPACEBAR to toggle the state. TtYy will mark it
       and FfNn will uncheck. SPACEBAR toggles the state.
       This facilitates CLIPPER like behavior and eliminates the need
       of using mouse.

    ; With this current phase of GET system compatibility is over.
       If you have any issues or functionality refinements, please
       speak.

    ; NEXT: TBrowse() implementation.

2012-12-18 22:47 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtgetlist.prg
  * hbqtwidgets/hbqtgetsys.prg
  * hbqtwidgets/hbqtstd.ch
  * hbqtwidgets/tests/validator.prg
    + Implemented: @ ... QGET ... [TOOLTIP <cTip>]

2012-12-18 17:17 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtalert.prg
  * hbqtwidgets/hbqtgetsys.prg
  * hbqtwidgets/hbqtstd.ch
  * hbqtwidgets/tests/validator.prg
    + Implemented: @ <top>, <left>, <bottom>, <right> QGET <v> ;
                     COMBOBOX <items> [WHEN ...

                 : @ <row>, <col> QGET <v> CHECKBOX [WHEN...

    ; QCheckBox styling needs more investigation. If anyone has
       clues please forward.

2012-12-18 09:04 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  + hbqtwidgets/hbqtevent.prg
    + Added: hbqt_qtEventToHbEvent( oKeyEvent )
               Converts Qt key strokes to inkey() equivalent.
             hbqt_hbEventToQtEvent( nInKey )
               Converts inkey() key strokes to Qt equivalent.

  * hbqtwidgets/hbqtalert.prg
    + HbQtAlert() buttons can be activated by pressing first letter.

  * hbqtwidgets/hbqtgetsys.prg
  * hbqtwidgets/hbqtwidgets.hbp
    ! Fixes to navigation protocol. Were breaking QFormLayout GETs.

  * hbqtwidgets/hbqtwidgets.hbx
    * Regenerated.

  * hbqtwidgets/tests/validator.prg
    ! Minor.

2012-12-17 19:01 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  + hbqtwidgets/hbqtalert.prg
    + Replacement to alert() - HbQtAlert( cMsg, aButtons ).
       Still I am not satisfied with color management, suggessions ?

  * hbqtwidgets/hbqtgetsys.prg
    % Many improvements in navigation.
      Code normalization.

  * hbqtwidgets/hbqtstd.ch
  * hbqtwidgets/hbqtwidgets.hbp
    + Implemented: @ <top>, <left>, <bottom>, <right> QGET <v> ;
                     PUSHBUTTON <label> [ACTION <act>] [WHEN ...

  * hbqtwidgets/tests/validator.prg
    + Demo code to utilize @...PUSHBUTTON.

2012-12-17 09:15 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtgetsys.prg
  * hbqtwidgets/hbqtstd.ch
  * hbqtwidgets/tests/validator.prg
  * hbqtwidgets/tests/validatorgets.ui
    + @ ... QGET ... PUSHBUTTON ... [ A work-in-progress ]

2012-12-16 21:41 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
  * hbqtwidgets/hbqtgetsys.prg
    % Cleaned some residuals.

2012-12-16 19:31 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  - hbqt/tests/validator.hbp
  - hbqt/tests/validator.prg
  - hbqt/tests/validatorgets.ui
  - hbqt/tests/validatormain.ui
  * hbqt/tests/hbmk.hbm
    - Transferred: validator.hbp++ to hbqtwidgets/tests

  + hbqtwidgets/tests
  + hbqtwidgets/tests/hbmk.hbm
  + hbqtwidgets/tests/validator.hbp
  + hbqtwidgets/tests/validator.prg
  + hbqtwidgets/tests/validatorgets.ui
  + hbqtwidgets/tests/validatormain.ui
    + Transferred: from hbqt/tests.

  * hbqtwidgets/hbqtgetlist.prg
  * hbqtwidgets/hbqtgetsys.prg
  * hbqtwidgets/hbqtstd.ch
    + Implemented:
        @ <top>, <left>, <bottom>, <right> QGET <v> MEMOEDIT ...
        @ <top>, <left>, <bottom>, <right> QGET <v> LISTBOX <items> ...

        QSET GETSFONT [TO] <oFont>      => HbQtSet( _QSET_GETSFONT   , <oFont>   )
        QSET LINESPACING [TO] <nPixels> => HbQtSet( _QSET_LINESPACING, <nPixels> )
        QSET NOMOUSABLE [TO] <lMouse>   => HbQtSet( _QSET_NOMOUSABLE , <lMouse>  )

        @ ... QGET ... COLOR <ClipperNotation|HexNotation|RGBNotation> :
                             <"N/W*"|"#FF07C5/#CC345B"|"rgb(255,255,210)/rgb(110,100,255)">

    ; Work-in-progress for other controls. Demo is updated to contain
      new controls. Please test.

2012-12-14 08:57 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    ! Version bump to r94.

2012-12-14 08:42 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtstd.ch
    % Refined some commands.

  * hbqtwidgets/hbqtgetsys.prg
    + Prepared to honor different type of objects than QLineEdit alone.
       A work-in-progress.

  * hbqt/tests/validator.prg
    ! Fixed to release the memory when windows are closed.

2012-12-13 15:49 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtgui/qth/QFormLayout.qth
    + Uncommented some left-out methods in :addRow().
       Discovered by Dusan Majkic, thanks.

2012-12-13 13:09 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtgui/hbqt_hbqvalidator.cpp
  * hbqt/qtgui/hbqt_hbqvalidator.h
  * hbqt/qtgui/qth/HBQValidator.qth
    ! Fixed: syntactical issue where :fixup block was wrongly interpreted
       and assigned. Thanks to Luigi Ferraris for spotting the issue.

2012-12-12 18:43 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtgetsys.prg
    Many synchronizational changes.

  * hbqt/tests/validator.prg
    + Added: use of UDFs in GET system.

2012-12-12 17:24 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtgui/hbqt_init.cpp
    + Implemented: hbqt_findChild( oParent, cChildObjectName, cObjectCast )
       hbqt_findChild( oWnd, "Catalog", "QLineEdit" ) -> oLineEdit

2012-12-12 14:38 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/environ.prg
    ! Fixed: PATH setting in .sh was using Windows specific notation.
       Thanks Jadiel for the tip.

2012-12-11 18:17 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/hbmk2_qt.hb
    ! A fix for :setText() when multiline text is initiated via Qt Designer.

  + hbqtwidgets/hbqtgetlist.prg
  * hbqtwidgets/hbqtgetsys.prg
  * hbqtwidgets/hbqtwidgets.hbp
    + Separated: HbQtGetList() class in its own source.

  + hbqt/tests/validator.hbp
  + hbqt/tests/validatormain.ui
  + hbqt/tests/validatorgets.ui
  * hbqt/tests/validator.prg
    + Added: main window and window displaying GETs consumed by GET
       subsytem.

  ; All is self explanatory. Few tweaks are remaining, tomorrow.
     Guys, be ready to enter a vast world of GUI with time-tested
     GET system.

2012-12-11 12:36 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtgetsys.prg
    ! One more small fix in decimal handelling.

2012-12-11 07:05 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtgetsys.prg
    ! Fixed: jump to decimal point if picture is "@E".

2012-12-10 19:11 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqtwidgets/hbqtgetsys.prg
  * hbqtwidgets/hbqtstd.ch
    + Prepared: to be embedded with Qt Designer created .ui widgets.
       Hopefully by tomorrow a basic implementation will be in place.
       Many ideas and protocols are evolving. Idea is to have this
       integrated with Harbour GET System isolated or/and with .ui
       widgets.

  * hbqt/tests/validator.prg
    % Adjusted to take effect sub-system changes.

2012-12-10 14:36 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  + hbqtwidgets
  + hbqtwidgets/hbqtgetsys.prg
  + hbqtwidgets/hbqtstd.ch
  + hbqtwidgets/hbqtwidgets.hbc
  + hbqtwidgets/hbqtwidgets.hbp
  + hbqtwidgets/hbqtwidgets.hbx
    + Added: hbqtwidgets library which will host the components based on
       pure HbQt. This, the first, components is Harbour's GET sub-system
       usable in HbQt with pure GUI widgets. HbQt GET System almost
       simulates the Harbour GETs with <SAY>, <VALID>, <WHEN>,
       <PICTURE>, <COLOR> clauses at the minimum required to port
       console mode Clipper code to GUI. In addition provides the
       extended VALIDation protocol.

       In the coming days, Harbour's powerful GET system is scheduled
       to be integrated with Qt Designer designed widgets. A working
       prototype is in place but needs a bit more work to be committed.

  * qtcontribs.hbp
    + Added: hbqtwidget library.

  * hbqt/qtgui/hbqt_hbqvalidator.cpp
    * Cleanup.

  * hbqt/tests/hbmk.hbm
    + Added: hbqtwidgets.hbc

  * hbqt/tests/validator.prg
    - Removed: code specific to hbqtwidgets library.

  ; To use HbQt GET System you will need to link hbqtwidgets library
      with your project. Add a line to your.hbp : hbqtwidgets.hbc.

2012-12-09 12:50 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/tests/validator.prg
    ! mainly code clean-up, removed redundancy.

2012-12-09 02:05 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtgui/hbqt_hbqvalidator.cpp
    ! Small fix.

  * hbqt/tests/validator.prg
    + Many, many, many improvements.
       In nutshell, the engine is rewritten to overload Harbour's
       GET sub-system and encapsulate it in its entirety. All
       GETs related functions are working, e.g., GetActive():varGet()/Put().

     + @ ... QSAY ... QGET ... is functional.
     + PageUp/Dn navigates to First and Last gets.
     ! VALID is not evaluated if WHEN could not been validated.
     + Array GETs are working.

     ; Please test and report differences.

2012-12-07 01:27 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/tests/validator.prg
    + Demonstrated: how a Clipper form can be executed in a scrollable
       widget. Resize the window and experience how scrolling is working.
       This way we can present much larger forms then a typical Clipper
       screen could offer.

    + Implemented: "@E" and "@Snn" PICTURE functions.

2012-12-06 18:56 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/tests/validator.prg
    + Implemented: ROW/COL properties of GETs.

    + Implemented: @ <nRow>, <nCol> QSAY <exp> PICTURE <pic> COLOR <clr>.
       COLOR is not yet implemented, needs discussion.

    + Implemented: Clipper like form creation with @ SAY, @ GET commands
       given a parent window without any layout.

    + Implemented: support of QFont to be applied to SAYs and GETS.
       This automatically sets the size and

    ! Made: Clipper like form the startup display mode. Send "P" as
       parameter to invoke OOP code screen.

    ; NOTE: we are almost near to design a GUI screen with Clipper code.
            QFont supplied to the form is not set on parent window. It is
            applied only to SAYs and GETs. The rows are calculated on the
            basis of QFont:height() and each row is separated by 6 pixels.

    ;       This seems, the whole protocol can be enhanced to a greater
            horizon with a possibility to have multiple forms in one window.

2012-12-06 09:26 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    ! Version bump.

2012-12-06 08:59 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/tests/validator.prg
    % Organized the code to honor deep level of Clipper GET System
       taking use of Get and HbGetlist Classes effectively.
    + Implemented: GET is never exited even with mouse if it could
       not been validated. [ TODO: should be switchable on user request ].

2012-12-05 18:09 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/tests/validator.prg
    + Implemented: real-time validation indication in the form of
       change in background-color of edit instance. The Clipper variable
       is only updated if RETURN or TAB is pressed, just like Clipper.
    + Matured: numeric GET entry protocol. In some ways it is better
       than Clipper's. PICTURE clause is completely supported.

    ; NOTE: with this basic implementation of Harbour GET System is
            complete. Please test with your in-production code, if possible.
            If you find differences, please report. Also it will be
            helpful if you supply some complex PICTURE clauses used
            in your applications to be added to this demo code.

    ; OPINION: seems this class can be entirely ported to C++ as HBQGet.
               Should it remain as PRG class or be shifted to C++ ?

    ; NEXT: class/code to generate a data-aware form encapsulating
            @ <nRow>,<nCol> SAY <exp,...> GET <exp,...>.

2012-12-05 08:49 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/tests/validator.prg
    % Many improvements. Thanks Maurizio for helping.
       Still some visual artifacts need be covered in numeric GETs.

2012-12-05 08:49 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtgui/hbqt_hbqvalidator.cpp
  * hbqt/qtgui/hbqt_hbqvalidator.h
  * hbqt/qtgui/qth/HBQValidator.qth
  * hbqt/tests/validator.prg
    + Changed: HBQValidator( <bValidate> [, <bFixup>] ).
       the class now accepts two blocks instead of one. Second block is to
       enforce QValidator:fixup() method. The block receives the
       text of editing buffer and can be changed in the the PRG source.
    + Implemented the use of :fixup() method.
    + many enhancements in GET system overall, please test.

2012-12-04 09:39 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/tests/validator.prg
    ! More complete picture clause in numeric GETs.
    % Rearrangement of code for better usage.

2012-12-04 01:57 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/tests/validator.prg
    + Implemented: Templates for Numeric GETs, please test.
       VALID is broken if value of a numeric GET is invalid and focus
       is placed on another object with mouse-click and then returned
       to numeric GET. I am at a loss to understand the behavior of
       QValidator in this respect as why it receives :Intermediate
       return and then never set it back.

2012-12-03 19:02 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/tests/validator.prg
    + Implemented: GET Picture Templates in addition to Picture Functions.
    + Implemented: Numeric GET "+-." positioning, confirmation to pre
       and post decimal width. Currently based on variables original value.
       ;
       TODO: implementation of Picture Teplates.
    + Completed: Date GET implementation. Now it supports Set( _SET_DATEFORMAT ).
    + Implemented: mouse support as default. To switch off the mouse interaction
       call oEdit:mousable := .F. .
    + Implemented: changed background color to somewhat red of any GET if
       if focus is taken away from it by mouse action and the value
       contained in the edit buffer could not been validated with VALID
       clause. This is a visual only part and actual VALID is performed
       only by keyboard navigation.
    + Added one more field "Telephone Number:" which facilitates the
       verification of template part of picture.

    ; Please test extensively and report back if you see any issues with
       GET picture with/without template part.

2012-12-03 09:32 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/tests/validator.prg
    + Logical: always remains selected, so edit does not need backspace.
    + Numeric: right aligned if picture function does not contain "B".
    + ESC: form is closed if ESCAPE is pressed.
    + :inputValidator is called after respecting picture clause.
    ! Picture function "K" is the default behavior except is LOgicals.
       And this is the preferred way in GUI.

2012-12-01 21:20 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/tests/validator.prg
    + Applied: "Courier New" size 10 font on HbQtGet() objects.
       It offers better input experience much like Clipper.

  * hbxbp/browse.prg
    ! Fixed: long-standing bug in IdeDBU where CTRL+PgUp/Dn were
       nor refreshing the contents of rows.

2012-12-01 19:07 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/tests/validator.prg
    + Implemented: @ <nX>, <nY> QGET <v> PICTURE <pic> COLOR <color> ;
                     WHEN <when> VALID <valid> VALIDATOR <validator>;
                     CAPTION <cap>

                   QREAD

       This implementation demonstrates how Clipper code can be
       re-used in GUI environment. The implementation demonstrate
       both, OOP and COMMAND syntax usages. Execute validator.exe
       with "p" as parameter to invoke COMMAND code.

       Presently suppoted PICTURE strings are "@!" for character
       and "Y" for logicals. Others will come up next.

       COLOR clause supports Cliiper's standard 16 colors. It can be
       passed as "W+/B",   "B",    "W+/BG*", i.e., foreground/background
       pair. Only one color will be applied to text color.

       Data binding is implemented via :dataLink( bBlock ) method.

       For COMMAND syntax, to fetch set/get block, Harbour's
       GET system is used. Hope it can be exploited further.

2012-12-01 02:41 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/tests/validator.prg
    + Updated: to confirm to Clipper Get System with WHEN and VALIDS.
       The code hosts a small class inherited from QLineEdit which
       controls the edit behavior of gets both per navigation and
       input standards. ENTER and UP/DOWN arrows also behave
       per Clipper standards. The implementation completely by-pass
       mouse input, i.e., no edit is selectable with mouse click.
       This was required to implement WHEN and VALID.

       The class is still a work in progress. As I am feeling tired
       and also it is almost morning, I need to sleep. In the meantime
       examine the code and post your views/opinions/suggestions/whatever.
       Also keep in mind to suggest where such classes, which simulate,
       Clipper behavior, should be hosted.

2012-11-30 14:43 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtgui/hbqt_hbqvalidator.cpp
    % HBQValidator block returning QValidator:Intermediate if the supplied
       text is empty. This is always the case when edit object is
       presented for input the first time. Also it relieves the programmer
       to implement it on every GET manually.

2012-11-30 13:12 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtgui/hbqt_hbqvalidator.cpp
    + Implemented: QValidator::Intermediate return value.
       HOW: If the validating function return NIL as sole return-value
              OR
            NIL as third element of returned array;
            QValidator::Intermediate is returned back to QValidator::validate().

2012-11-29 12:51 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtgui/hbqt_hbqvalidator.cpp
    % Small fix to pass validation text to PRG callback as per STR API protocol.

2012-11-28 23:34 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    ! Version bump.

  * hbqt/qtgui/qth/QLineEdit.qth
    % Marked [*D=1*] for :setValidator().

  + hbqt/qtgui/qth/HBQValidator.qth
  * hbqt/qtgui/qth/filelist.hbm

  + hbqt/qtgui/hbqt_hbqvalidator.cpp
  + hbqt/qtgui/hbqt_hbqvalidator.h
  * hbqt/qtgui/hbqtgui.hbm
  * hbqt/qtgui/hbqtgui.hbx
    + Added: HBQValidator() sub-class inheriting QValidator().
       This facilitates to simulate Harbour Get System's input behavior,
       primarily in relation to picture clause at the minimum. But it
       is much more then that. A clever use can put you under total
       control what exactly you want the user to input.

       SYNTAX:  oEdit := QLineEdit( oWnd )
                oEdit:setValidator( HBQValidator( {|cText, nPos| DoValidation( cText, nPos ) } ) )

       RETURN VALUE OF VALIDATION BLOCK:
                It is important to understand the rationale of return
                value of code-block supplied as only parameter to
                HBQValidator which controls the behavior of validation.
                This can be one of the following:

                1. NIL     : will be treated as input is valid.
                2. .T.     : will be treated as input is valid.
                3. .F.     : will not allow the current character.
                4. String  : will replace the input string with returned string.
                5. Numeric : will relocate the editing cursor to this position.
                6. Array   : { cModifiedText|NIL, nCursorPos|NIL, lValid|NIL }
                             the elements corresponds to above #4, #5, #1;2;3

  + hbqt/tests/validator.prg
    + Added: a demonstration appln consuming HBQValidator() with
       3 different constraints with many sub-variants which clearly
       shows the power of this class. You can experiment further and
       can add interesting combinations in this demo.

2012-11-26 11:43 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/docwriter.ui
  * hbide/docwriter.prg
  * hbide/harbourhelp.prg
  * hbide/misc.prg
    - Removed: $TESTS$ token from Ide Documentation Writer as per Harbour
       specifications. This token is removed all-over.

2012-11-19 12:27 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    ! Version bump.

  * hbide/saveload.prg
    ! Fixed: a nstry regression where QFontDialog() constructed with
        a parent was always returning parents font, no matter what
        method you adopted.

2012-11-16 22:09 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    ! Version bump.

  * hbide/docwriter.prg
    + Added: "Run time error" $TEMPLATE$ used in doc/en/subcodes.txt.

  ; Now all documentation files in doc/en/*.txt are loaded and saved
    without any difference, except for where COMPLIANCE PLATFORMS FILES
    order is changed. Content remain the same only order chages.

2012-11-16 19:54 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    ! Version bump.

  * hbide/docwriter.ui
    % Changed: Various QLineEdit()s with QPLainTextEdit()s to accomodate
        multi-line help sections.

  * hbide/docwriter.prg
  * hbide/harbourhelp.prg
  * hbide/misc.prg
    ! Changed: to accomodate multi-line entries.
    + Added: comboBox on Documentation Writer's toolbar containing all the
        function names within opened file. This facilitates to switch to
        any function from within single load. Note that each function,
        if modified, has to be saved before loading another.
    + Implemented: logic to retain the blank sections also if present
        in the function body. This facilitates to have exact same content,
        except for the modified one, in the saved file.

  ; TOBE VERIFIED:
    1. some harbour/doc/en/.txt files have different order
       of 2 keywords as:  COMPLIANCE FILES PLATFORMS whereas majority of
       documents have COMPLIANCE PLATFORMS FILES.
       should these be fixed all together or when some is modified ?

    2. contrib/hbct/doc/en/*.txt do not contain TEMPLATE section
       in any of the files. All are functions only.
       These need to be addressed all at once.

  ; DONE: Add "Run time error" template entry.

2012-11-16 07:31 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    ! Version bump.

  * hbqt/qtgui/hbqtgui.hbx
    + Added: QGesture++ functions.

2012-11-14 18:23 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    ! Version bump.

  * hbqt/qtgui/hbqt_init.cpp
    + Added: QGestureEvent handelling.

  * hbqt/qtgui/hbqtgui.ch
    + Added: constants for QGesture_++.

  * hbqt/qtgui/qth/filelist.hbm
    + Added: classes as per below.

  + hbqt/qtgui/qth/QGesture.qth
  + hbqt/qtgui/qth/QGestureEvent.qth
  + hbqt/qtgui/qth/QPanGesture.qth
  + hbqt/qtgui/qth/QPinchGesture.qth
  + hbqt/qtgui/qth/QSwipeGesture.qth
  + hbqt/qtgui/qth/QTapAndHoldGesture.qth
  + hbqt/qtgui/qth/QTapGesture.qth
    + Implemented: QGesture() API.

  * hbqt/qtgui/qth/QWidget.qth
    + Added: method :grabGesture().

  ; NOT TESTED. I do not have any touch-screen environments.
      Please do so if someone has and send the findings on the list.

2012-11-14 08:49 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    ! Version bump.

  * hbxbp/dbu.prg
    - Removed: local error handeler.

2012-11-12 19:20 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/main.prg
  * hbide/misc.prg
    + Demonstrated the use of QGraphicsEffect() when X button is pressed.

2012-11-12 18:56 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtgui/hbqtgui.hbx
    + Added: new classes introduced today.

2012-11-12 18:33 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtcore/hbqt_init.cpp
  * hbqt/qtgui/hbqt_init.cpp
    + Added: more signals with qreal,QBrush,QPointF,BlurHints;
        needed for new added classes as per below.

  * hbqt/qtgui/hbqtgui.ch
    + Added: QGraphicsEffect_* + relevant constants.

  * hbqt/qtgui/qth/filelist.hbm
  + hbqt/qtgui/qth/QGraphicsBlurEffect.qth
  + hbqt/qtgui/qth/QGraphicsColorizeEffect.qth
  + hbqt/qtgui/qth/QGraphicsDropShadowEffect.qth
  + hbqt/qtgui/qth/QGraphicsEffect.qth
  + hbqt/qtgui/qth/QGraphicsOpacityEffect.qth
    + Added: Qt 4.6 introduced classes.

  * hbqt/qtgui/qth/QWidget.qth
    + Added: Qt 4.6 introduced method :setGraphicsEffect() exploiting
        above classes.

  ; TODO: example code to be a part of hbqt/tests.
  ; DONE: implemented in HbIDE when X button is clicked to close.

2012-11-12 14:08 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    ! Version bump.

  * hbide/main.prg
    + Opened: left-hand side "Projects Tree" docking widget if HbIDE is
       started with "HBP" mode as - hbide.exe myproject.hbp

  * hbxbp/dbu.prg
    + Added: "Natural Order" prompt in deop-down list of "Indexes" in HbpDBU.
        Requested by Massimo.

  * hbxbp/hbxbp.hbp
    ! Fixed: to transfer binaries in Harbour's lib folder.
        This had given me a lot of hedaches, thanks GVS for the hint.

2012-11-11 14:36 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    ! Version bump.

  * hbide/docwriter.prg
    ! Minor fix to prev commit.

2012-11-11 11:48 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    ! Version bump.

  * hbide/actions.prg
    ! Log standing bug fix in "Recent Files/Projects". Thanks Grzegorz.

  * hbide/docwriter.prg
    ! Fixed: to eliminate most of the pitfalls as per previous commit.

  ; WORKING:
    1. Now function name holds the key if a function documentation will be
         replaced or added to the .txt file being modified. This means,
         changing the name of the function will add an entry with new name.
         The match is case insensitive, i.e., WvgCheckBox() will be equal to
         WvgCHECKbox().

    2. All the other upper entries are retained as is if some exist, i.e. like
         copyright notices or SVN header.

    3. Has eliminated the keyword $FUNCNAME$ from entire repository and
         is replaced by $NAME$.

  ; USABILITY: it is recommended that now you use HbIDE to build / edit
               Harbour documentation. The tool is ready to go.

2012-11-10 23:40 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    ! Version bump.

  * hbide/docwriter.prg
  * hbide/harbourhelp.prg
  * hbide/misc.prg
    + Implemented: HbIDE Documentation Writer updated to load/save
       documentation from disk files with .txt extention. This will
       facilitate the visual way to update Harbour documentation per
       Nanforum standards, which at present, is employed in Harbour
       all-over.

    ; WORKING:
      Editing Existing Documentation:

        1. Click on "Load from .txt file" toolbar icon.
        2. If .txt contains many functions then a list will be presented
             to select one.
        3. Make the necessary changes.
        4. Click on "Save written/updated documenttaion" toolbar icon.
        5. A confirmation message will be displayed if it is saved successfully.

      Creating New Documentation:

        1. Click on "Clear Foem" toolbar icon. Necessary only if you worked
             on some other function previously.
        2. Fill in the fields.
        3. Click on "Save written/updated documenttaion" toolbar icon.
        4. FileSave dialog will be presented to obtain folder where to save.
             FileName will be auto-constructed from type and function name.
             You can keep it as is or change per your liking.
        5. A confirmation message will be displayed if it is saved successfully.

      Both ways SVN Id header will be placed on top of the documentation file.

    ; WHAT WE CAN LOOSE IF EXISTING DOCUMENTATION IS EDITED:

        1. Copyright notices posted on top of the file.
        2. $COMPLIANCE$ is converted to $PLATFORMS$ and is only oneliner.
        3. If $COMPLIANCE$ and $PLATFORMS$ both are present then only
             $COMPLIANCE$ is retained.
        4. Leading "*" will not be present
        5. may be more but I have observed above differences
             while experimenting with harbour/doc/en/*.txt files.

2012-11-10 10:56 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    ! Version bump.

  * hbqt/qtcore/hbqtcore.ch
    + Added: QLocate_* constants representing languages.

2012-11-09 12:16 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    ! Version bump.

  * hbqt/qtmultimedia/hbqtmultimedia.hbx
  * hbqt/qtnetwork/hbqtnetwork.hbx
  * hbqt/qtopengl/hbqtopengl.hbx
  * hbqt/qtscript/hbqtscript.hbx
  * hbqt/qtsql/hbqtsql.hbx
  * hbqt/qtsvg/hbqtsvg.hbx
  * hbqt/qtwebkit/hbqtwebkit.hbx
  * hbqt/qtxml/hbqtxml.hbx
    ! Converted: classnames from upper to camel case. [ Finished ].

2012-11-09 10:42 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    * As Ususal.

  * hbqt/qtcore/hbqtcore.hbx
  * hbqt/qtdeclarative/hbqtdeclarative.hbx
  * hbqt/qtdesigner/hbqtdesigner.hbx
  * hbqt/qtgui/hbqtgui.hbx
    ! Converted: classnames from upper to camel case.
       A work-in-progress.

  * hbqt/qtgui/qth/filelist.hbm
    ! Rearranged: class names. One was unorganized.

2012-11-08 15:35 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    + As Ususal.

  * hbide/main.prg
    - Removed: one double call to animate elements.
       It should reduce load time considerably on some OS's.

  * hbqt/hbmk2_qt.hb
    + Implemented: :setShortcut() property assignment via Qt Creator.

2012-11-06 14:34 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
  * hbide/themes.prg
    ! Fixed: bound-error checking reported by Alain.

2012-11-05 13:42 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/changelog.ui
  * hbide/docviewgenerator.ui
  * hbide/docwriter.ui
  * hbide/editor.ui
  * hbide/environ.ui
  * hbide/environments.ui
  * hbide/fetchdate.ui
  * hbide/finddialog.ui
  * hbide/findinfiles.ui
  * hbide/findinfilesex.ui
  * hbide/findsource.ui
  * hbide/format.ui
  * hbide/funclist.ui
  * hbide/mainwindow.ui
  * hbide/managetoolbox.ui
  * hbide/panels.ui
  * hbide/projectpropertiesex.ui
  * hbide/projectwizard.ui
  * hbide/searchreplace.ui
  * hbide/searchreplacepanel.ui
  * hbide/selectionlist.ui
  * hbide/selectproject.ui
  * hbide/setup.ui
  * hbide/shortcuts.ui
  * hbide/skeletons.ui
  * hbide/themes.ui
  * hbide/themesex.ui
  * hbide/toolsutilities.ui
  * hbide/updown.ui
  * hbide/updown_v.ui
    + Wrapped: with style sheet having font 8pt Arial.
       This solves the font issue with various dialogs on different OSes.

2012-11-04 21:50 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    ! Revision Bumped.

  * hbide/setup.ui
    + Added: stylesheet with "font: 8pt Arial".
       Experimental: hopefully it will resolve distorted dialog issue on *nixes.

  * hbqt/hbmk2_qt.hb
    ! Fixed to parse :setStyleSheet() call properly.

  * hbqt/qtgui/hbqtgui.ch
    + Added: yet not usable constants to honor QGesture and QTouchEvent(s).

2012-11-01 09:10 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
  * hbide/saveload.prg
    ! Fixed: RTE reported by Maurizio.
    ; NOTE: this functionality has been discontinued.

2012-10-25 14:12 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/tests/cls_dbstruct.prg
  * hbqt/tests/dbstruct.prg
    % Changed: class name symbolizing the .ui manipulation in HbIDE interface
       from ui_* to uie_*. This was documented in ChangeLog but I forget
       to update the demo project files.

2012-10-24 16:27 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    * Usual: last commit info.

  * hbide/requests.ch
    + Added: missing codepages from prev commit.

2012-10-24 15:12 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    * Usual: last commit info.

  + hbide/requests.ch
    + Added: header to REQUEST all codepages Harbour supports.
       Just in case...

  * hbide/actions.prg
  * hbide/docks.prg
  * hbide/editor.prg
  * hbide/main.prg
  * hbide/misc.prg
  * hbide/saveload.prg
  * hbide/sources.prg
    + Added: <Main Menu><Encoding> option.
       It displays the codepages in this notation:
         Harbour Codepage Name : Unique Codepage ID => "RU866 : cp866"

    + Implemented: per source Harbour supported codepage.
       Now you can write sources supporting different code pages for
       strings inside source text. Each edit instance can have its own
       codepage which can be selected from <Encoding> main-menu option.
       HbIDE remembers codepage associated with a source. When selecting
       a codepage from <Encoding> option, you will be prompted to set
       it as "default". The <Default> codepage will be applied to any
       new source brought to HbIDE for editing.

    ; IMPORTANT : Please read
       1. Setup this current commit or release.
       2. DO NOT execute HbIDE.
       3. Open hbide.ini you are supplying to execute HbIDE.
       4. Change: CurrentCodec=_HarbourCodePageName_ =>
                  CurrentCodec=EN
       5. Execute HbIDE.
       6. Notice the statusbar of HbIDE where codepage entry should be
            visible as "Enc: EN | EN".
       7. First part denotes codepage of this source, second part
            default codepage.
       8. If you need to change the codepage of a source, make sure that
            it has not been modified before the change, initiate change
            from <Encoding> option, close HbIDE, do not save the source
            when prompted, run HbIDE again. This action can be taken for
            multiple source instances. Just REMEMBER that you have not
            to save the source after changing the codepage.

    ; THANKS : Special thanks to Grzegorz and Maurizio for helping me
               understand what is happening under the hood.

      Please make extensive tests. Regression is possible.

2012-10-24 14:31 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  + Applied patch by Francesco Perillo (as explained below), thank you.

  * qtcontribs.hbp
    ! all not-essential Qt modules are remmed by default.
      You need to remove the remark if you want them to be compiled.
      Too much problems reported for aborted builds. In the future we may
      add checks and skip modules missing include files, for the moment it
      will be programmers responsability to un-rem them
    + added -hbcontainer so that the error line about nm is not shown

  * hbide/hbide.hbp
    ! added instpath to current harbour BIN path. This means that hbide
      will be copied in the same directory where harbour executable is !
      This will work both for simple "make" and for "make install"
    ! modified output dir that is anyway replaced by instpath directive

  * hbxbp/hbxbp.hbp
    + added $hb_pkg_install.hbm
    ! changed path for lib creation

  * hbxbp/hbxbp.hbc
    + added libpaths directive. This adds a new lib directory so the linker
      can find the files created in the path set in hbxbp.hbp file

  * hbqt/hbqt_common.hbm
    ! changed lib target directory
    + copied $hb_pkg_install.hbm content and modified to fit hbQt build method.
      the standard hbm file uses lib name to create a subdir where to store its
      files during install. This is ok for simple libraries like hbxbp,
      where only one lib is created, while it is a problem for hbQT where several
      libraries are created... otherwise we would get addons/hbqtcore addons/hbqtgui.
      no way....  So the changes was just to set hbqt as target directory,
      all the rest unmodified...

  * hbqt/hbqt.hbc
    + added libpaths directive. This adds a new lib directory so the linker
      can find the files created in the path set in hbqt_common.hbm file

2012-10-14 13:05 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    * Usual: last commit info.

  * hbide/actions.prg
    ! Fixed: "New" icon on the toolbar was not working due to spells.

  * hbide/sources.prg
    ! Fixed: adding a source through "New" menu or toolbar option was
       asking for the file location twice.

  * hbxbp/filedialog.prg
    ! Changed: XbpFileDialog():saveAs() consuming QFileDialog's
        static function instead of old-fashioned dialog.
        This fixes the issue where default file name was not populated
        in the filename field.

2012-10-14 00:35 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    * Usual: last commit info.

  * hbxbp/browse.prg
  * hbxbp/dbu.prg
    ! Fixed: nasty visual artifacts in XbpBrowser() where columns were
       not displayed in synchronization with navigation and viewport
       coordinates. Also vertical navigation with page-up/down was
       behaving erratic sometimes. Please review me.

2012-10-13 18:47 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    * Usual: last commit info.

  * hbide/actions.prg
  * hbide/main.prg
    ! Fixed: firing of "Launch Project" action twice.

2012-10-13 14:39 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * Added: SVN Properties.
     Please report if any file is having different than required properties.

2012-10-13 14:07 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbxbp/dbu.prg
    ! Fixed: a nasty bug that was crashing IdeDBU.

2012-10-13 13:02 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbxbp/browse.prg
  * hbxbp/generic.prg
    ! Fixed: Same value XBP constants clubbed in one SWITCH statement.

2012-10-13 09:51 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    * Reflects: r30 - the one last.

2012-10-13 09:39 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbxbp/hbxbp.hbx
    * Leftover from prev commit.

2012-10-13 09:26 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  - hbide/xbpaddons
    - Moved: to hbxbp where these belongs.
  * hbide/hbide.hbp
    - Removed: entries specific to xbpaddons lib.
  * hbide/hbide_v.ch
    * Auto generated.
  * hbide/projmanager.prg
    * Minor.

  + hbxbp/resources
    + All *.png resources.
  + hbxbp/dbu.prg
  + hbxbp/hbpdbstruct.ui
  + hbxbp/hbpfetchdate.ui
  + hbxbp/hbptables.ui
  + hbxbp/misc.prg
  + hbxbp/reports.prg
  + hbxbp/xbp.qrc

  * hbxbp/hbxbp.hbp
    + Added: moved files from hbide/xbpaddons.

2012-10-08 14:09 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  + hbide/hbide_v.ch
    + Readded: the header containing latest revision number.
       This is done because otherwise HbIDE cannot be built by a
       user who has not properly set QtContribs build environment,
       which, along other things, require subversion client installed
       on his machine. Mostly it will never be required for average user
       but just in case...

       NOTE: this will always publish one revision less than the current
             in HbIDE title-bar.

2012-10-08 12:38 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/edit.prg
  + hbide/qtcore.txt
  + hbide/qtgui.txt
  + hbide/qtnetwork.txt
    + Added: not-on-qt-sources dependent functions list of HbQt modules.
       Has been a constant source of building HbIDE on folders which
       are not in synch with HbQt folder locations.

2012-10-08 07:36 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/dict.prg
  * hbide/main.prg
  * hbide/saveload.prg
    % Fixed: regression about duplicated CASE constants in SWITCH statement.

2012-10-08 01:24 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbxbp/generic.prg
    % Changed: one SWICH statement to DO CASE because Xbase++ defines
      two alignment constants to "0" until I resolve this issue.

2012-10-07 17:01 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbxbp/appevent.prg
    ! Fix to prev fix.

2012-10-07 16:59 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbxbp/appevent.prg
    ! Fixed: commented-out duplicate key values generated by Xbase++
       for some xbeK_CTRL_* contstants.

2012-10-07 16:06 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbxbp/xbp.ch
    ! Fixed: some wrong constants.
       Thanks Przemek for introducing duplicate case constants compile
       time check which could detect these type of error, something
       rare to debug otherwise.

2012-10-07 15:34 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/hbmk2_qt.hb
    % Changed: the version guard agaisnt which a class is compiled.
       Earlier every class was guarded against v4.5.
       Now class is guarded against minimum of v4.5 or defined for
       a class in .qth in CLASS section.
         <CLASS>
         ...
         Version = 0x040n00
         </CLASS>

       This empowers HbQt engine to add any class comes with new version
       of Qt.

2012-10-07 12:22 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtopengl/qth/QGLFramebufferObjectFormat.qth
    % Versionized: mipmap() and setMipmap() methods under [*V=0x040800*]

2012-10-06 02:23 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * qtcontribs.hbp
    + Added: SVN properties.
       May be absense of these was responsible to behave erratically on Linux.

2012-10-05 17:37 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/main.prg
    + Enabled: Codepage UTF-8 by default.

  * hbqt/qtgui/hbqt_init.cpp
    ! Fixed: a nasty implementation belonging to UTF-8 codepage.
       "UTF8" => "UTF-8"
       This caused unnecessary noise in the past.

2012-10-05 16:32 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide.hbp
    - Deleted: -vcshead=hbide_v.ch

  * qtcontribs.hbp
    + Added: -vcshead=hbide/hbide_v.ch

2012-10-05 14:35 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  - hbide/hbide_v.ch
    - Deleted: header to fetch SVN revision no.

  * hbide/hbide.hbp
    + Added: -vcshead=hbide_v.ch
       This generates the hbide_v.ch at build time and is included in
       main.prg and misc.prg.
    ; TODO: one common function to pull this info than at two places.

2012-10-05 12:09 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide_v.ch
    * Version change: always to last than current one. How to do ???

  * hbqt/qtcore/hbqt_bind.cpp
    ! Optimizations: in new protocol.

  * hbqt/tests/qtrevamp.prg
    5 Changed: Statics to locals.

2012-10-04 17:22 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtcore/hbqt_bind.cpp
    + Added: hbqt_bindAddConnected(), hbqt_bindDelConnected() functions.

  * hbqt/qtcore/hbqt_misc.prg
    + Added: class HbQtConnecteds().

    IMPLEMENTED: the objects having any signal connected to remain alive
                 irrespective of the Harbour variable scope. Uptil now
                 a :connect() to be functional, the variable holding the
                 object had to remain in scope till the life of that
                 connect's life-span. Now it is not needed. Below is
                 the example ( hbqt/tests/qtrevamp.prg : snippet ):

                 STATIC FUNCTION BuildMenuBar( oWnd )
                    LOCAL oMenu1, oMenuBar

                    STATIC oItemIns, oItemMod       /*****  STATICS ******/

                    oMenuBar := QMenuBar( oWnd )

                    oMenu1 := QMenu( oMenuBar )
                    //
                    oMenu1:setTitle( "&Options" )

                    IF empty( oItemIns )
                       oItemIns := QAction( oWnd )
                       oItemIns:setText( "&MessageBox()" )
                       oItemIns:connect( "triggered()", {|| DlgMBox( "Yes" ) } )
                    ENDIF

                    IF empty( oItemMod )
                       oItemMod := QAction( oWnd )
                       oItemMod:setText( "&ContextMenu()" )
                       oItemMod:connect( "triggered()", {|| ContextMenu( oWnd ) } )
                    ENDIF

                    oMenu1:addAction( oItemIns )
                    oMenu1:addAction( oItemMod )

                    oMenuBar:addMenu( oMenu1 )

                    oWnd:setMenuBar( oMenuBar )

                    RETURN NIL


               =>


                 STATIC FUNCTION BuildMenuBar( oWnd )
                    LOCAL oMenu1, oMenuBar

                    LOCAL oItemIns, oItemMod         /***** LOCALS *****/

                    oMenuBar := QMenuBar( oWnd )

                    oMenu1 := QMenu( oMenuBar )
                    //
                    oMenu1:setTitle( "&Options" )

                    IF empty( oItemIns )
                       oItemIns := QAction( oWnd )
                       oItemIns:setText( "&MessageBox()" )
                       oItemIns:connect( "triggered()", {|| DlgMBox( "Yes" ) } )
                    ENDIF

                    IF empty( oItemMod )
                       oItemMod := QAction( oWnd )
                       oItemMod:setText( "&ContextMenu()" )
                       oItemMod:connect( "triggered()", {|| ContextMenu( oWnd ) } )
                    ENDIF

                    oMenu1:addAction( oItemIns )
                    oMenu1:addAction( oItemMod )

                    oMenuBar:addMenu( oMenu1 )

                    oWnd:setMenuBar( oMenuBar )

                    RETURN NIL



   ; WARNING:    The code using WITH OBJECT (xhb) implementation must declare a
                 seperate variable for each object. For example:


                 FUNCTION ShowForm()
                    LOCAL oQtWin, oQtCent, oQtBtn

                    WITH OBJECT oQtWin := QMainWindow()
                       :setObjectName( "MainWin" )
                       :resize( 600, 600 )
                       :setWindowTitle( "Testing" )

                       WITH OBJECT oQtCent := QWidget( hb_QWith() )
                          :setObjectName( "centralWidget" )

                          WITH OBJECT oQtBtn := QPushButton( hb_QWith() )
                             :setObjectName( "btn1" )
                             :resize( 100, 25 )
                             :move( 10, 10 )
                             :setText( "Premi qui" )
                             :connect( "clicked()", { || Qclicked() } )
                          END WITH

                          WITH OBJECT oQtBtn := QPushButton( hb_QWith() )
                             :setObjectName( "btn2" )
                             :resize( 100, 25 )
                             :move( 10, 50 )
                             :setText( "Premi li" )
                             :connect( "clicked()", { || Qclicked1() } )
                          END WITH

                       END WITH

                       :setCentralWidget( oQtCent )
                    END WITH

                    oQtWin:Show()

                    RETURN oQtWin


               =>


                 FUNCTION ShowForm()
                    LOCAL oQtWin, oQtCent, oQtBtn, oQtBtn_1

                    WITH OBJECT oQtWin := QMainWindow()
                       :setObjectName( "MainWin" )
                       :resize( 600, 600 )
                       :setWindowTitle( "Testing" )

                       WITH OBJECT oQtCent := QWidget( hb_QWith() )
                          :setObjectName( "centralWidget" )

                          WITH OBJECT oQtBtn := QPushButton( hb_QWith() )
                             :setObjectName( "btn1" )
                             :resize( 100, 25 )
                             :move( 10, 10 )
                             :setText( "Premi qui" )
                             :connect( "clicked()", { || Qclicked() } )
                          END WITH

                          WITH OBJECT oQtBtn_1 := QPushButton( hb_QWith() )
                             :setObjectName( "btn2" )
                             :resize( 100, 25 )
                             :move( 10, 50 )
                             :setText( "Premi li" )
                             :connect( "clicked()", { || Qclicked1() } )
                          END WITH

                       END WITH

                       :setCentralWidget( oQtCent )
                    END WITH

                    oQtWin:Show()

                    RETURN oQtWin

2012-10-04 00:45 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * ChangeLog
    + Added: SVN properties.

2012-10-04 00:41 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  + hbide/managetoolbox.ui
    + Work-in-progress.

  + hbide/hbide_v.ch
    + Added: header created with hbmk2 -vcshead= option to change HbIDE
       revision number displayed on the title bar and about dialog.

  * hbide/main.prg
  * hbide/misc.prg
    % Changed: revision no on titlebar and about dialog.

  + hbqt/qtdesigner/hbqtdesigner.ch
  + hbqt/qtnetwork/hbqtnetwork.ch
    + Added: dummy headers to be uniform with all libs.

  * qtcontribs.hbp
    + Added: qtwebkit library and commented out.

2012-10-01 17:01 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbaddons.hbp
  * qtcontribs.hbp
    % Renamed: hbaddons => qtcontribs as per discussion with Viktor.
       We all supported his viewpoint.

2012-09-30 09:50 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtsql/qth/QSqlQuery.qth
    ! Fixed: error where build was failing, a regression.

2012-09-29 22:18 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbxbp/dialog.prg
  * hbxbp/menubar.prg
  * hbxbp/tabpage.prg
  * hbxbp/toolbar.prg
    % Modifications to construct widgets with proper parenting.
       This may result in better protol to free objects from
       GC point of view.

2012-09-29 21:58 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/hbide.qrc
  * hbide/resources/designer.png
  + hbide/resources/dockingwidgets.png
  + hbide/resources/ideparts.png
  + hbide/resources/menu.png
  + hbide/resources/selectproject.png
  + hbide/resources/toolbars.png
    + Added: new images to enrich menu options.

  * hbide/xbpaddons/dbu.prg
  * hbide/xbpaddons/reports.prg
    ! Minor.

  * hbide/actions.prg
  * hbide/console.prg
  * hbide/docks.prg
  * hbide/docwriter.prg
  * hbide/edit.prg
  * hbide/editor.prg
  * hbide/findreplace.prg
  * hbide/hbqtoolbar.prg
  * hbide/main.prg
  * hbide/misc.prg
  * hbide/parts.prg
  * hbide/saveload.prg
  * hbide/shortcuts.prg
  * hbide/themes.prg
  * hbide/uisrcmanager.prg
    % Optimizations.
    + Implemented: concept of manageable tool-box containing almost
       entire set of actions spread across menus and toolbars. This
       tiny toolbox can be called with Ctrl+M and appears right near
       the editing cursor position. The interface to manage this toolbox
       is underway, which beside other things, will facilitate to
       configure it visually as to which icons, at what position:row-col,
       should appear. The goal is to allow users to hide all toolbars from
       applications window and call this toolbox whenever there is a need.
       A work-in-progress. But the toolbox is functional with Ctrl+M.

  * hbide/projectwizard.prg
  * hbide/projmanager.prg
    + Advanced: "New Project Wizard".

2012-09-29 19:15 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbide/docviewgenerator.ui
    % Refined: the working of slider of tree and view widgets, reported
      on users-list. The tree pane area was unable to be expanded on
      the right and hence functions list contents were not visible
      properly.

2012-09-29 19:10 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtcore/hbqt_bind.cpp
    % Optimization leading to proper object destruction on Qt level,
       in certain cases. This optimization has no visible impact, but
       certainly improves memory consumption in applications which
       have high rate of creation/destruction cycles.

2012-09-29 16:43 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbqt/qtgui/qth/QBoxLayout.qth
  * hbqt/qtgui/qth/QGridLayout.qth
  * hbqt/qtgui/qth/QLayout.qth
  * hbqt/qtgui/qth/QStandardItemModel.qth
    ! Fixed: the GPF og HbIDE on EXIT on MSVC and *nix systems discovered
       by Przemek. On MSVC it is fixed, and nixes, I hope should have been
       fixed too. Can someone confirm ?

2012-09-29 16:31 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * hbaddons.hbp
    + Added: all Qt based libraries, but kept commented. Please uncomment one
       required by you.

2012-09-29 15:39 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  + Initial commit in decided repo after all commits below in a temp repo
    to make the code compilable and workable.

2012-09-29 12:55 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  * ChangeLog
  * hbaddons.hbp
    + Added: missing SVN properties markers.

2012-09-29 12:25 UTC-0800 Pritpal Bedi (bedipritpal at hotmail.com)
  + SVN Properties.

2012-09-29 19:30 UTC+0100 Maurizio la Cecilia (m.lacecilia at gmail.com)
  + hbaddons.hbp
    + added .hbp for to make it easy to build in a shot with hbmk2
  * hbide/hbide.hbp
  * hbide/xbpaddons/xbpaddons.hbp
  * hbnetioqt/hbnetioq.hbp
  * hbqt/hbqt_common.hbm
  * hbxbp/hbxbp.hbp
    * changed the path to output the built libs/exes
  * hbide/xbpaddons/dbu.prg
    * correct the references of renamed ui files in Harbour rev. 18121

2012-09-29 17:30 UTC+0100 Maurizio la Cecilia (m.lacecilia at gmail.com)
  + Initial Commit.